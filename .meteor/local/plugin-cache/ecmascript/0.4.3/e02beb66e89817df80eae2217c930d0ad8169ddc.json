{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../collections/musicProfile.js","imported":["MusicProfiles"],"specifiers":[{"kind":"named","imported":"MusicProfiles","local":"MusicProfiles"}]},{"source":"../collections/accompanistProfile.js","imported":["AccompanistProfile"],"specifiers":[{"kind":"named","imported":"AccompanistProfile","local":"AccompanistProfile"}]},{"source":"../collections/account.js","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"../collections/competitions.js","imported":["MusicCompetitions"],"specifiers":[{"kind":"named","imported":"MusicCompetitions","local":"MusicCompetitions"}]},{"source":"../collections/transactions.js","imported":["Transactions"],"specifiers":[{"kind":"named","imported":"Transactions","local":"Transactions"}]},{"source":"../collections/testData.js","imported":["TestAccountData"],"specifiers":[{"kind":"named","imported":"TestAccountData","local":"TestAccountData"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"var _musicProfile = require('../collections/musicProfile.js');\n\nvar _accompanistProfile = require('../collections/accompanistProfile.js');\n\nvar _account = require('../collections/account.js');\n\nvar _competitions = require('../collections/competitions.js');\n\nvar _transactions = require('../collections/transactions.js');\n\nvar _testData = require('../collections/testData.js');\n\nwindow.MusicProfiles = _musicProfile.MusicProfiles;\nwindow.AccompanistProfile = _accompanistProfile.AccompanistProfile;\nwindow.Accounts = _account.Accounts;\nwindow.MusicCompetitions = _competitions.MusicCompetitions;\nwindow.Transactions = _transactions.Transactions;\n\n// Helper functions\n\nfunction wrapDoc(obj) {\n  if (obj) {\n    return { field: \"update\", doc: obj };\n  } else {\n    return { field: \"insert\", doc: null };\n  }\n}\n\n// Global Template Helpers\n\nTemplate.registerHelper('defaultTransaction', function () {\n  return { musician: Meteor.userId(),\n    accompanist: FlowRouter.getParam(\"profileId\"),\n    status: 'Offered' };\n});\n\nTemplate.registerHelper('ownProfile', function () {\n  event.preventDefault();\n\n  return FlowRouter.getParam(\"profileId\") == Meteor.userId();\n});\n\nTemplate.registerHelper('userId', function () {\n  event.preventDefault();\n  return Meteor.userId();\n});\n\nTemplate.registerHelper('getProfileRoute', function () {\n  var id = arguments.length <= 0 || arguments[0] === undefined ? Meteor.userId() : arguments[0];\n\n  return \"/profile/\" + id;\n});\n\nTemplate.registerHelper('transactionsDoc', function () {\n  event.preventDefault();\n  var allTransactions = { asMusician: _transactions.Transactions.find({ musician: Meteor.userId() }).fetch(),\n    asAccompanist: _transactions.Transactions.find({ accompanist: Meteor.userId() }).fetch() };\n  console.log(allTransactions);\n  return allTransactions;\n});\n\nTemplate.registerHelper('profileDoc', function () {\n  var id = arguments.length <= 0 || arguments[0] === undefined ? FlowRouter.getParam(\"profileId\") : arguments[0];\n\n  event.preventDefault();\n  if (!id) {\n    id = Meteor.userId;\n  }\n  return wrapDoc(_musicProfile.MusicProfiles.findOne({ userId: id }));\n});\n\nTemplate.registerHelper('accountDoc', function () {\n  var id = arguments.length <= 0 || arguments[0] === undefined ? FlowRouter.getParam(\"profileId\") : arguments[0];\n\n  event.preventDefault();\n  if (!id) {\n    id = Meteor.userId;\n  }\n  return wrapDoc(_account.Accounts.findOne({ userId: id }));\n});\n\nTemplate.registerHelper('accompanistProfileDoc', function () {\n  var id = arguments.length <= 0 || arguments[0] === undefined ? FlowRouter.getParam(\"profileId\") : arguments[0];\n\n  event.preventDefault();\n  if (!id) {\n    id = Meteor.userId();\n  }\n  return wrapDoc(_accompanistProfile.AccompanistProfile.findOne({ userId: id }));\n});\n\nTemplate.registerHelper('musicCompetitionsDoc', function () {\n  event.preventDefault();\n  // array =  MusicCompetitions.find().fetch();\n  return [{ label: \"First Manhattan International Music Competition\", value: \"First Manhattan International Music Competition\" }];\n});\n\n// Local Template Helpers\n\nTemplate.upsertProfileForm.helpers({\n  instrumentList: function () {\n    function instrumentList() {\n      return [\"Voice\", \"Bagpipes\", \"Banjo\", \"Bass drum\", \"Bassoon\", \"Bell\", \"Bongo\", \"Castanets\", \"Cello\", \"Clarinet\", \"Clavichord\", \"Conga drum\", \"Contrabassoon\", \"Cornet\", \"Cymbals\", \"Double bass\", \"Dulcian\", \"Dynamophone\", \"Flute\", \"Flutophone\", \"Glockenspiel\", \"Gongs\", \"Guitar\", \"Harmonica\", \"Harp\", \"Harpsichord\", \"Lute\", \"Mandolin\", \"Maracas\", \"Metallophone\", \"Musical box\", \"Oboe\", \"Ondes-Martenot\", \"Piano\", \"Recorder\", \"Saxophone\", \"Shawm\", \"Snare drum\", \"Steel drum\", \"Tambourine\", \"Theremin\", \"Triangle\", \"Trombone\", \"Trumpet\", \"Tuba\", \"Ukulele\", \"Viola\", \"Violin\", \"Xylophone\", \"Zither\"].map(function (obj) {\n        return { label: obj, value: obj };\n      });\n    }\n\n    return instrumentList;\n  }()\n});\n\n// Hooks (AutoForm)\n// All client side-> fix for security later\n\n// AutoForm.hooks({\n//   bookAccompanist: {\n//     before: {\n//       insert: function(doc) {\n//         console.log(\"Running\")\n//         if(Meteor.userId()){\n//           doc.musician = Meteor.userId();\n//           doc.accompanist = FlowRouter.getParam(\"profileId\");\n//           doc.status = 'Offered';\n//         }\n//         return doc;\n//       }\n//     }\n//   }\n// });\n\n// Local Template Events\n\n// Template.testData.events({\n//   'click button'(event){\n//     event.preventDefault();\n//       console.log(\"Pressed\");\n//     for (var i =0; i < TestAccountData.length; i++){\n//       Accounts.insert(TestAccountData[i]);\n//       console.log(\"Inserted account number \"+(i+1));\n//     };\n//   }\n// });\n\nTemplate.makeUpdateAccompForm.helpers({\n  NewAccompSchema: function () {\n    function NewAccompSchema() {\n      event.preventDefault();\n      return Schema.AccompanistProfileSchema;\n    }\n\n    return NewAccompSchema;\n  }()\n});\n\nTemplate.results.helpers({\n  // print this from the new page\n  accompanists: function () {\n    function accompanists() {\n      var gl = Session.get('geo_location');\n      var sd = Session.get('start_date');\n      var ed = Session.get('end_date');\n\n      // convert dates to dates that can be compared with Mongo schema\n      var new_sd = new Date(sd);\n      var new_ed = new Date(ed);\n\n      // fix location (Rad + Google API)\n      if (gl && sd && ed) {\n        console.log(\"Searched\");\n        return _accompanistProfile.AccompanistProfile.find({\n          mylocation: gl,\n          startDate: { $lte: new_sd, $lte: new_ed },\n          endDate: { $gte: new_sd, $gte: new_ed } }).fetch();\n      }\n      // return No results found if null!!!!!!!!\n      console.log(\"Didn't search\");\n      return null;\n    }\n\n    return accompanists;\n  }()\n});\n\n// Events\n\n// window.onload = function() {\n//   var autocomplete = new google.maps.places.Autocomplete(\n//     (document.getElementById('autocomplete')),{types: ['geocode'] }\n//   );\n// };\n\n// var initAutoComplete = function() {\n//   var autocomplete = new google.maps.places.Autocomplete(\n//     (document.getElementById('autocomplete')),{types: ['geocode'] }\n//   );\n// };\n\nTemplate.search.events({\n  'click #autocomplete': function () {\n    function clickAutocomplete(e, search) {\n      initAutoComplete();\n    }\n\n    return clickAutocomplete;\n  }()\n});\n\nvar initAutoComplete = function initAutoComplete() {\n  var autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { types: ['geocode'] });\n};\n\nTemplate.search.events({\n  'submit form': function () {\n    function submitForm() {\n      event.preventDefault();\n\n      //Constants submitted from the Home search bar\n      var geo_location = event.target.geo_location.value;\n      var start_date = event.target.start_date.value;\n      var end_date = event.target.end_date.value;\n\n      Session.setPersistent('geo_location', geo_location);\n      Session.setPersistent('start_date', start_date);\n      Session.setPersistent('end_date', end_date);\n\n      console.log(\"Form Submitted\");\n      // go to knew page here\n      FlowRouter.go('results');\n    }\n\n    return submitForm;\n  }()\n});\n\n// For Debugging\nSimpleSchema.debug = true;","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"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","file":"/client/main.js.map","sourcesContent":["import { MusicProfiles } from '../collections/musicProfile.js'\nimport { AccompanistProfile } from '../collections/accompanistProfile.js'\nimport { Accounts } from '../collections/account.js'\nimport { MusicCompetitions } from '../collections/competitions.js'\nimport { Transactions } from '../collections/transactions.js'\n\nimport { TestAccountData } from '../collections/testData.js'\n\nwindow.MusicProfiles = MusicProfiles\nwindow.AccompanistProfile = AccompanistProfile\nwindow.Accounts = Accounts\nwindow.MusicCompetitions = MusicCompetitions\nwindow.Transactions = Transactions\n\n// Helper functions\n\nfunction wrapDoc (obj) {\n  if (obj){\n    return {field: \"update\", doc: obj}\n  }else{\n    return {field: \"insert\", doc: null}\n  }\n}\n\n// Global Template Helpers\n\nTemplate.registerHelper('defaultTransaction', () => {\n  return {musician: Meteor.userId(),\n          accompanist: FlowRouter.getParam(\"profileId\"),\n          status: 'Offered'}\n});\n\nTemplate.registerHelper('ownProfile', () => {\n  event.preventDefault();\n\n  return (FlowRouter.getParam(\"profileId\") == Meteor.userId())\n});\n\nTemplate.registerHelper( 'userId', () => {\n    event.preventDefault();\n    return Meteor.userId();\n});\n\nTemplate.registerHelper( 'getProfileRoute', (id = Meteor.userId()) =>{\n  return \"/profile/\"+id\n})\n\nTemplate.registerHelper( 'transactionsDoc', () => {\n    event.preventDefault();\n    var allTransactions =\n      {asMusician: Transactions.find({ musician: Meteor.userId()}).fetch(),\n       asAccompanist: Transactions.find({ accompanist: Meteor.userId()}).fetch()}\n    console.log(allTransactions)\n    return allTransactions;\n});\n\nTemplate.registerHelper( 'profileDoc', (id = FlowRouter.getParam(\"profileId\")) => {\n    event.preventDefault();\n    if (!id) {\n      id = Meteor.userId;\n    }\n    return wrapDoc(MusicProfiles.findOne({ userId: id}));\n});\n\nTemplate.registerHelper( 'accountDoc', (id = FlowRouter.getParam(\"profileId\")) => {\n  \tevent.preventDefault();\n    if (!id) {\n      id = Meteor.userId;\n    }\n    return wrapDoc(Accounts.findOne({ userId: id}));\n});\n\nTemplate.registerHelper( 'accompanistProfileDoc', (id = FlowRouter.getParam(\"profileId\")) => {\n    event.preventDefault();\n    if (!id) {\n      id = Meteor.userId();\n    }\n    return wrapDoc(AccompanistProfile.findOne({ userId: id}));\n});\n\nTemplate.registerHelper( 'musicCompetitionsDoc', () => {\n    event.preventDefault();\n    // array =  MusicCompetitions.find().fetch();\n    return [{label: \"First Manhattan International Music Competition\", value: \"First Manhattan International Music Competition\"}]\n});\n\n// Local Template Helpers\n\nTemplate.upsertProfileForm.helpers ({\n  instrumentList: function () {\n    return [\"Voice\",\"Bagpipes\", \"Banjo\", \"Bass drum\", \"Bassoon\", \"Bell\", \"Bongo\", \"Castanets\", \"Cello\", \"Clarinet\", \"Clavichord\", \"Conga drum\", \"Contrabassoon\", \"Cornet\", \"Cymbals\", \"Double bass\", \"Dulcian\", \"Dynamophone\", \"Flute\", \"Flutophone\", \"Glockenspiel\", \"Gongs\", \"Guitar\", \"Harmonica\", \"Harp\", \"Harpsichord\", \"Lute\", \"Mandolin\", \"Maracas\", \"Metallophone\", \"Musical box\", \"Oboe\", \"Ondes-Martenot\", \"Piano\", \"Recorder\", \"Saxophone\", \"Shawm\", \"Snare drum\", \"Steel drum\", \"Tambourine\", \"Theremin\", \"Triangle\", \"Trombone\", \"Trumpet\", \"Tuba\", \"Ukulele\", \"Viola\", \"Violin\", \"Xylophone\",\n    \"Zither\"].map(function(obj){return {label: obj, value:obj}})\n  }\n});\n\n// Hooks (AutoForm)\n// All client side-> fix for security later\n\n// AutoForm.hooks({\n//   bookAccompanist: {\n//     before: {\n//       insert: function(doc) {\n//         console.log(\"Running\")\n//         if(Meteor.userId()){\n//           doc.musician = Meteor.userId();\n//           doc.accompanist = FlowRouter.getParam(\"profileId\");\n//           doc.status = 'Offered';\n//         }\n//         return doc;\n//       }\n//     }\n//   }\n// });\n\n// Local Template Events\n\n// Template.testData.events({\n//   'click button'(event){\n//     event.preventDefault();\n//       console.log(\"Pressed\");\n//     for (var i =0; i < TestAccountData.length; i++){\n//       Accounts.insert(TestAccountData[i]);\n//       console.log(\"Inserted account number \"+(i+1));\n//     };\n//   }\n// });\n\nTemplate.makeUpdateAccompForm.helpers ({\n  NewAccompSchema: function () {\n  \tevent.preventDefault();\n  \treturn Schema.AccompanistProfileSchema;\n  }\n});\n\nTemplate.results.helpers({\n\t// print this from the new page\n  accompanists: ()=> {\n\t\tvar gl = Session.get('geo_location')\n\t\tvar sd = Session.get('start_date')\n\t\tvar ed = Session.get('end_date')\n\n\t\t// convert dates to dates that can be compared with Mongo schema\n\t\tvar new_sd = new Date(sd)\n\t\tvar new_ed = new Date(ed)\n\n\t\t// fix location (Rad + Google API)\n\t\tif (gl && sd && ed) {\n\t\t  console.log(\"Searched\")\n      return AccompanistProfile.find({\n        mylocation: gl,\n        startDate:  {$lte: new_sd, $lte: new_ed},\n        endDate: {$gte: new_sd, $gte: new_ed}}).fetch()\n    }\n    \t// return No results found if null!!!!!!!!\n      console.log(\"Didn't search\")\n    \treturn null\n  }\n});\n\n// Events\n\n// window.onload = function() {\n//   var autocomplete = new google.maps.places.Autocomplete(\n//     (document.getElementById('autocomplete')),{types: ['geocode'] }\n//   );\n// };\n\n// var initAutoComplete = function() {\n//   var autocomplete = new google.maps.places.Autocomplete(\n//     (document.getElementById('autocomplete')),{types: ['geocode'] }\n//   );\n// };\n\nTemplate.search.events({\n   'click #autocomplete': function(e,search) {\n     initAutoComplete();\n   }\n});\n\nvar initAutoComplete = function() {\n  var autocomplete = new google.maps.places.Autocomplete(\n    (document.getElementById('autocomplete')),{types: ['geocode'] }\n  );\n};\n\nTemplate.search.events({\n\t'submit form': function(){\n\t    event.preventDefault();\n\n\t    //Constants submitted from the Home search bar\n\t   \tconst geo_location = event.target.geo_location.value\n\t   \tconst start_date = event.target.start_date.value\n\t   \tconst end_date = event.target.end_date.value\n\n\t  \tSession.setPersistent('geo_location', geo_location)\n\t    Session.setPersistent('start_date', start_date)\n\t  \tSession.setPersistent('end_date', end_date)\n\n      console.log(\"Form Submitted\")\n      // go to knew page here\n      FlowRouter.go('results');\n  }\n});\n\n// For Debugging\n SimpleSchema.debug = true;\n"]},"hash":"e02beb66e89817df80eae2217c930d0ad8169ddc"}
