{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"../collections/account.js","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"../collections/musicProfile.js","imported":["MusicProfiles"],"specifiers":[{"kind":"named","imported":"MusicProfiles","local":"MusicProfiles"}]},{"source":"../collections/accompanistProfile.js","imported":["AccompanistProfile"],"specifiers":[{"kind":"named","imported":"AccompanistProfile","local":"AccompanistProfile"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/main.js","filenameRelative":"/server/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/main.js.map","sourceFileName":"/server/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"var _meteor = require('meteor/meteor');\n\nvar _account = require('../collections/account.js');\n\nvar _musicProfile = require('../collections/musicProfile.js');\n\nvar _accompanistProfile = require('../collections/accompanistProfile.js');\n\n_meteor.Meteor.startup(function () {});\n\nvar geo = new GeoCoder();\n\ngetGeocode = function getGeocode(arg) {\n  var result = geo.geocode(arg);\n  return result;\n};\n\n_meteor.Meteor.methods({\n  getGeocode: function () {\n    function getGeocode(arg) {\n      var result = geo.geocode(arg);\n      return result;\n    }\n\n    return getGeocode;\n  }(),\n\n  insertFullRandomProfile: function () {\n    function insertFullRandomProfile(userId) {\n      _account.Accounts.insert(createNewAccount(userId), { getAutoValues: false });\n      _musicProfile.MusicProfiles.insert(createNewMusicProfile(userId), { getAutoValues: false });\n      _accompanistProfile.AccompanistProfile.insert(createNewAccompanistProfile(userId), { getAutoValues: false });\n    }\n\n    return insertFullRandomProfile;\n  }(),\n\n  insertRandomData: function () {\n    function insertRandomData(number) {\n      for (var i = 0; i < number; i++) {\n        var genId = Random.id();\n        _account.Accounts.insert(createNewAccount(genId), { getAutoValues: false });\n        _musicProfile.MusicProfiles.insert(createNewMusicProfile(genId), { getAutoValues: false });\n        _accompanistProfile.AccompanistProfile.insert(createNewAccompanistProfile(genId), { getAutoValues: false });\n      }\n    }\n\n    return insertRandomData;\n  }()\n\n});\n\n// Server Side hooks\n\n_accompanistProfile.AccompanistProfile.after.update(function (userId, doc, fieldNames, modifier, options) {\n\n  var address = doc.mylocation;\n\n  // take if outside to make more efficient!!!!!\n  var result = getGeocode(address);\n\n  var lat = Number(result[0].latitude);\n  var lng = Number(result[0].longitude);\n  var coords_new = [lng, lat];\n  var coords_db = doc.loc.coordinates;\n\n  if (coords_new[0] !== coords_db[0] && coords_new[1] !== coords_db[1]) {\n    console.log(\"updating\");\n    _accompanistProfile.AccompanistProfile.update({ _id: doc._id }, { $set: { geolocation: result[0], loc: { 'type': \"Point\", 'coordinates': coords_new } } }, { getAutoValues: false });\n  }\n  console.log(\"working_UPDATE nothing done\");\n}, { fetchPrevious: true });\n\n_accompanistProfile.AccompanistProfile.after.insert(function (userId, doc) {\n  var address = doc.mylocation;\n  var coded = getGeocode(address);\n\n  var lat = Number(coded[0].latitude);\n  var lng = Number(coded[0].longitude);\n  var coords_new = [lng, lat];\n  console.log(\"working Insert\");\n  _accompanistProfile.AccompanistProfile.update({ _id: doc._id }, { $set: { geolocation: coded[0], loc: { 'type': \"Point\", 'coordinates': coords_new } } }, { getAutoValues: false });\n});","ast":null,"map":{"version":3,"sources":["/server/main.js"],"names":[],"mappings":"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","file":"/server/main.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from '../collections/account.js'\nimport { MusicProfiles } from '../collections/musicProfile.js'\nimport { AccompanistProfile } from '../collections/accompanistProfile.js'\n\nMeteor.startup(() => {\n\n});\n\nvar geo = new GeoCoder();\n\ngetGeocode = function(arg) {\n    var result = geo.geocode(arg);\n    return result\n}\n\nMeteor.methods({\n  getGeocode: function (arg) {\n    var result = geo.geocode(arg);\n    return result\n  },\n\n  insertFullRandomProfile: function(userId){\n    Accounts.insert(createNewAccount(userId), {getAutoValues: false});\n    MusicProfiles.insert(createNewMusicProfile(userId), {getAutoValues: false});\n    AccompanistProfile.insert(createNewAccompanistProfile(userId), {getAutoValues: false});\n  },\n\n  insertRandomData: function(number) {\n    for (var i = 0; i < number; i++){\n      var genId = Random.id();\n      Accounts.insert(createNewAccount(genId), {getAutoValues: false});\n      MusicProfiles.insert(createNewMusicProfile(genId), {getAutoValues: false});\n      AccompanistProfile.insert(createNewAccompanistProfile(genId), {getAutoValues: false});\n    }\n  }\n\n});\n\n// Server Side hooks\n\nAccompanistProfile.after.update(function (userId, doc, fieldNames, modifier, options) {\n\n  var address = doc.mylocation;\n\n  // take if outside to make more efficient!!!!!\n    var result = getGeocode(address);\n\n      var lat = Number(result[0].latitude);\n      var lng = Number(result[0].longitude);\n      var coords_new = [lng, lat];\n      var coords_db = doc.loc.coordinates\n\n\n      if (coords_new[0] !== coords_db[0] && coords_new[1] !== coords_db[1]) {\n        console.log(\"updating\")\n        AccompanistProfile.update({_id: doc._id}, {$set: {geolocation : result[0], loc: {'type': \"Point\", 'coordinates' : coords_new}}},\n                                    {getAutoValues: false});\n      }\n      console.log(\"working_UPDATE nothing done\")\n\n}, {fetchPrevious: true});\n\nAccompanistProfile.after.insert(function (userId, doc) {\n  var address = doc.mylocation;\n  var coded = getGeocode(address);\n\n  var lat = Number(coded[0].latitude);\n  var lng = Number(coded[0].longitude);\n  var coords_new = [lng, lat];\n  console.log(\"working Insert\")\n  AccompanistProfile.update({_id: doc._id}, {$set: {geolocation : coded[0], loc: {'type': \"Point\", 'coordinates' : coords_new}}},{getAutoValues: false});\n\n});\n"]},"hash":"dbedc44759bfb606df8b027712a2e9a4c63a2538"}
