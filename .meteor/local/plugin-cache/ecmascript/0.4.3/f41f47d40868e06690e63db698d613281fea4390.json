{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../collections/musicProfile.js","imported":["MusicProfiles"],"specifiers":[{"kind":"named","imported":"MusicProfiles","local":"MusicProfiles"}]},{"source":"../collections/accompanistProfile.js","imported":["AccompanistProfile"],"specifiers":[{"kind":"named","imported":"AccompanistProfile","local":"AccompanistProfile"}]},{"source":"../collections/account.js","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"../collections/competitions.js","imported":["MusicCompetitions"],"specifiers":[{"kind":"named","imported":"MusicCompetitions","local":"MusicCompetitions"}]},{"source":"../collections/transactions.js","imported":["Transactions"],"specifiers":[{"kind":"named","imported":"Transactions","local":"Transactions"}]},{"source":"../collections/testData.js","imported":["TestAccountData"],"specifiers":[{"kind":"named","imported":"TestAccountData","local":"TestAccountData"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"var _musicProfile = require('../collections/musicProfile.js');\n\nvar _accompanistProfile = require('../collections/accompanistProfile.js');\n\nvar _account = require('../collections/account.js');\n\nvar _competitions = require('../collections/competitions.js');\n\nvar _transactions = require('../collections/transactions.js');\n\nvar _testData = require('../collections/testData.js');\n\nwindow.MusicProfiles = _musicProfile.MusicProfiles;\nwindow.AccompanistProfile = _accompanistProfile.AccompanistProfile;\nwindow.Accounts = _account.Accounts;\nwindow.MusicCompetitions = _competitions.MusicCompetitions;\nwindow.Transactions = _transactions.Transactions;\n\n// Helper functions\n\nfunction wrapDoc(obj) {\n  if (obj) {\n    return { field: \"update\", doc: obj };\n  } else {\n    return { field: \"insert\", doc: null };\n  }\n}\n\n// Global Template Helpers\n\nTemplate.registerHelper('profileDoc', function () {\n  event.preventDefault();\n\n  return wrapDoc(_musicProfile.MusicProfiles.findOne({ userId: Meteor.userId() }));\n});\n\nTemplate.registerHelper('accountDoc', function () {\n  event.preventDefault();\n  return wrapDoc(_account.Accounts.findOne({ userId: Meteor.userId() }));\n});\n\nTemplate.registerHelper('accompanistProfileDoc', function () {\n  event.preventDefault();\n  return wrapDoc(_accompanistProfile.AccompanistProfile.findOne({ userId: Meteor.userId() }));\n});\n\nTemplate.registerHelper('musicCompetitionsDoc', function () {\n  event.preventDefault();\n  // array =  MusicCompetitions.find().fetch();\n  return [{ label: \"First Manhattan International Music Competition\", value: \"First Manhattan International Music Competition\" }];\n});\n\n// Local Template Helpers\n\nTemplate.upsertProfileForm.helpers({\n  instrumentList: function () {\n    function instrumentList() {\n      return [\"Voice\", \"Bagpipes\", \"Banjo\", \"Bass drum\", \"Bassoon\", \"Bell\", \"Bongo\", \"Castanets\", \"Cello\", \"Clarinet\", \"Clavichord\", \"Conga drum\", \"Contrabassoon\", \"Cornet\", \"Cymbals\", \"Double bass\", \"Dulcian\", \"Dynamophone\", \"Flute\", \"Flutophone\", \"Glockenspiel\", \"Gongs\", \"Guitar\", \"Harmonica\", \"Harp\", \"Harpsichord\", \"Lute\", \"Mandolin\", \"Maracas\", \"Metallophone\", \"Musical box\", \"Oboe\", \"Ondes-Martenot\", \"Piano\", \"Recorder\", \"Saxophone\", \"Shawm\", \"Snare drum\", \"Steel drum\", \"Tambourine\", \"Theremin\", \"Triangle\", \"Trombone\", \"Trumpet\", \"Tuba\", \"Ukulele\", \"Viola\", \"Violin\", \"Xylophone\", \"Zither\"].map(function (obj) {\n        return { label: obj, value: obj };\n      });\n    }\n\n    return instrumentList;\n  }()\n});\n\n// Local Template Events\n\n// Template.testData.events({\n//   'click button'(event){\n//     event.preventDefault();\n//       console.log(\"Pressed\");\n//     for (var i =0; i < TestAccountData.length; i++){\n//       Accounts.insert(TestAccountData[i]);\n//       console.log(\"Inserted account number \"+(i+1));\n//     };\n//   }\n// });\n\nTemplate.makeUpdateAccompForm.helpers({\n  NewAccompSchema: function () {\n    function NewAccompSchema() {\n      event.preventDefault();\n      return Schema.AccompanistProfileSchema;\n    }\n\n    return NewAccompSchema;\n  }()\n});\n\nTemplate.search.helpers({\n  accompanists: function () {\n    function accompanists() {\n      var gl = Session.get('geo_location');\n      var sd = Session.get('start_date');\n      var ed = Session.get('end_date');\n\n      // convert dates to dates that can be compared with Mongo schema\n      var new_sd = new Date(sd);\n      var new_ed = new Date(ed);\n\n      // fix location (Rad + Google API)\n      if (gl && sd && ed) {\n        return _accompanistProfile.AccompanistProfile.find({ mylocation: gl, startDate: { $lte: new_sd, $lte: new_ed }, endDate: { $gte: new_sd, $gte: new_ed } }).fetch();\n      }\n      // return No results found if null!!!!!!!!\n      return null;\n    }\n\n    return accompanists;\n  }()\n});\n\n// Events\n\nTemplate.search.events({\n  'submit form': function () {\n    function submitForm() {\n      event.preventDefault();\n\n      //Constants submitted from the Home search bar\n      var geo_location = event.target.geo_location.value;\n      var start_date = event.target.start_date.value;\n      var end_date = event.target.end_date.value;\n\n      Session.set('geo_location', geo_location);\n      Session.set('start_date', start_date);\n      Session.set('end_date', end_date);\n\n      Router.go('/results');\n    }\n\n    return submitForm;\n  }()\n});\n\n//  Meteor.Router.add({\n\n//    '/admindetails':'admindetails'\n\n//    })\n//  Template.body.events\n//  ({\n//    'submit #login-form' : function (e,t)\n// {\n//      /* template data, if any, is available in 'this'*/\n//      if (typeof console !== 'undefined')\n\n//        console.log(\"You pressed the button\");\n//         e.preventDefault();\n//  /*retrieve the input field values*/\n//         var email = t.find('#username').value\n//         , password = t.find('#pwd').value;\n//           console.log(email);\n//   Meteor.loginWithPassword(email, password, function (err)\n//    {\n//    if (err)\n//    {\n//      console.log(err);\n//      alert(err.reason);\n//      Session.set(\"loginError\", true);\n//     }\n//     else\n//     {\n//       console.log(\" Login Success \");\n//       Meteor.Router.to(\"/admindetails\");\n//     }\n//    });\n//    }\n//  });\n\n// For Debugging\nSimpleSchema.debug = true;","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"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","file":"/client/main.js.map","sourcesContent":["import { MusicProfiles } from '../collections/musicProfile.js'\nimport { AccompanistProfile } from '../collections/accompanistProfile.js'\nimport { Accounts } from '../collections/account.js'\nimport { MusicCompetitions } from '../collections/competitions.js'\nimport { Transactions } from '../collections/transactions.js'\n\nimport { TestAccountData } from '../collections/testData.js'\n\nwindow.MusicProfiles = MusicProfiles\nwindow.AccompanistProfile = AccompanistProfile\nwindow.Accounts = Accounts\nwindow.MusicCompetitions = MusicCompetitions\nwindow.Transactions = Transactions\n\n// Helper functions\n\nfunction wrapDoc (obj) {\n  if (obj){\n    return {field: \"update\", doc: obj}\n  }else{\n    return {field: \"insert\", doc: null}\n  }\n}\n\n// Global Template Helpers\n\nTemplate.registerHelper( 'profileDoc', () => {\n    event.preventDefault();\n\n    return wrapDoc(MusicProfiles.findOne({ userId: Meteor.userId()}));\n});\n\nTemplate.registerHelper( 'accountDoc', () => {\n  \tevent.preventDefault();\n    return wrapDoc(Accounts.findOne({ userId: Meteor.userId()}));\n});\n\nTemplate.registerHelper( 'accompanistProfileDoc', () => {\n    event.preventDefault();\n    return wrapDoc(AccompanistProfile.findOne({ userId: Meteor.userId()}));\n});\n\nTemplate.registerHelper( 'musicCompetitionsDoc', () => {\n    event.preventDefault();\n    // array =  MusicCompetitions.find().fetch();\n    return [{label: \"First Manhattan International Music Competition\", value: \"First Manhattan International Music Competition\"}]\n});\n\n// Local Template Helpers\n\nTemplate.upsertProfileForm.helpers ({\n  instrumentList: function () {\n    return [\"Voice\",\"Bagpipes\", \"Banjo\", \"Bass drum\", \"Bassoon\", \"Bell\", \"Bongo\", \"Castanets\", \"Cello\", \"Clarinet\", \"Clavichord\", \"Conga drum\", \"Contrabassoon\", \"Cornet\", \"Cymbals\", \"Double bass\", \"Dulcian\", \"Dynamophone\", \"Flute\", \"Flutophone\", \"Glockenspiel\", \"Gongs\", \"Guitar\", \"Harmonica\", \"Harp\", \"Harpsichord\", \"Lute\", \"Mandolin\", \"Maracas\", \"Metallophone\", \"Musical box\", \"Oboe\", \"Ondes-Martenot\", \"Piano\", \"Recorder\", \"Saxophone\", \"Shawm\", \"Snare drum\", \"Steel drum\", \"Tambourine\", \"Theremin\", \"Triangle\", \"Trombone\", \"Trumpet\", \"Tuba\", \"Ukulele\", \"Viola\", \"Violin\", \"Xylophone\",\n    \"Zither\"].map(function(obj){return {label: obj, value:obj}})\n  }\n});\n\n// Local Template Events\n\n// Template.testData.events({\n//   'click button'(event){\n//     event.preventDefault();\n//       console.log(\"Pressed\");\n//     for (var i =0; i < TestAccountData.length; i++){\n//       Accounts.insert(TestAccountData[i]);\n//       console.log(\"Inserted account number \"+(i+1));\n//     };\n//   }\n// });\n\nTemplate.makeUpdateAccompForm.helpers ({\n  NewAccompSchema: function () {\n  \tevent.preventDefault();\n  \treturn Schema.AccompanistProfileSchema;\n  }\n});\n\nTemplate.search.helpers({\n\taccompanists: ()=> {\n\t\tvar gl = Session.get('geo_location')\n\t\tvar sd = Session.get('start_date') \n\t\tvar ed = Session.get('end_date') \n\t\n\t\t// convert dates to dates that can be compared with Mongo schema\n\t\tvar new_sd = new Date(sd)\n\t\tvar new_ed = new Date(ed)\n\n\t\t// fix location (Rad + Google API)\n\t\tif (gl && sd && ed) {\n\t\t\treturn AccompanistProfile.find({mylocation: gl, startDate:  {$lte: new_sd, $lte: new_ed}, endDate: {$gte: new_sd, $gte: new_ed}}).fetch()\n\t\t}\n    \t// return No results found if null!!!!!!!!\n    \treturn null\n  }\n});\n\n// Events\n\nTemplate.search.events({\n\t'submit form': function(){\n\t    event.preventDefault();\n\t   \n\t    //Constants submitted from the Home search bar\n\t   \tconst geo_location = event.target.geo_location.value\n\t   \tconst start_date = event.target.start_date.value\n\t   \tconst end_date = event.target.end_date.value\n\t \n\t  \tSession.set('geo_location', geo_location)\n\t    Session.set('start_date', start_date)\n\t  \tSession.set('end_date', end_date)\n\n      Router.go('/results');\n\n  }\n});\n\n //  Meteor.Router.add({\n\n //    '/admindetails':'admindetails'\n\n //    })\n //  Template.body.events\n //  ({\n //    'submit #login-form' : function (e,t)\n // {\n //      /* template data, if any, is available in 'this'*/\n //      if (typeof console !== 'undefined')\n\n //        console.log(\"You pressed the button\");\n //         e.preventDefault();\n //  /*retrieve the input field values*/\n //         var email = t.find('#username').value\n //         , password = t.find('#pwd').value;\n //           console.log(email);\n //   Meteor.loginWithPassword(email, password, function (err)\n //    {\n //    if (err) \n //    {\n //      console.log(err);\n //      alert(err.reason);\n //      Session.set(\"loginError\", true);\n //     }\n //     else\n //     {\n //       console.log(\" Login Success \");\n //       Meteor.Router.to(\"/admindetails\");\n //     }\n //    });\n //    }\n //  });\n\n\n\n// For Debugging\n SimpleSchema.debug = true;\n"]},"hash":"f41f47d40868e06690e63db698d613281fea4390"}
