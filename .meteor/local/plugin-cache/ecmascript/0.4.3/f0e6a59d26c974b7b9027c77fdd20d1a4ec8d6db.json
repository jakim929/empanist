{"metadata":{"usedHelpers":["classCallCheck","inherits","possibleConstructorReturn","createClass","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/emmerge:graviton/lib/mongo-query.js","filenameRelative":"/packages/emmerge:graviton/lib/mongo-query.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/emmerge:graviton/lib/mongo-query.js.map","sourceFileName":"/packages/emmerge:graviton/lib/mongo-query.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"mongo-query"},"ignored":false,"code":"var _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// simple linked-list used to flatten complex object trees\n\nvar Link = function () {\n  function Link(key, parent) {\n    (0, _classCallCheck3['default'])(this, Link);\n\n    this.result = parent && parent.result || {};\n    this.parent = parent;\n    this.key = key;\n  }\n\n  // traverse up the tree and build a dot-delimited string\n\n\n  Link.prototype.chainKey = function () {\n    function chainKey() {\n      var links = [this.key];\n      var parent = this.parent;\n      while (parent) {\n        if (parent.key) links.unshift(parent.key);\n        parent = parent.parent;\n      }\n      return links.join('.');\n    }\n\n    return chainKey;\n  }();\n\n  // take an object of any depth and return an object with only one level\n  // build linked-lists by traversing object tree\n\n\n  Link.prototype.flattenObject = function () {\n    function flattenObject(obj) {\n      if (!_.isObject(obj)) {\n        // found a leaf, save the key/value in result\n        var key = this.chainKey();\n        this.result[key] = obj;\n        return;\n      }\n      for (var _iterator = Object.keys(obj), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _key = _ref;\n\n        new Link(_key, this).flattenObject(obj[_key]);\n      }\n      return this.result;\n    }\n\n    return flattenObject;\n  }();\n\n  return Link;\n}();\n\nvar updateOperators = ['$set', '$unset', '$addToSet', '$push', '$pull', '$pop', '$inc'];\n\nfunction _keysOverlap(a, b) {\n  if (a === b) return false;\n  return _.first(a.split('.')) === _.first(b.split('.'));\n}\n\n// extend two flat objects but discard keys that are contained within another\nfunction _mongoExtend(objA, objB) {\n  for (var _iterator2 = Object.keys(objB), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var keyB = _ref2;\n\n    for (var _iterator3 = Object.keys(objA), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var keyA = _ref3;\n\n      if (MongoModifier.keysConflict(keyB, keyA)) {\n        throw new Error(\"Cannot apply this modification because it conflicts with unsaved ones. Please save first or re-write update.\");\n      }\n    }\n  }\n  return _.extend(objA, objB);\n}\n\nMongoModifier = function () {\n  MongoModifier.flattenObject = function () {\n    function flattenObject(keyOrObj, value) {\n      if (_.isString(keyOrObj)) {\n        var _ref4;\n\n        return _ref4 = {}, _ref4[keyOrObj] = value, _ref4;\n      } else if (_.isObject(keyOrObj)) {\n        return new Link().flattenObject(keyOrObj);\n      }\n    }\n\n    return flattenObject;\n  }();\n\n  // is one key fully-contained in the other?\n\n\n  MongoModifier.keysConflict = function () {\n    function keysConflict(a, b) {\n      if (a === b) return false;\n      var arrA = a.split('.');\n      var arrB = b.split('.');\n      if (arrA.length === arrB.length) return false;\n      do {\n        if (arrA.shift() !== arrB.shift()) {\n          return false;\n        }\n      } while (arrA.length && arrB.length);\n      return true;\n    }\n\n    return keysConflict;\n  }();\n\n  function MongoModifier() {\n    var defaults = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    (0, _classCallCheck3['default'])(this, MongoModifier);\n\n    for (var _iterator4 = updateOperators, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref5 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref5 = _i4.value;\n      }\n\n      var type = _ref5;\n\n      this[type] = defaults[type] || {};\n    }\n  }\n\n  MongoModifier.prototype.reset = function () {\n    function reset() {\n      for (var _iterator5 = updateOperators, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n        var _ref6;\n\n        if (_isArray5) {\n          if (_i5 >= _iterator5.length) break;\n          _ref6 = _iterator5[_i5++];\n        } else {\n          _i5 = _iterator5.next();\n          if (_i5.done) break;\n          _ref6 = _i5.value;\n        }\n\n        var type = _ref6;\n\n        this[type] = {};\n      }\n    }\n\n    return reset;\n  }();\n\n  MongoModifier.prototype.modObject = function () {\n    function modObject() {\n      var mod = {};\n      for (var _iterator6 = updateOperators, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n        var _ref7;\n\n        if (_isArray6) {\n          if (_i6 >= _iterator6.length) break;\n          _ref7 = _iterator6[_i6++];\n        } else {\n          _i6 = _iterator6.next();\n          if (_i6.done) break;\n          _ref7 = _i6.value;\n        }\n\n        var type = _ref7;\n\n        if (!_.isEmpty(this[type])) {\n          mod[type] = this[type];\n        }\n      }\n      return mod;\n    }\n\n    return modObject;\n  }();\n\n  // merge a mongo update statement into the modifier\n\n\n  MongoModifier.prototype.mergeUpdate = function () {\n    function mergeUpdate(mongoUpdate) {\n      for (var _iterator7 = updateOperators, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {\n        var _ref8;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref8 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref8 = _i7.value;\n        }\n\n        var type = _ref8;\n\n        if (_.isObject(mongoUpdate[type])) {\n          var obj = MongoModifier.flattenObject(mongoUpdate[type]);\n          _mongoExtend(this[type], obj);\n        }\n      }\n      return this;\n    }\n\n    return mergeUpdate;\n  }();\n\n  MongoModifier.prototype.set = function () {\n    function set(keyOrObj, value) {\n      var obj = MongoModifier.flattenObject(keyOrObj, value);\n      _mongoExtend(this.$set, obj);\n      return { $set: obj };\n    }\n\n    return set;\n  }();\n\n  MongoModifier.prototype.unset = function () {\n    function unset(keyOrObj) {\n      var obj = MongoModifier.flattenObject(keyOrObj, \"\");\n      _mongoExtend(this.$unset, obj);\n      return { $unset: obj };\n    }\n\n    return unset;\n  }();\n\n  MongoModifier.prototype.addToSet = function () {\n    function addToSet(keyOrObj, value) {\n      var obj = MongoModifier.flattenObject(keyOrObj, value);\n      _mongoExtend(this.$addToSet, obj);\n      return { $addToSet: obj };\n    }\n\n    return addToSet;\n  }();\n\n  MongoModifier.prototype.push = function () {\n    function push(keyOrObj, value) {\n      var obj = MongoModifier.flattenObject(keyOrObj, value);\n      _mongoExtend(this.$push, obj);\n      return { $push: obj };\n    }\n\n    return push;\n  }();\n\n  MongoModifier.prototype.pull = function () {\n    function pull(keyOrObj, value) {\n      var obj = MongoModifier.flattenObject(keyOrObj, value);\n      _mongoExtend(this.$pull, obj);\n      return { $pull: obj };\n    }\n\n    return pull;\n  }();\n\n  MongoModifier.prototype.inc = function () {\n    function inc(keyOrObj) {\n      var value = arguments.length <= 1 || arguments[1] === undefined ? 1 : arguments[1];\n\n      var obj = MongoModifier.flattenObject(keyOrObj, value);\n      _mongoExtend(this.$inc, obj);\n      return { $inc: obj };\n    }\n\n    return inc;\n  }();\n\n  MongoModifier.prototype.pop = function () {\n    function pop(keyOrObj) {\n      var obj = MongoModifier.flattenObject(keyOrObj, 1);\n      _mongoExtend(this.$pop, obj);\n      return { $pop: obj };\n    }\n\n    return pop;\n  }();\n\n  MongoModifier.prototype.shift = function () {\n    function shift(keyOrObj) {\n      var obj = MongoModifier.flattenObject(keyOrObj, -1);\n      _mongoExtend(this.$pop, obj);\n      return { $pop: obj };\n    }\n\n    return shift;\n  }();\n\n  return MongoModifier;\n}();\n\n/**\n * A MongoModifier with a collection\n * Provides methods for interacting with a collection via a MongoModifier\n * Contained by models and base class for many relations\n */\nMongoQuery = function (_MongoModifier) {\n  (0, _inherits3['default'])(MongoQuery, _MongoModifier);\n\n  function MongoQuery(collection) {\n    var selector = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    var modifier = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n    var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n    (0, _classCallCheck3['default'])(this, MongoQuery);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _MongoModifier.call(this, modifier));\n\n    _this.collection = collection;\n    _this.options = options;\n    _this._selector = selector;\n    return _this;\n  }\n\n  MongoQuery.prototype.find = function () {\n    function find() {\n      var selector = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      _.defaults(options, this.options);\n      _.extend(selector, this.selector);\n      return this.collection.find(selector, options);\n    }\n\n    return find;\n  }();\n\n  MongoQuery.prototype.findOne = function () {\n    function findOne() {\n      var selector = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      _.defaults(options, this.options);\n      _.extend(selector, this.selector);\n      return this.collection.findOne(selector, options);\n    }\n\n    return findOne;\n  }();\n\n  MongoQuery.prototype.and = function () {\n    function and(mongoQuery) {\n      if (mongoQuery.collection !== this.collection) {\n        throw new Error(\"Cannot combine mongo queries with different collections.\");\n      }\n      var selector;\n      if (_keysHaveDollars(mongoQuery._selector) || _keysHaveDollars(this._selector)) {\n        selector = { $and: [this._selector, mongoQuery._selector] };\n      } else {\n        selector = _.extend({}, this._selector, mongoQuery._selector);\n      }\n      return new MongoQuery(this.collection, selector);\n    }\n\n    return and;\n  }();\n\n  MongoQuery.prototype.or = function () {\n    function or(mongoQuery) {\n      if (mongoQuery.collection !== this.collection) {\n        throw new Error(\"Cannot combine mongo queries with different collections.\");\n      }\n      var selector;\n      if (Object.keys(this._selector).length === 1 && this._selector.$or) {\n        selector = EJSON.clone(this._selector);\n        selector.$or.push(mongoQuery._selector);\n      } else {\n        selector = { $or: [this._selector, mongoQuery._selector] };\n      }\n      return new MongoQuery(this.collection, selector);\n    }\n\n    return or;\n  }();\n\n  MongoQuery.prototype.all = function () {\n    function all() {\n      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      _.defaults(options, this.options);\n      return this.collection.find({}, options).fetch();\n    }\n\n    return all;\n  }();\n\n  // apply this modifier to an object\n\n\n  MongoQuery.prototype.applyModifier = function () {\n    function applyModifier() {\n      var obj = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      LocalCollection._modify(obj, this.modObject());\n      return obj;\n    }\n\n    return applyModifier;\n  }();\n\n  MongoQuery.prototype.insert = function () {\n    function insert() {\n      var attributes = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      var callback = arguments.length <= 1 || arguments[1] === undefined ? undefined : arguments[1];\n\n      attributes._id = this.collection.insert(attributes, callback);\n      return attributes._id;\n    }\n\n    return insert;\n  }();\n\n  MongoQuery.prototype.create = function () {\n    function create() {\n      var attributes = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      var callback = arguments.length <= 1 || arguments[1] === undefined ? undefined : arguments[1];\n\n      if (this.collection.create) {\n        return this.collection.create(attributes, callback);\n      }\n    }\n\n    return create;\n  }();\n\n  MongoQuery.prototype.update = function () {\n    function update() {\n      var selector = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n      var callback = arguments.length <= 2 || arguments[2] === undefined ? undefined : arguments[2];\n\n      _.defaults(options, this.options);\n      _.extend(selector, this.selector);\n      var mod = this.modObject();\n      if (!_.isEmpty(mod)) {\n        return this.collection.update(selector, this.modObject(), options, callback);\n      }\n    }\n\n    return update;\n  }();\n\n  MongoQuery.prototype.remove = function () {\n    function remove() {\n      var selector = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n      var callback = arguments.length <= 2 || arguments[2] === undefined ? undefined : arguments[2];\n\n      _.defaults(options, this.options);\n      _.extend(selector, this.selector);\n      return this.collection.remove(selector, options, callback);\n    }\n\n    return remove;\n  }();\n\n  (0, _createClass3['default'])(MongoQuery, [{\n    key: 'selector',\n    get: function () {\n      function get() {\n        return this._selector;\n      }\n\n      return get;\n    }(),\n    set: function () {\n      function set(val) {\n        this._selector = val;\n      }\n\n      return set;\n    }()\n  }]);\n  return MongoQuery;\n}(MongoModifier);\n\nfunction _keysHaveDollars(obj) {\n  for (var key in meteorBabelHelpers.sanitizeForInObject(Object.keys(obj))) {\n    if (key.substr(0, 1) === '$') {\n      return true;\n    }\n  }\n  return false;\n}","ast":null,"map":{"version":3,"sources":["/packages/emmerge:graviton/lib/mongo-query.js"],"names":[],"mappings":"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","file":"/packages/emmerge:graviton/lib/mongo-query.js.map","sourcesContent":["// simple linked-list used to flatten complex object trees\nclass Link {\n  constructor(key, parent) {\n    this.result = (parent && parent.result) || {};\n    this.parent = parent;\n    this.key = key;\n  }\n\n  // traverse up the tree and build a dot-delimited string\n  chainKey() {\n    var links = [this.key];\n    var parent = this.parent;\n    while(parent) {\n      if (parent.key)\n        links.unshift(parent.key);\n      parent = parent.parent;\n    }\n    return links.join('.');\n  }\n\n  // take an object of any depth and return an object with only one level\n  // build linked-lists by traversing object tree\n  flattenObject(obj) {\n    if (!_.isObject(obj)) {\n      // found a leaf, save the key/value in result\n      let key = this.chainKey();\n      this.result[key] = obj;\n      return;\n    }\n    for (let key of Object.keys(obj)) {\n      new Link(key, this).flattenObject(obj[key]);\n    }\n    return this.result;\n  }\n}\n\nconst updateOperators = [\n  '$set',\n  '$unset',\n  '$addToSet',\n  '$push',\n  '$pull',\n  '$pop',\n  '$inc'\n];\n\nfunction _keysOverlap(a, b) {\n  if (a === b) return false;\n  return (_.first(a.split('.')) === _.first(b.split('.')));\n}\n\n\n// extend two flat objects but discard keys that are contained within another\nfunction _mongoExtend(objA, objB) {\n  for (let keyB of Object.keys(objB)) {\n    for (let keyA of Object.keys(objA)) {\n      if (MongoModifier.keysConflict(keyB, keyA)) {\n        throw new Error(\"Cannot apply this modification because it conflicts with unsaved ones. Please save first or re-write update.\");\n      }\n    }\n  }\n  return _.extend(objA, objB);\n}\n\nMongoModifier = class MongoModifier {\n\n  static flattenObject(keyOrObj, value) {\n    if (_.isString(keyOrObj)) {\n      return {[keyOrObj]: value};\n    } else\n    if (_.isObject(keyOrObj)) {\n      return new Link().flattenObject(keyOrObj);\n    }\n  }\n\n  // is one key fully-contained in the other?\n  static keysConflict(a, b) {\n    if (a === b) return false;\n    var arrA = a.split('.');\n    var arrB = b.split('.');\n    if (arrA.length === arrB.length) return false;\n    do {\n      if (arrA.shift() !== arrB.shift()) {\n        return false;\n      }\n    } while (arrA.length && arrB.length);\n    return true;\n  }\n\n  constructor(defaults = {}) {\n    for (let type of updateOperators) {\n      this[type] = defaults[type] || {};\n    }\n  }\n\n  reset() {\n    for (let type of updateOperators) {\n      this[type] = {};\n    }\n  }\n\n  modObject() {\n    var mod = {};\n    for (let type of updateOperators) {\n      if (!_.isEmpty(this[type])) {\n        mod[type] = this[type];\n      }\n    }\n    return mod;\n  }\n\n  // merge a mongo update statement into the modifier\n  mergeUpdate(mongoUpdate) {\n    for (let type of updateOperators) {\n      if (_.isObject(mongoUpdate[type])) {\n        let obj = MongoModifier.flattenObject(mongoUpdate[type]);\n        _mongoExtend(this[type], obj);\n      }\n    }\n    return this;\n  }\n\n  set(keyOrObj, value) {\n    var obj = MongoModifier.flattenObject(keyOrObj, value);\n    _mongoExtend(this.$set, obj);\n    return {$set: obj};\n  }\n\n  unset(keyOrObj) {\n    var obj = MongoModifier.flattenObject(keyOrObj, \"\");\n    _mongoExtend(this.$unset, obj);\n    return {$unset: obj};\n  }\n\n  addToSet(keyOrObj, value) {\n    var obj = MongoModifier.flattenObject(keyOrObj, value);\n    _mongoExtend(this.$addToSet, obj);\n    return {$addToSet: obj};\n  }\n\n  push(keyOrObj, value) {\n    var obj = MongoModifier.flattenObject(keyOrObj, value);\n    _mongoExtend(this.$push, obj);\n    return {$push: obj};\n  }\n\n  pull(keyOrObj, value) {\n    var obj = MongoModifier.flattenObject(keyOrObj, value);\n    _mongoExtend(this.$pull, obj);\n    return {$pull: obj};\n  }\n\n  inc(keyOrObj, value = 1) {\n    var obj = MongoModifier.flattenObject(keyOrObj, value);\n    _mongoExtend(this.$inc, obj);\n    return {$inc: obj};\n  }\n\n  pop(keyOrObj) {\n    var obj = MongoModifier.flattenObject(keyOrObj, 1);\n    _mongoExtend(this.$pop, obj);\n    return {$pop: obj};\n  }\n\n  shift(keyOrObj) {\n    var obj = MongoModifier.flattenObject(keyOrObj, -1);\n    _mongoExtend(this.$pop, obj);\n    return {$pop: obj};\n  }\n};\n\n/**\n * A MongoModifier with a collection\n * Provides methods for interacting with a collection via a MongoModifier\n * Contained by models and base class for many relations\n */\nMongoQuery = class MongoQuery extends MongoModifier {\n\n  constructor(collection, selector = {}, modifier = {}, options = {}) {\n    super(modifier);\n    this.collection = collection;\n    this.options = options;\n    this._selector = selector;\n  }\n\n  get selector() {\n    return this._selector;\n  }\n\n  set selector(val) {\n    this._selector = val;\n  }\n\n  find(selector = {}, options = {}) {\n    _.defaults(options, this.options);\n    _.extend(selector, this.selector);\n    return this.collection.find(selector, options);\n  }\n\n  findOne(selector = {}, options = {}) {\n    _.defaults(options, this.options);\n    _.extend(selector, this.selector);\n    return this.collection.findOne(selector, options);\n  }\n\n  and(mongoQuery) {\n    if (mongoQuery.collection !== this.collection) {\n      throw new Error(\"Cannot combine mongo queries with different collections.\");\n    }\n    var selector;\n    if (_keysHaveDollars(mongoQuery._selector) || _keysHaveDollars(this._selector)) {\n      selector = {$and: [this._selector, mongoQuery._selector]};\n    } else {\n      selector = _.extend({}, this._selector, mongoQuery._selector);\n    }\n    return new MongoQuery(this.collection, selector);\n  }\n\n  or(mongoQuery) {\n    if (mongoQuery.collection !== this.collection) {\n      throw new Error(\"Cannot combine mongo queries with different collections.\");\n    }\n    var selector;\n    if (Object.keys(this._selector).length === 1 && this._selector.$or) {\n      selector = EJSON.clone(this._selector);\n      selector.$or.push(mongoQuery._selector);\n    } else {\n      selector = {$or: [this._selector, mongoQuery._selector]};\n    }\n    return new MongoQuery(this.collection, selector);\n  }\n\n  all(options = {}) {\n    _.defaults(options, this.options);\n    return this.collection.find({}, options).fetch();\n  }\n\n  // apply this modifier to an object\n  applyModifier(obj = {}) {\n    LocalCollection._modify(obj, this.modObject());\n    return obj;\n  }\n\n  insert(attributes = {}, callback = undefined) {\n    attributes._id = this.collection.insert(attributes, callback);\n    return attributes._id;\n  }\n\n  create(attributes = {}, callback = undefined) {\n    if (this.collection.create) {\n      return this.collection.create(attributes, callback);\n    }\n  }\n\n  update(selector = {}, options = {}, callback = undefined) {\n    _.defaults(options, this.options);\n    _.extend(selector, this.selector);\n    var mod = this.modObject();\n    if (!_.isEmpty(mod)) {\n      return this.collection.update(selector, this.modObject(), options, callback);\n    }\n  }\n\n  remove(selector = {}, options = {}, callback = undefined) {\n    _.defaults(options, this.options);\n    _.extend(selector, this.selector);\n    return this.collection.remove(selector, options, callback);\n  }\n};\n\nfunction _keysHaveDollars(obj) {\n  for (var key in Object.keys(obj)) {\n    if (key.substr(0, 1) === '$') {\n      return true;\n    }\n  }\n  return false;\n}\n"]},"hash":"f0e6a59d26c974b7b9027c77fdd20d1a4ec8d6db"}
