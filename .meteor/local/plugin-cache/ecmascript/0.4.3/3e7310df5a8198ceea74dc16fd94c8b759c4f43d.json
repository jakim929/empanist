{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"../collections/account.js","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/main.js","filenameRelative":"/server/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/main.js.map","sourceFileName":"/server/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"var _meteor = require('meteor/meteor');\n\nvar _account = require('../collections/account.js');\n\n_meteor.Meteor.startup(function () {\n  // code to run on server at startup\n  // var options = {\n  //   keepHistory: 1000 * 60 * 5,\n  //   localSearch: true\n  // };\n  //\n  // function buildRegExp(searchText) {\n  //   var words = searchText.trim().split(/[ \\-\\:]+/);\n  //   var exps = _.map(words, function(word) {\n  //     return \"(?=.*\" + word + \")\";\n  //   });\n  //   var fullExp = exps.join('') + \".+\";\n  //   return new RegExp(fullExp, \"i\");\n  // }\n  //\n  // SearchSource.defineSource('accounts', function(searchText, options) {\n  //   var options = {sort: {isoScore: -1}, limit: 20};\n  //   if(searchText) {\n  //     var regExp = buildRegExp(searchText);\n  //     var selector = {packageName: regExp, description: regExp};\n  //     return Accounts.find(selector, options).fetch();\n  //   } else {\n  //     return Accounts.find({}, options).fetch();\n  //   }\n  // });\n});","ast":null,"map":{"version":3,"sources":["/server/main.js"],"names":[],"mappings":"AAAA;;AACA;;AAEA,eAAO,OAAP,CAAe,YAAM;;;;;;;;;;;;;;;;;;;;;;;;;;CAAN,CAAf","file":"/server/main.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from '../collections/account.js'\n\nMeteor.startup(() => {\n  // code to run on server at startup\n  // var options = {\n  //   keepHistory: 1000 * 60 * 5,\n  //   localSearch: true\n  // };\n  //\n  // function buildRegExp(searchText) {\n  //   var words = searchText.trim().split(/[ \\-\\:]+/);\n  //   var exps = _.map(words, function(word) {\n  //     return \"(?=.*\" + word + \")\";\n  //   });\n  //   var fullExp = exps.join('') + \".+\";\n  //   return new RegExp(fullExp, \"i\");\n  // }\n  //\n  // SearchSource.defineSource('accounts', function(searchText, options) {\n  //   var options = {sort: {isoScore: -1}, limit: 20};\n  //   if(searchText) {\n  //     var regExp = buildRegExp(searchText);\n  //     var selector = {packageName: regExp, description: regExp};\n  //     return Accounts.find(selector, options).fetch();\n  //   } else {\n  //     return Accounts.find({}, options).fetch();\n  //   }\n  // });\n});\n"]},"hash":"3e7310df5a8198ceea74dc16fd94c8b759c4f43d"}
