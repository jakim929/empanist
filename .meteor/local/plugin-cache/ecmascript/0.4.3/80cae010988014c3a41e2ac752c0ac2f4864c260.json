{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/easysearch:core/lib/core/reactive-engine.js","filenameRelative":"/packages/easysearch:core/lib/core/reactive-engine.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/easysearch:core/lib/core/reactive-engine.js.map","sourceFileName":"/packages/easysearch:core/lib/core/reactive-engine.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"reactive-engine"},"ignored":false,"code":"var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * A ReactiveEngine handles the reactive logic, such as subscribing\n * and publishing documents into a self contained collection.\n *\n * @type {ReactiveEngine}\n */\nReactiveEngine = function (_Engine) {\n  (0, _inherits3['default'])(ReactiveEngine, _Engine);\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n\n  function ReactiveEngine(config) {\n    (0, _classCallCheck3['default'])(this, ReactiveEngine);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _Engine.call(this, config));\n\n    if (_this === _this.constructor) {\n      throw new Error('Cannot initialize instance of ReactiveEngine');\n    }\n\n    if (!_.isFunction(_this.getSearchCursor)) {\n      throw new Error('Reactive engine needs to implement getSearchCursor method');\n    }\n    return _this;\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n\n\n  ReactiveEngine.prototype.defaultConfiguration = function () {\n    function defaultConfiguration() {\n      return _.defaults({}, {\n        transform: function () {\n          function transform(doc) {\n            return doc;\n          }\n\n          return transform;\n        }(),\n        beforePublish: function () {\n          function beforePublish(event, doc) {\n            return doc;\n          }\n\n          return beforePublish;\n        }()\n      }, _Engine.prototype.defaultConfiguration.call(this));\n    }\n\n    return defaultConfiguration;\n  }();\n\n  /**\n   * Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n\n\n  ReactiveEngine.prototype.onIndexCreate = function () {\n    function onIndexCreate(indexConfig) {\n      _Engine.prototype.onIndexCreate.call(this, indexConfig);\n      indexConfig.searchCollection = new SearchCollection(indexConfig, this);\n      indexConfig.mongoCollection = indexConfig.searchCollection._collection;\n    }\n\n    return onIndexCreate;\n  }();\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n\n\n  ReactiveEngine.prototype.transformSearchDefinition = function () {\n    function transformSearchDefinition(searchDefinition, options) {\n      if (_.isString(searchDefinition)) {\n        (function () {\n          var obj = {};\n\n          _.each(options.index.fields, function (field) {\n            obj[field] = searchDefinition;\n          });\n\n          searchDefinition = obj;\n        })();\n      }\n\n      return searchDefinition;\n    }\n\n    return transformSearchDefinition;\n  }();\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   * @param indexOptions\n   */\n\n\n  ReactiveEngine.prototype.checkSearchParam = function () {\n    function checkSearchParam(search, indexOptions) {\n      check(search, Match.OneOf(String, Object));\n\n      if (_.isObject(search)) {\n        _.each(search, function (val, field) {\n          check(val, String);\n\n          if (-1 === _.indexOf(indexOptions.allowedFields, field)) {\n            throw new Meteor.Error('Not allowed to search over field \"' + field + '\"');\n          }\n        });\n      }\n    }\n\n    return checkSearchParam;\n  }();\n\n  /**\n   * Reactively search on the collection.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n\n\n  ReactiveEngine.prototype.search = function () {\n    function search(searchDefinition, options) {\n      if (Meteor.isClient) {\n        return options.index.searchCollection.find(searchDefinition, options.search);\n      } else {\n        return this.getSearchCursor(this.transformSearchDefinition(searchDefinition, options), options);\n      }\n    }\n\n    return search;\n  }();\n\n  return ReactiveEngine;\n}(Engine);","ast":null,"map":{"version":3,"sources":["/packages/easysearch:core/lib/core/reactive-engine.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAMA;6BAAuB;;;;;;;;;;AAQrB,WARqB,cAQrB,CAAY,MAAZ,EAAoB;2CARC,gBAQD;;kEAClB,mBAAM,MAAN,GADkB;;AAGlB,QAAI,UAAS,MAAK,WAAL,EAAkB;AAC7B,YAAM,IAAI,KAAJ,CAAU,8CAAV,CAAN,CAD6B;KAA/B;;AAIA,QAAI,CAAC,EAAE,UAAF,CAAa,MAAK,eAAL,CAAd,EAAqC;AACvC,YAAM,IAAI,KAAJ,CAAU,2DAAV,CAAN,CADuC;KAAzC;iBAPkB;GAApB;;;;;;;;;AARqB,2BAyBrB;oCAAuB;AACrB,aAAO,EAAE,QAAF,CAAW,EAAX,EAAe;AACpB;AAAW,6BAAC,GAAD;mBAAS;WAAT;;;WAAX;AACA;AAAe,iCAAC,KAAD,EAAQ,GAAR;mBAAgB;WAAhB;;;WAAf;OAFK,EAGJ,kBAAM,oBAAN,WAHI,CAAP,CADqB;;;;;;;;;;;;;AAzBF,2BAqCrB;2BAAc,aAAa;AACzB,wBAAM,aAAN,YAAoB,WAApB,EADyB;AAEzB,kBAAY,gBAAZ,GAA+B,IAAI,gBAAJ,CAAqB,WAArB,EAAkC,IAAlC,CAA/B,CAFyB;AAGzB,kBAAY,eAAZ,GAA8B,YAAY,gBAAZ,CAA6B,WAA7B,CAHL;;;;;;;;;;;;;;;;AArCN,2BAmDrB;uCAA0B,kBAAkB,SAAS;AACnD,UAAI,EAAE,QAAF,CAAW,gBAAX,CAAJ,EAAkC;;AAChC,cAAI,MAAM,EAAN;;AAEJ,YAAE,IAAF,CAAO,QAAQ,KAAR,CAAc,MAAd,EAAsB,UAAU,KAAV,EAAiB;AAC5C,gBAAI,KAAJ,IAAa,gBAAb,CAD4C;WAAjB,CAA7B;;AAIA,6BAAmB,GAAnB;aAPgC;OAAlC;;AAUA,aAAO,gBAAP,CAXmD;;;;;;;;;;;;;;AAnDhC,2BAuErB;8BAAiB,QAAQ,cAAc;AACrC,YAAM,MAAN,EAAc,MAAM,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAd,EADqC;;AAGrC,UAAI,EAAE,QAAF,CAAW,MAAX,CAAJ,EAAwB;AACtB,UAAE,IAAF,CAAO,MAAP,EAAe,UAAU,GAAV,EAAe,KAAf,EAAsB;AACnC,gBAAM,GAAN,EAAW,MAAX,EADmC;;AAGnC,cAAI,CAAC,CAAD,KAAO,EAAE,OAAF,CAAU,aAAa,aAAb,EAA4B,KAAtC,CAAP,EAAqD;AACvD,kBAAM,IAAI,OAAO,KAAP,wCAAkD,WAAtD,CAAN,CADuD;WAAzD;SAHa,CAAf,CADsB;OAAxB;;;;;;;;;;;;;;;;AA1EmB,2BA6FrB;oBAAO,kBAAkB,SAAS;AAChC,UAAI,OAAO,QAAP,EAAiB;AACnB,eAAO,QAAQ,KAAR,CAAc,gBAAd,CAA+B,IAA/B,CAAoC,gBAApC,EAAsD,QAAQ,MAAR,CAA7D,CADmB;OAArB,MAEO;AACL,eAAO,KAAK,eAAL,CACL,KAAK,yBAAL,CAA+B,gBAA/B,EAAiD,OAAjD,CADK,EAEL,OAFK,CAAP,CADK;OAFP;;;;;;SA9FmB;EAAuB,OAA9C","file":"/packages/easysearch:core/lib/core/reactive-engine.js.map","sourcesContent":["/**\n * A ReactiveEngine handles the reactive logic, such as subscribing\n * and publishing documents into a self contained collection.\n *\n * @type {ReactiveEngine}\n */\nReactiveEngine = class ReactiveEngine extends Engine {\n  /**\n   * Constructor.\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    super(config);\n\n    if (this === this.constructor) {\n      throw new Error('Cannot initialize instance of ReactiveEngine');\n    }\n\n    if (!_.isFunction(this.getSearchCursor)) {\n      throw new Error('Reactive engine needs to implement getSearchCursor method');\n    }\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, {\n      transform: (doc) => doc,\n      beforePublish: (event, doc) => doc\n    }, super.defaultConfiguration());\n  }\n\n  /**\n   * Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n    indexConfig.searchCollection = new SearchCollection(indexConfig, this);\n    indexConfig.mongoCollection = indexConfig.searchCollection._collection;\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    if (_.isString(searchDefinition)) {\n      let obj = {};\n\n      _.each(options.index.fields, function (field) {\n        obj[field] = searchDefinition;\n      });\n\n      searchDefinition = obj;\n    }\n\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   * @param indexOptions\n   */\n  checkSearchParam(search, indexOptions) {\n    check(search, Match.OneOf(String, Object));\n\n    if (_.isObject(search)) {\n      _.each(search, function (val, field) {\n        check(val, String);\n\n        if (-1 === _.indexOf(indexOptions.allowedFields, field)) {\n          throw new Meteor.Error(`Not allowed to search over field \"${field}\"`);\n        }\n      });\n    }\n  }\n\n  /**\n   * Reactively search on the collection.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options) {\n    if (Meteor.isClient) {\n      return options.index.searchCollection.find(searchDefinition, options.search);\n    } else {\n      return this.getSearchCursor(\n        this.transformSearchDefinition(searchDefinition, options),\n        options\n      );\n    }\n  }\n};\n"]},"hash":"80cae010988014c3a41e2ac752c0ac2f4864c260"}
