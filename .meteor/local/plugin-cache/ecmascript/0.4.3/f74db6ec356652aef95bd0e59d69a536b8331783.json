{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/easysearch:components/lib/single-index.js","filenameRelative":"/packages/easysearch:components/lib/single-index.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/easysearch:components/lib/single-index.js.map","sourceFileName":"/packages/easysearch:components/lib/single-index.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"single-index"},"ignored":false,"code":"var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * The SingleIndexComponent holds logic for components that only can use one index.\n *\n * @type {SingleIndexComponent}\n */\nSingleIndexComponent = function (_BaseComponent) {\n  (0, _inherits3['default'])(SingleIndexComponent, _BaseComponent);\n\n  function SingleIndexComponent() {\n    (0, _classCallCheck3['default'])(this, SingleIndexComponent);\n    return (0, _possibleConstructorReturn3['default'])(this, _BaseComponent.apply(this, arguments));\n  }\n\n  /**\n   * Setup component on created.\n   */\n\n  SingleIndexComponent.prototype.onCreated = function () {\n    function onCreated() {\n      _BaseComponent.prototype.onCreated.call(this);\n\n      if (this.indexes.length > 1) {\n        throw new Meteor.Error('only-single-index', 'Can only specify one index');\n      }\n    }\n\n    return onCreated;\n  }();\n\n  /**\n   * Return the index\n   *\n   * @returns {Index}\n   */\n\n\n  (0, _createClass3['default'])(SingleIndexComponent, [{\n    key: 'index',\n    get: function () {\n      function get() {\n        return _.first(this.indexes);\n      }\n\n      return get;\n    }()\n\n    /**\n     * Return the dictionary.\n     *\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'dict',\n    get: function () {\n      function get() {\n        return _.first(this.dicts);\n      }\n\n      return get;\n    }()\n  }]);\n  return SingleIndexComponent;\n}(BaseComponent);\n\nEasySearch.SingleIndexComponent = SingleIndexComponent;","ast":null,"map":{"version":3,"sources":["/packages/easysearch:components/lib/single-index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAKA;6BAA6B;;;;;;;;;;;iCAI3B;yBAAY;AACV,+BAAM,SAAN,YADU;;AAGV,UAAI,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAtB,EAAyB;AAC3B,cAAM,IAAI,OAAO,KAAP,CAAa,mBAAjB,EAAsC,4BAAtC,CAAN,CAD2B;OAA7B;;;;;;;;;;;;;gCAPyB;;;qBAiBf;AACV,eAAO,EAAE,KAAF,CAAQ,KAAK,OAAL,CAAf,CADU;;;;;;;;;;;;;;;qBASD;AACT,eAAO,EAAE,KAAF,CAAQ,KAAK,KAAL,CAAf,CADS;;;;;;SA1BgB;EAA6B,cAA1D;;AA+BA,WAAW,oBAAX,GAAkC,oBAAlC","file":"/packages/easysearch:components/lib/single-index.js.map","sourcesContent":["/**\n * The SingleIndexComponent holds logic for components that only can use one index.\n *\n * @type {SingleIndexComponent}\n */\nSingleIndexComponent = class SingleIndexComponent extends BaseComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n\n    if (this.indexes.length > 1) {\n      throw new Meteor.Error('only-single-index', 'Can only specify one index');\n    }\n  }\n\n  /**\n   * Return the index\n   *\n   * @returns {Index}\n   */\n  get index() {\n    return _.first(this.indexes);\n  }\n\n  /**\n   * Return the dictionary.\n   *\n   * @returns {Object}\n   */\n  get dict() {\n    return _.first(this.dicts);\n  }\n};\n\nEasySearch.SingleIndexComponent = SingleIndexComponent;\n"]},"hash":"f74db6ec356652aef95bd0e59d69a536b8331783"}
