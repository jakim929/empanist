{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]}],"exports":{"exported":["Transactions"],"specifiers":[{"kind":"local","local":"Transactions","exported":"Transactions"}]}}},"options":{"filename":"/collections/transactions.js","filenameRelative":"/collections/transactions.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/collections/transactions.js.map","sourceFileName":"/collections/transactions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"transactions"},"ignored":false,"code":"exports.__esModule = true;\nexports.Transactions = undefined;\n\nvar _mongo = require('meteor/mongo');\n\nvar Transactions = exports.Transactions = new _mongo.Mongo.Collection('transactions');\n\nTransactionSchema = new SimpleSchema({\n  musician: {\n    type: String,\n    label: \"Musician ID\",\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function () {\n      function autoValue() {\n        return this.userId;\n      }\n\n      return autoValue;\n    }()\n  },\n\n  accompanist: {\n    type: String,\n    label: \"Accompanist ID\",\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function () {\n      function autoValue() {\n        return FlowRouter.getParam(\"profileId\");\n      }\n\n      return autoValue;\n    }()\n  },\n\n  repertoire: {\n    type: [String],\n    label: \"Planned Repertoire\"\n  },\n\n  status: {\n    type: String,\n    label: \"Booking Status\",\n    allowedValues: ['Accepted', 'Rejected', 'Offered', 'Cancelled'],\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function () {\n      function autoValue() {\n        return 'Offered';\n      }\n\n      return autoValue;\n    }()\n  },\n\n  startDate: {\n    type: Date,\n    label: \"Start Date\"\n  },\n\n  endDate: {\n    type: Date,\n    label: \"End Date\"\n  },\n\n  'sessions.$.location': {\n    type: String,\n    label: 'Session Location',\n    optional: true\n  },\n\n  'sessions.$.date': {\n    type: Date,\n    label: 'Session Date',\n    optional: true\n  },\n\n  'sessions.$.rating': {\n    type: Number,\n    label: 'Session Rating',\n    optional: true\n  },\n\n  rating: {\n    type: Number,\n    label: 'Booking Rating',\n    optional: true,\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n\n});\n\nTransactions.attachSchema(TransactionSchema);","ast":null,"map":{"version":3,"sources":["/collections/transactions.js"],"names":[],"mappings":";;;AAAA;;AAEO,IAAM,sCAAe,IAAI,aAAM,UAAN,CAAiB,cAArB,CAAf;;AAEb,oBAAoB,IAAI,YAAJ,CAAiB;AACnC,YAAU;AACR,UAAM,MAAN;AACA,WAAO,aAAP;AACA,cAAU;AACR,YAAM,QAAN;KADF;AAGA;AAAW,2BAAW;AACpB,eAAO,KAAK,MAAL,CADa;OAAX;;;OAAX;GANF;;AAWA,eAAa;AACX,UAAM,MAAN;AACA,WAAO,gBAAP;AACA,cAAU;AACR,YAAM,QAAN;KADF;AAGA;AAAW,2BAAW;AACpB,eAAO,WAAW,QAAX,CAAoB,WAApB,CAAP,CADoB;OAAX;;;OAAX;GANF;;AAWA,cAAY;AACV,UAAM,CAAC,MAAD,CAAN;AACA,WAAO,oBAAP;GAFF;;AAKA,UAAQ;AACN,UAAM,MAAN;AACA,WAAO,gBAAP;AACA,mBAAe,CAAC,UAAD,EAAa,UAAb,EAAyB,SAAzB,EAAoC,WAApC,CAAf;AACA,cAAU;AACR,YAAM,QAAN;KADF;AAGA;AAAW,2BAAW;AACpB,eAAO,SAAP,CADoB;OAAX;;;OAAX;GAPF;;AAYA,aAAW;AACT,UAAM,IAAN;AACA,WAAO,YAAP;GAFF;;AAKA,WAAS;AACP,UAAM,IAAN;AACA,WAAO,UAAP;GAFF;;AAKA,yBAAuB;AACrB,UAAM,MAAN;AACA,WAAM,kBAAN;AACA,cAAU,IAAV;GAHF;;AAMA,qBAAmB;AACjB,UAAM,IAAN;AACA,WAAO,cAAP;AACA,cAAU,IAAV;GAHF;;AAMA,uBAAqB;AACnB,UAAM,MAAN;AACA,WAAO,gBAAP;AACA,cAAU,IAAV;GAHF;;AAMA,UAAQ;AACN,UAAM,MAAN;AACA,WAAO,gBAAP;AACA,cAAU,IAAV;AACA,cAAU;AACR,YAAM,QAAN;KADF;GAJF;;CApEkB,CAApB;;AA+EA,aAAa,YAAb,CAA0B,iBAA1B","file":"/collections/transactions.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const Transactions = new Mongo.Collection('transactions');\n\nTransactionSchema = new SimpleSchema({\n  musician: {\n    type: String,\n    label: \"Musician ID\",\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function() {\n      return this.userId;\n    }\n  },\n\n  accompanist: {\n    type: String,\n    label: \"Accompanist ID\",\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function() {\n      return FlowRouter.getParam(\"profileId\");\n    }\n  },\n\n  repertoire: {\n    type: [String],\n    label: \"Planned Repertoire\"\n  },\n\n  status: {\n    type: String,\n    label: \"Booking Status\",\n    allowedValues: ['Accepted', 'Rejected', 'Offered', 'Cancelled'],\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function() {\n      return 'Offered'\n    }\n  },\n\n  startDate: {\n    type: Date,\n    label: \"Start Date\"\n  },\n\n  endDate: {\n    type: Date,\n    label: \"End Date\"\n  },\n\n  'sessions.$.location': {\n    type: String,\n    label:'Session Location',\n    optional: true\n  },\n\n  'sessions.$.date': {\n    type: Date,\n    label: 'Session Date',\n    optional: true\n  },\n\n  'sessions.$.rating': {\n    type: Number,\n    label: 'Session Rating',\n    optional: true\n  },\n\n  rating: {\n    type: Number,\n    label: 'Booking Rating',\n    optional: true,\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n\n});\n\nTransactions.attachSchema(TransactionSchema)\n"]},"hash":"d56e7ef748e27e3ed52fb1d730ab1199180fc476"}
