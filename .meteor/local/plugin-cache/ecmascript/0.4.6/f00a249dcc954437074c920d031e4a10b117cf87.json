{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/aldeed:template-extension/lib/template-instance-parent.js","filenameRelative":"/packages/aldeed:template-extension/lib/template-instance-parent.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/aldeed:template-extension/lib/template-instance-parent.js.map","sourceFileName":"/packages/aldeed:template-extension/lib/template-instance-parent.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"template-instance-parent"},"ignored":false,"code":"// Access parent template instance. \"height\" is the number of levels beyond the\n// current template instance to look. By default block helper template instances\n// are skipped, but if \"includeBlockHelpers\" is set to true, they are not.\n// See https://github.com/meteor/meteor/issues/3071\nBlaze.TemplateInstance.prototype.parent = function () {\n  function parent(height, includeBlockHelpers) {\n    // If height is null or undefined, we default to 1, the first parent.\n    if (height == null) height = 1;\n\n    var i = 0;\n    var template = this;\n    while (i < height && template) {\n      var view = parentView(template.view, includeBlockHelpers);\n      // We skip contentBlock views which are injected by Meteor when using\n      // block helpers (in addition to block helper view). This matches more\n      // the visual structure of templates and not the internal implementation.\n      while (view && (!view.template || view.name === '(contentBlock)' || view.name === '(elseBlock)')) {\n        view = parentView(view, includeBlockHelpers);\n      }\n      if (!view) return null;\n      // Body view has template field, but not templateInstance,\n      // which more or less signals that we reached the top.\n      template = typeof view.templateInstance === 'function' ? view.templateInstance() : null;\n      i++;\n    }\n    return template;\n  }\n\n  return parent;\n}();\n\nfunction parentView(view, includeBlockHelpers) {\n  if (includeBlockHelpers) return view.originalParentView || view.parentView;\n  return view.parentView;\n}","ast":null,"map":{"version":3,"sources":["/packages/aldeed:template-extension/lib/template-instance-parent.js"],"names":[],"mappings":";;;;AAIA,MAAM,gBAAN,CAAuB,SAAvB,CAAiC,MAAjC;AAA0C,WAAS,MAAT,CAAgB,MAAhB,EAAwB,mBAAxB,EAA6C;;AAErF,QAAI,UAAU,IAAd,EAAoB,SAAS,CAAT;;AAEpB,QAAI,IAAI,CAAR;AACA,QAAI,WAAW,IAAf;AACA,WAAO,IAAI,MAAJ,IAAc,QAArB,EAA+B;AAC7B,UAAI,OAAO,WAAW,SAAS,IAApB,EAA0B,mBAA1B,CAAX;;;;AAIA,aAAO,SAAS,CAAC,KAAK,QAAN,IAAkB,KAAK,IAAL,KAAc,gBAAhC,IAAoD,KAAK,IAAL,KAAc,aAA3E,CAAP,EAAkG;AAChG,eAAO,WAAW,IAAX,EAAiB,mBAAjB,CAAP;AACD;AACD,UAAI,CAAC,IAAL,EAAW,OAAO,IAAP;;;AAGX,iBAAW,OAAO,KAAK,gBAAZ,KAAiC,UAAjC,GAA8C,KAAK,gBAAL,EAA9C,GAAwE,IAAnF;AACA;AACD;AACD,WAAO,QAAP;AACD;;AArBD,SAAmD,MAAnD;AAAA;;AAuBA,SAAS,UAAT,CAAoB,IAApB,EAA0B,mBAA1B,EAA+C;AAC7C,MAAI,mBAAJ,EAAyB,OAAO,KAAK,kBAAL,IAA2B,KAAK,UAAvC;AACzB,SAAO,KAAK,UAAZ;AACD","file":"/packages/aldeed:template-extension/lib/template-instance-parent.js.map","sourcesContent":["// Access parent template instance. \"height\" is the number of levels beyond the\n// current template instance to look. By default block helper template instances\n// are skipped, but if \"includeBlockHelpers\" is set to true, they are not.\n// See https://github.com/meteor/meteor/issues/3071\nBlaze.TemplateInstance.prototype.parent = function parent(height, includeBlockHelpers) {\n  // If height is null or undefined, we default to 1, the first parent.\n  if (height == null) height = 1;\n\n  var i = 0;\n  var template = this;\n  while (i < height && template) {\n    var view = parentView(template.view, includeBlockHelpers);\n    // We skip contentBlock views which are injected by Meteor when using\n    // block helpers (in addition to block helper view). This matches more\n    // the visual structure of templates and not the internal implementation.\n    while (view && (!view.template || view.name === '(contentBlock)' || view.name === '(elseBlock)')) {\n      view = parentView(view, includeBlockHelpers);\n    }\n    if (!view) return null;\n    // Body view has template field, but not templateInstance,\n    // which more or less signals that we reached the top.\n    template = typeof view.templateInstance === 'function' ? view.templateInstance() : null;\n    i++;\n  }\n  return template;\n};\n\nfunction parentView(view, includeBlockHelpers) {\n  if (includeBlockHelpers) return view.originalParentView || view.parentView;\n  return view.parentView;\n}\n"]},"hash":"f00a249dcc954437074c920d031e4a10b117cf87"}
