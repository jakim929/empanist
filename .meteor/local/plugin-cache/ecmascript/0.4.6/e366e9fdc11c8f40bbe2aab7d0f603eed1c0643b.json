{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/aldeed:template-extension/lib/template-copy-as.js","filenameRelative":"/packages/aldeed:template-extension/lib/template-copy-as.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/aldeed:template-extension/lib/template-copy-as.js.map","sourceFileName":"/packages/aldeed:template-extension/lib/template-copy-as.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"template-copy-as"},"ignored":false,"code":"Template.prototype.copyAs = function () {\n  function copyAs(newTemplateName) {\n    var self = this;\n\n    function createNewTemplate(templateName) {\n      var newTemplate = Template[templateName] = new Template(\"Template.\" + templateName, self.renderFunction);\n\n      newTemplate.inheritsHelpersFrom(self);\n      newTemplate.inheritsEventsFrom(self);\n      newTemplate.inheritsHooksFrom(self);\n\n      return newTemplate;\n    }\n\n    // Check if newTemplateName is an array\n    if (_.isArray(newTemplateName)) {\n      var result = [];\n      for (var _iterator = newTemplateName, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var name = _ref;\n\n        result.push(createNewTemplate(name));\n      }\n      return result;\n    } else {\n      //newTemplateName is a string\n      return createNewTemplate(newTemplateName);\n    }\n  }\n\n  return copyAs;\n}();","ast":null,"map":{"version":3,"sources":["/packages/aldeed:template-extension/lib/template-copy-as.js"],"names":[],"mappings":"AAAA,SAAS,SAAT,CAAmB,MAAnB;AAA4B,WAAS,MAAT,CAAgB,eAAhB,EAAiC;AAC3D,QAAI,OAAO,IAAX;;AAEA,aAAS,iBAAT,CAA2B,YAA3B,EAAyC;AACvC,UAAI,cACJ,SAAS,YAAT,IAAyB,IAAI,QAAJ,eAAyB,YAAzB,EAAyC,KAAK,cAA9C,CADzB;;AAGA,kBAAY,mBAAZ,CAAgC,IAAhC;AACA,kBAAY,kBAAZ,CAA+B,IAA/B;AACA,kBAAY,iBAAZ,CAA8B,IAA9B;;AAEA,aAAO,WAAP;AACD;;;AAGD,QAAI,EAAE,OAAF,CAAU,eAAV,CAAJ,EAAgC;AAC9B,UAAI,SAAS,EAAb;AACA,2BAAiB,eAAjB,kHAAkC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAzB,IAAyB;;AAChC,eAAO,IAAP,CAAY,kBAAkB,IAAlB,CAAZ;AACD;AACD,aAAO,MAAP;AACD,KAND,MAMO;;AACL,aAAO,kBAAkB,eAAlB,CAAP;AACD;AACF;;AAxBD,SAAqC,MAArC;AAAA","file":"/packages/aldeed:template-extension/lib/template-copy-as.js.map","sourcesContent":["Template.prototype.copyAs = function copyAs(newTemplateName) {\n  var self = this;\n\n  function createNewTemplate(templateName) {\n    var newTemplate =\n    Template[templateName] = new Template(`Template.${templateName}`, self.renderFunction);\n\n    newTemplate.inheritsHelpersFrom(self);\n    newTemplate.inheritsEventsFrom(self);\n    newTemplate.inheritsHooksFrom(self);\n\n    return newTemplate;\n  }\n\n  // Check if newTemplateName is an array\n  if (_.isArray(newTemplateName)) {\n    let result = [];\n    for (let name of newTemplateName) {\n      result.push(createNewTemplate(name));\n    }\n    return result;\n  } else { //newTemplateName is a string\n    return createNewTemplate(newTemplateName);\n  }\n};\n"]},"hash":"e366e9fdc11c8f40bbe2aab7d0f603eed1c0643b"}
