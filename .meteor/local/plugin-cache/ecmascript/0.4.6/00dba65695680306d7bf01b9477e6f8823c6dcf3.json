{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js","filenameRelative":"/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js.map","sourceFileName":"/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"template-inherits-helpers-from"},"ignored":false,"code":"Template.prototype.inheritsHelpersFrom = function () {\n  function inheritsHelpersFrom(otherTemplate) {\n    var self = this;\n\n    function inheritHelpers(template) {\n      // String template names can be provided and template object is looked up\n      if (typeof template === 'string') template = Template[template];\n      if (!template) return;\n\n      var inheritedHelpers = {};\n      _.each(template.__helpers, function (helper, name) {\n        if (name.charAt(0) === \" \") inheritedHelpers[name.slice(1)] = helper;\n      });\n\n      self.helpers(inheritedHelpers);\n    }\n\n    // Accept an array as otherTemplate argument\n    if (_.isArray(otherTemplate)) {\n      _.each(otherTemplate, inheritHelpers);\n    } else {\n      //otherTemplate is a string\n      inheritHelpers(otherTemplate);\n    }\n  }\n\n  return inheritsHelpersFrom;\n}();","ast":null,"map":{"version":3,"sources":["/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js"],"names":[],"mappings":"AAAA,SAAS,SAAT,CAAmB,mBAAnB;AAAyC,WAAS,mBAAT,CAA6B,aAA7B,EAA4C;AACnF,QAAI,OAAO,IAAX;;AAEA,aAAS,cAAT,CAAwB,QAAxB,EAAkC;;AAEhC,UAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC,WAAW,SAAS,QAAT,CAAX;AAClC,UAAI,CAAC,QAAL,EAAe;;AAEf,UAAI,mBAAmB,EAAvB;AACA,QAAE,IAAF,CAAO,SAAS,SAAhB,EAA2B,UAAC,MAAD,EAAS,IAAT,EAAkB;AAC3C,YAAI,KAAK,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B,iBAAiB,KAAK,KAAL,CAAW,CAAX,CAAjB,IAAkC,MAAlC;AAC7B,OAFD;;AAIA,WAAK,OAAL,CAAa,gBAAb;AACD;;;AAGD,QAAI,EAAE,OAAF,CAAU,aAAV,CAAJ,EAA8B;AAC5B,QAAE,IAAF,CAAO,aAAP,EAAsB,cAAtB;AACD,KAFD,MAEO;;AACL,qBAAe,aAAf;AACD;AACF;;AAtBD,SAAkD,mBAAlD;AAAA","file":"/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js.map","sourcesContent":["Template.prototype.inheritsHelpersFrom = function inheritsHelpersFrom(otherTemplate) {\n  var self = this;\n  \n  function inheritHelpers(template) {\n    // String template names can be provided and template object is looked up\n    if (typeof template === 'string') template = Template[template];\n    if (!template) return;\n    \n    let inheritedHelpers = {};\n    _.each(template.__helpers, (helper, name) => {\n      if (name.charAt(0) === \" \") inheritedHelpers[name.slice(1)] = helper;\n    });\n\n    self.helpers(inheritedHelpers);\n  }\n\n  // Accept an array as otherTemplate argument\n  if (_.isArray(otherTemplate)) {\n    _.each(otherTemplate, inheritHelpers);\n  } else { //otherTemplate is a string\n    inheritHelpers(otherTemplate);\n  }\n};\n"]},"hash":"00dba65695680306d7bf01b9477e6f8823c6dcf3"}
