{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]}],"exports":{"exported":["Transactions","Sessions"],"specifiers":[{"kind":"local","local":"Transactions","exported":"Transactions"},{"kind":"local","local":"Sessions","exported":"Sessions"}]}}},"options":{"filename":"/collections/transactions.js","filenameRelative":"/collections/transactions.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/collections/transactions.js.map","sourceFileName":"/collections/transactions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"transactions"},"ignored":false,"code":"module.export({Transactions:function(){return Transactions},Sessions:function(){return Sessions}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});\n\nvar Transactions = new Mongo.Collection('transactions');\nvar Sessions = new Mongo.Collection('sessions');\n\nTransactionSchema = new SimpleSchema({\n  musician: {\n    type: String,\n    label: \"Musician ID\"\n  },\n\n  // autoform: {\n  //   type: \"hidden\"\n  // }\n  accompanist: {\n    type: String,\n    label: \"Accompanist ID\"\n  },\n\n  // autoform: {\n  //   type: \"hidden\"\n  // }\n  repertoire: {\n    type: [String],\n    label: \"Planned Repertoire\"\n  },\n\n  status: {\n    type: String,\n    label: \"Booking Status\",\n    allowedValues: ['Pending', 'Ongoing', 'Completed', 'Rejected', 'Cancelled']\n  },\n\n  // autoform: {\n  //   type: \"hidden\"\n  // }\n  startDate: {\n    type: Date,\n    label: \"Start Date\"\n  },\n\n  endDate: {\n    type: Date,\n    label: \"End Date\"\n  },\n\n  rating: {\n    type: Number,\n    label: 'Booking Rating',\n    optional: true\n  }\n});\n\n// autoform: {\n//   type: \"hidden\"\n// }\nSessionSchema = new SimpleSchema({\n\n  transaction: {\n    type: String,\n    label: \"Transaction ID\",\n    optional: true\n  },\n\n  // autoform: {\n  //   type: \"hidden\"\n  // }\n  location: {\n    type: String,\n    label: 'Session Location'\n  },\n\n  suggestedTimes: {\n    type: [Date],\n    label: 'Suggested Times for Session'\n  },\n\n  startTime: {\n    type: Date,\n    optional: true,\n    label: 'Start Time'\n  },\n\n  duration: {\n    type: Number,\n    label: \"Duration in Hours\"\n  },\n\n  status: {\n    type: String,\n    label: 'Session Status',\n    allowedValues: ['Pending', 'Confirmed', 'Completed', 'Cancelled'],\n    optional: true\n  }\n\n});\n\nSessions.attachSchema(SessionSchema);\nTransactions.attachSchema(TransactionSchema);","ast":null,"map":{"version":3,"sources":["/collections/transactions.js"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAM,eAAe,IAAI,MAAM,UAAV,CAAqB,cAArB,CAArB;AACP,OAAO,IAAM,WAAW,IAAI,MAAM,UAAV,CAAqB,UAArB,CAAjB;;AAGP,oBAAoB,IAAI,YAAJ,CAAiB;AACnC,YAAU;AACR,UAAM,MADE;AAER,WAAO;AAFC,GADyB;;;;;AASnC,eAAa;AACX,UAAM,MADK;AAEX,WAAO;AAFI,GATsB;;;;;AAiBnC,cAAY;AACV,UAAM,CAAC,MAAD,CADI;AAEV,WAAO;AAFG,GAjBuB;;AAsBnC,UAAQ;AACN,UAAM,MADA;AAEN,WAAO,gBAFD;AAGN,mBAAe,CAAE,SAAF,EAAa,SAAb,EAAwB,WAAxB,EAAqC,UAArC,EAAiD,WAAjD;AAHT,GAtB2B;;;;;AA+BnC,aAAW;AACT,UAAM,IADG;AAET,WAAO;AAFE,GA/BwB;;AAoCnC,WAAS;AACP,UAAM,IADC;AAEP,WAAO;AAFA,GApC0B;;AAyCnC,UAAQ;AACN,UAAM,MADA;AAEN,WAAO,gBAFD;AAGN,cAAU;AAHJ;AAzC2B,CAAjB,CAApB;;;;;AAoDA,gBAAgB,IAAI,YAAJ,CAAiB;;AAE/B,eAAa;AACX,UAAM,MADK;AAEX,WAAO,gBAFI;AAGX,cAAU;AAHC,GAFkB;;;;;AAW/B,YAAU;AACR,UAAM,MADE;AAER,WAAM;AAFE,GAXqB;;AAgB/B,kBAAgB;AACd,UAAM,CAAC,IAAD,CADQ;AAEd,WAAO;AAFO,GAhBe;;AAqB/B,aAAW;AACT,UAAM,IADG;AAET,cAAU,IAFD;AAGT,WAAO;AAHE,GArBoB;;AA2B/B,YAAU;AACR,UAAM,MADE;AAER,WAAO;AAFC,GA3BqB;;AAgC/B,UAAQ;AACN,UAAM,MADA;AAEN,WAAO,gBAFD;AAGN,mBAAe,CAAE,SAAF,EAAa,WAAb,EAA0B,WAA1B,EAAuC,WAAvC,CAHT;AAIN,cAAU;AAJJ;;AAhCuB,CAAjB,CAAhB;;AA0CA,SAAS,YAAT,CAAsB,aAAtB;AACA,aAAa,YAAb,CAA0B,iBAA1B","file":"/collections/transactions.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const Transactions = new Mongo.Collection('transactions');\nexport const Sessions = new Mongo.Collection('sessions');\n\n\nTransactionSchema = new SimpleSchema({\n  musician: {\n    type: String,\n    label: \"Musician ID\",\n    // autoform: {\n    //   type: \"hidden\"\n    // }\n  },\n\n  accompanist: {\n    type: String,\n    label: \"Accompanist ID\",\n    // autoform: {\n    //   type: \"hidden\"\n    // }\n  },\n\n  repertoire: {\n    type: [String],\n    label: \"Planned Repertoire\"\n  },\n\n  status: {\n    type: String,\n    label: \"Booking Status\",\n    allowedValues: [ 'Pending', 'Ongoing', 'Completed', 'Rejected', 'Cancelled'],\n    // autoform: {\n    //   type: \"hidden\"\n    // }\n  },\n\n  startDate: {\n    type: Date,\n    label: \"Start Date\"\n  },\n\n  endDate: {\n    type: Date,\n    label: \"End Date\"\n  },\n\n  rating: {\n    type: Number,\n    label: 'Booking Rating',\n    optional: true,\n    // autoform: {\n    //   type: \"hidden\"\n    // }\n  }\n});\n\n\nSessionSchema = new SimpleSchema({\n\n  transaction: {\n    type: String,\n    label: \"Transaction ID\",\n    optional: true,\n    // autoform: {\n    //   type: \"hidden\"\n    // }\n  },\n\n  location: {\n    type: String,\n    label:'Session Location'\n  },\n\n  suggestedTimes: {\n    type: [Date],\n    label: 'Suggested Times for Session'\n  },\n\n  startTime: {\n    type: Date,\n    optional: true,\n    label: 'Start Time'\n  },\n\n  duration: {\n    type: Number,\n    label: \"Duration in Hours\"\n  },\n\n  status: {\n    type: String,\n    label: 'Session Status',\n    allowedValues: [ 'Pending', 'Confirmed', 'Completed', 'Cancelled'],\n    optional: true\n  }\n\n\n})\n\nSessions.attachSchema(SessionSchema)\nTransactions.attachSchema(TransactionSchema)\n"]},"hash":"f04b93c1980d5e68281e5a75f67580dde6068366"}
