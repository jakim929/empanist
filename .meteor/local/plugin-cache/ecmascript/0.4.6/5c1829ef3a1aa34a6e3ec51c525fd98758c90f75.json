{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/easysearch:core/lib/core/reactive-engine.js","filenameRelative":"/packages/easysearch:core/lib/core/reactive-engine.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/easysearch:core/lib/core/reactive-engine.js.map","sourceFileName":"/packages/easysearch:core/lib/core/reactive-engine.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"reactive-engine"},"ignored":false,"code":"var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * A ReactiveEngine handles the reactive logic, such as subscribing\n * and publishing documents into a self contained collection.\n *\n * @type {ReactiveEngine}\n */\nReactiveEngine = function (_Engine) {\n  (0, _inherits3['default'])(ReactiveEngine, _Engine);\n\n  /**\n   * Constructor.\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n\n  function ReactiveEngine(config) {\n    (0, _classCallCheck3['default'])(this, ReactiveEngine);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _Engine.call(this, config));\n\n    if (_this === _this.constructor) {\n      throw new Error('Cannot initialize instance of ReactiveEngine');\n    }\n\n    if (!_.isFunction(_this.getSearchCursor)) {\n      throw new Error('Reactive engine needs to implement getSearchCursor method');\n    }\n    return _this;\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n\n\n  ReactiveEngine.prototype.defaultConfiguration = function defaultConfiguration() {\n    return _.defaults({}, {\n      transform: function transform(doc) {\n        return doc;\n      },\n      beforePublish: function beforePublish(event, doc) {\n        return doc;\n      }\n    }, _Engine.prototype.defaultConfiguration.call(this));\n  };\n\n  /**\n   * Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n\n\n  ReactiveEngine.prototype.onIndexCreate = function onIndexCreate(indexConfig) {\n    _Engine.prototype.onIndexCreate.call(this, indexConfig);\n    indexConfig.searchCollection = new SearchCollection(indexConfig, this);\n    indexConfig.mongoCollection = indexConfig.searchCollection._collection;\n  };\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n\n\n  ReactiveEngine.prototype.transformSearchDefinition = function transformSearchDefinition(searchDefinition, options) {\n    if (_.isString(searchDefinition)) {\n      (function () {\n        var obj = {};\n\n        _.each(options.index.fields, function (field) {\n          obj[field] = searchDefinition;\n        });\n\n        searchDefinition = obj;\n      })();\n    }\n\n    return searchDefinition;\n  };\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   * @param indexOptions\n   */\n\n\n  ReactiveEngine.prototype.checkSearchParam = function checkSearchParam(search, indexOptions) {\n    check(search, Match.OneOf(String, Object));\n\n    if (_.isObject(search)) {\n      _.each(search, function (val, field) {\n        check(val, String);\n\n        if (-1 === _.indexOf(indexOptions.allowedFields, field)) {\n          throw new Meteor.Error('Not allowed to search over field \"' + field + '\"');\n        }\n      });\n    }\n  };\n\n  /**\n   * Reactively search on the collection.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n\n\n  ReactiveEngine.prototype.search = function search(searchDefinition, options) {\n    if (Meteor.isClient) {\n      return options.index.searchCollection.find(searchDefinition, options.search);\n    } else {\n      return this.getSearchCursor(this.transformSearchDefinition(searchDefinition, options), options);\n    }\n  };\n\n  return ReactiveEngine;\n}(Engine);","ast":null,"map":{"version":3,"sources":["/packages/easysearch:core/lib/core/reactive-engine.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAMA;AAAA;;;;;;;;;;AAQE,0BAAY,MAAZ,EAAoB;AAAA;;AAAA,kEAClB,mBAAM,MAAN,CADkB;;AAGlB,QAAI,UAAS,MAAK,WAAlB,EAA+B;AAC7B,YAAM,IAAI,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED,QAAI,CAAC,EAAE,UAAF,CAAa,MAAK,eAAlB,CAAL,EAAyC;AACvC,YAAM,IAAI,KAAJ,CAAU,2DAAV,CAAN;AACD;AATiB;AAUnB;;;;;;;;;AAlBH,2BAyBE,oBAzBF,mCAyByB;AACrB,WAAO,EAAE,QAAF,CAAW,EAAX,EAAe;AACpB,iBAAW,mBAAC,GAAD;AAAA,eAAS,GAAT;AAAA,OADS;AAEpB,qBAAe,uBAAC,KAAD,EAAQ,GAAR;AAAA,eAAgB,GAAhB;AAAA;AAFK,KAAf,EAGJ,kBAAM,oBAAN,WAHI,CAAP;AAID,GA9BH;;;;;;;;;AAAA,2BAqCE,aArCF,0BAqCgB,WArChB,EAqC6B;AACzB,sBAAM,aAAN,YAAoB,WAApB;AACA,gBAAY,gBAAZ,GAA+B,IAAI,gBAAJ,CAAqB,WAArB,EAAkC,IAAlC,CAA/B;AACA,gBAAY,eAAZ,GAA8B,YAAY,gBAAZ,CAA6B,WAA3D;AACD,GAzCH;;;;;;;;;;;;AAAA,2BAmDE,yBAnDF,sCAmD4B,gBAnD5B,EAmD8C,OAnD9C,EAmDuD;AACnD,QAAI,EAAE,QAAF,CAAW,gBAAX,CAAJ,EAAkC;AAAA;AAChC,YAAI,MAAM,EAAV;;AAEA,UAAE,IAAF,CAAO,QAAQ,KAAR,CAAc,MAArB,EAA6B,UAAU,KAAV,EAAiB;AAC5C,cAAI,KAAJ,IAAa,gBAAb;AACD,SAFD;;AAIA,2BAAmB,GAAnB;AAPgC;AAQjC;;AAED,WAAO,gBAAP;AACD,GA/DH;;;;;;;;;;AAAA,2BAuEE,gBAvEF,6BAuEmB,MAvEnB,EAuE2B,YAvE3B,EAuEyC;AACrC,UAAM,MAAN,EAAc,MAAM,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAd;;AAEA,QAAI,EAAE,QAAF,CAAW,MAAX,CAAJ,EAAwB;AACtB,QAAE,IAAF,CAAO,MAAP,EAAe,UAAU,GAAV,EAAe,KAAf,EAAsB;AACnC,cAAM,GAAN,EAAW,MAAX;;AAEA,YAAI,CAAC,CAAD,KAAO,EAAE,OAAF,CAAU,aAAa,aAAvB,EAAsC,KAAtC,CAAX,EAAyD;AACvD,gBAAM,IAAI,OAAO,KAAX,wCAAsD,KAAtD,OAAN;AACD;AACF,OAND;AAOD;AACF,GAnFH;;;;;;;;;;;;AAAA,2BA6FE,MA7FF,mBA6FS,gBA7FT,EA6F2B,OA7F3B,EA6FoC;AAChC,QAAI,OAAO,QAAX,EAAqB;AACnB,aAAO,QAAQ,KAAR,CAAc,gBAAd,CAA+B,IAA/B,CAAoC,gBAApC,EAAsD,QAAQ,MAA9D,CAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAK,eAAL,CACL,KAAK,yBAAL,CAA+B,gBAA/B,EAAiD,OAAjD,CADK,EAEL,OAFK,CAAP;AAID;AACF,GAtGH;;AAAA;AAAA,EAA8C,MAA9C","file":"/packages/easysearch:core/lib/core/reactive-engine.js.map","sourcesContent":["/**\n * A ReactiveEngine handles the reactive logic, such as subscribing\n * and publishing documents into a self contained collection.\n *\n * @type {ReactiveEngine}\n */\nReactiveEngine = class ReactiveEngine extends Engine {\n  /**\n   * Constructor.\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    super(config);\n\n    if (this === this.constructor) {\n      throw new Error('Cannot initialize instance of ReactiveEngine');\n    }\n\n    if (!_.isFunction(this.getSearchCursor)) {\n      throw new Error('Reactive engine needs to implement getSearchCursor method');\n    }\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, {\n      transform: (doc) => doc,\n      beforePublish: (event, doc) => doc\n    }, super.defaultConfiguration());\n  }\n\n  /**\n   * Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n    indexConfig.searchCollection = new SearchCollection(indexConfig, this);\n    indexConfig.mongoCollection = indexConfig.searchCollection._collection;\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    if (_.isString(searchDefinition)) {\n      let obj = {};\n\n      _.each(options.index.fields, function (field) {\n        obj[field] = searchDefinition;\n      });\n\n      searchDefinition = obj;\n    }\n\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   * @param indexOptions\n   */\n  checkSearchParam(search, indexOptions) {\n    check(search, Match.OneOf(String, Object));\n\n    if (_.isObject(search)) {\n      _.each(search, function (val, field) {\n        check(val, String);\n\n        if (-1 === _.indexOf(indexOptions.allowedFields, field)) {\n          throw new Meteor.Error(`Not allowed to search over field \"${field}\"`);\n        }\n      });\n    }\n  }\n\n  /**\n   * Reactively search on the collection.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options) {\n    if (Meteor.isClient) {\n      return options.index.searchCollection.find(searchDefinition, options.search);\n    } else {\n      return this.getSearchCursor(\n        this.transformSearchDefinition(searchDefinition, options),\n        options\n      );\n    }\n  }\n};\n"]},"hash":"5c1829ef3a1aa34a6e3ec51c525fd98758c90f75"}
