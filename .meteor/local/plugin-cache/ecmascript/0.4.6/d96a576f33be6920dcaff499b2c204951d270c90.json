{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/easysearch:autosuggest/lib/autosuggest.js","filenameRelative":"/packages/easysearch:autosuggest/lib/autosuggest.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/easysearch:autosuggest/lib/autosuggest.js.map","sourceFileName":"/packages/easysearch:autosuggest/lib/autosuggest.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"autosuggest"},"ignored":false,"code":"Template['EasySearch.Autosuggest'].onRendered(function () {\n  var _this = this;\n\n  /**\n   * Helper function to return data for the autosuggest component.\n   *\n   * @param {String} val        Value to return\n   * @param {*}      defaultVal Optional default value to provide\n   *\n   * @return {*}\n   */\n  var getDataValue = function getDataValue(val, defaultVal) {\n    return _this.data[val] || defaultVal;\n  };\n\n  if (!this.data.index) {\n    throw new Meteor.Error('no-index', 'Please provide an index for your component');\n  }\n\n  if (this.data.indexes) {\n    throw new Meteor.Error('only-single-index', 'Can only specify one index');\n  }\n\n  var handle = void 0,\n      computation = void 0,\n      index = this.data.index,\n      valueField = getDataValue('valueField', '_id'),\n      labelField = getDataValue('labelField', index.config.fields[0]),\n      searchField = getDataValue('searchField', labelField),\n      changeConfiguration = getDataValue('changeConfiguration', function (c) {\n    return c;\n  }),\n      suggestionTemplate = Template[getDataValue('renderSuggestion', 'EasySarch.Autogguest.DefaultRenderSuggestion')];\n\n  var select = this.$('select').selectize(changeConfiguration({\n    valueField: valueField,\n    labelField: labelField,\n    searchField: searchField,\n    create: false,\n    preload: true,\n    render: {\n      option: function option(item, escape) {\n        return Blaze.toHTMLWithData(suggestionTemplate, {\n          doc: item,\n          _id: item._id,\n          label: _.get(item, labelField)\n        });\n      }\n    },\n    load: function load(query, callback) {\n      if (computation) {\n        computation.stop();\n      }\n\n      computation = Tracker.autorun(function () {\n        var cursor = index.search(query),\n            docs = cursor.fetch();\n\n        if (handle) {\n          clearTimeout(handle);\n        }\n\n        handle = setTimeout(function () {\n          select[0].selectize.clearOptions();\n          callback(docs);\n        }, 100);\n      });\n    }\n  }));\n});","ast":null,"map":{"version":3,"sources":["/packages/easysearch:autosuggest/lib/autosuggest.js"],"names":[],"mappings":"AAAA,SAAS,wBAAT,EAAmC,UAAnC,CAA8C,YAAY;AAAA;;;;;;;;;;AASxD,MAAM,eAAe,SAAf,YAAe,CAAC,GAAD,EAAM,UAAN;AAAA,WAAqB,MAAK,IAAL,CAAU,GAAV,KAAkB,UAAvC;AAAA,GAArB;;AAEA,MAAI,CAAC,KAAK,IAAL,CAAU,KAAf,EAAsB;AACpB,UAAM,IAAI,OAAO,KAAX,CAAiB,UAAjB,EAA6B,4CAA7B,CAAN;AACD;;AAED,MAAI,KAAK,IAAL,CAAU,OAAd,EAAuB;AACrB,UAAM,IAAI,OAAO,KAAX,CAAiB,mBAAjB,EAAsC,4BAAtC,CAAN;AACD;;AAED,MAAI,eAAJ;AAAA,MAAY,oBAAZ;AAAA,MACE,QAAQ,KAAK,IAAL,CAAU,KADpB;AAAA,MAEE,aAAa,aAAa,YAAb,EAA2B,KAA3B,CAFf;AAAA,MAGE,aAAa,aAAa,YAAb,EAA2B,MAAM,MAAN,CAAa,MAAb,CAAoB,CAApB,CAA3B,CAHf;AAAA,MAIE,cAAc,aAAa,aAAb,EAA4B,UAA5B,CAJhB;AAAA,MAKE,sBAAsB,aAAa,qBAAb,EAAoC,UAAC,CAAD;AAAA,WAAO,CAAP;AAAA,GAApC,CALxB;AAAA,MAME,qBAAqB,SACnB,aAAa,kBAAb,EAAiC,8CAAjC,CADmB,CANvB;;AAUA,MAAM,SAAS,KAAK,CAAL,CAAO,QAAP,EAAiB,SAAjB,CAA2B,oBAAoB;AAC5D,0BAD4D;AAE5D,0BAF4D;AAG5D,4BAH4D;AAI5D,YAAQ,KAJoD;AAK5D,aAAS,IALmD;AAM5D,YAAQ;AACN,cAAQ,gBAAC,IAAD,EAAO,MAAP;AAAA,eAAkB,MAAM,cAAN,CAAqB,kBAArB,EAAyC;AACjE,eAAK,IAD4D;AAEjE,eAAK,KAAK,GAFuD;AAGjE,iBAAO,EAAE,GAAF,CAAM,IAAN,EAAY,UAAZ;AAH0D,SAAzC,CAAlB;AAAA;AADF,KANoD;AAa5D,UAAM,cAAC,KAAD,EAAQ,QAAR,EAAqB;AACzB,UAAI,WAAJ,EAAiB;AACf,oBAAY,IAAZ;AACD;;AAED,oBAAc,QAAQ,OAAR,CAAgB,YAAM;AAClC,YAAI,SAAS,MAAM,MAAN,CAAa,KAAb,CAAb;AAAA,YACE,OAAO,OAAO,KAAP,EADT;;AAGA,YAAI,MAAJ,EAAY;AACV,uBAAa,MAAb;AACD;;AAED,iBAAS,WAAW,YAAM;AACxB,iBAAO,CAAP,EAAU,SAAV,CAAoB,YAApB;AACA,mBAAS,IAAT;AACD,SAHQ,EAGN,GAHM,CAAT;AAID,OAZa,CAAd;AAaD;AA/B2D,GAApB,CAA3B,CAAf;AAiCD,CA9DD","file":"/packages/easysearch:autosuggest/lib/autosuggest.js.map","sourcesContent":["Template['EasySearch.Autosuggest'].onRendered(function () {\n  /**\n   * Helper function to return data for the autosuggest component.\n   *\n   * @param {String} val        Value to return\n   * @param {*}      defaultVal Optional default value to provide\n   *\n   * @return {*}\n   */\n  const getDataValue = (val, defaultVal) => this.data[val] || defaultVal;\n\n  if (!this.data.index) {\n    throw new Meteor.Error('no-index', 'Please provide an index for your component');\n  }\n\n  if (this.data.indexes) {\n    throw new Meteor.Error('only-single-index', 'Can only specify one index');\n  }\n\n  let handle, computation,\n    index = this.data.index,\n    valueField = getDataValue('valueField', '_id'),\n    labelField = getDataValue('labelField', index.config.fields[0]),\n    searchField = getDataValue('searchField', labelField),\n    changeConfiguration = getDataValue('changeConfiguration', (c) => c),\n    suggestionTemplate = Template[\n      getDataValue('renderSuggestion', 'EasySarch.Autogguest.DefaultRenderSuggestion')\n    ];\n\n  const select = this.$('select').selectize(changeConfiguration({\n    valueField,\n    labelField,\n    searchField,\n    create: false,\n    preload: true,\n    render: {\n      option: (item, escape) => Blaze.toHTMLWithData(suggestionTemplate, {\n        doc: item,\n        _id: item._id,\n        label: _.get(item, labelField)\n      })\n    },\n    load: (query, callback) => {\n      if (computation) {\n        computation.stop();\n      }\n\n      computation = Tracker.autorun(() => {\n        let cursor = index.search(query),\n          docs = cursor.fetch();\n\n        if (handle) {\n          clearTimeout(handle);\n        }\n\n        handle = setTimeout(() => {\n          select[0].selectize.clearOptions();\n          callback(docs);\n        }, 100);\n      });\n    }\n  }));\n});\n"]},"hash":"d96a576f33be6920dcaff499b2c204951d270c90"}
