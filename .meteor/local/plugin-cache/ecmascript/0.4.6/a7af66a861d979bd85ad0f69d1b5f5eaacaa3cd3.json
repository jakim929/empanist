{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"./accompanistProfile.js","imported":["AccompanistProfileSchema"],"specifiers":[{"kind":"named","imported":"AccompanistProfileSchema","local":"AccompanistProfileSchema"}]}],"exports":{"exported":["Accounts"],"specifiers":[{"kind":"local","local":"Accounts","exported":"Accounts"}]}}},"options":{"filename":"/collections/account.js","filenameRelative":"/collections/account.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/collections/account.js.map","sourceFileName":"/collections/account.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"account"},"ignored":false,"code":"module.export({Accounts:function(){return Accounts}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var AccompanistProfileSchema;module.import('./accompanistProfile.js',{\"AccompanistProfileSchema\":function(v){AccompanistProfileSchema=v}});\n\n\nvar Accounts = new Mongo.Collection('accounts');\n\nPaymentMethodSchema = new SimpleSchema({\n  paymentType: {\n    type: String,\n    label: \"Payment Type\"\n  }\n});\n\nAccountSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    label: \"User ID\",\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function autoValue() {\n      return this.userId;\n    }\n\n  },\n\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n\n  birthDate: {\n    type: Date,\n    label: \"Date of Birth\"\n  },\n\n  phone: {\n    type: String,\n    label: \"Phone Number\"\n  },\n\n  affiliation: {\n    type: String,\n    label: \"Affiliation\"\n  }\n});\n\nAccounts.attachSchema(AccountSchema);","ast":null,"map":{"version":3,"sources":["/collections/account.js"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,cAAtB;AACA,SAAS,wBAAT,QAAyC,yBAAzC;;AAEA,OAAO,IAAM,WAAW,IAAI,MAAM,UAAV,CAAqB,UAArB,CAAjB;;AAEP,sBAAsB,IAAI,YAAJ,CAAiB;AACrC,eAAa;AACX,UAAM,MADK;AAEX,WAAO;AAFI;AADwB,CAAjB,CAAtB;;AAOA,gBAAgB,IAAI,YAAJ,CAAiB;AAC/B,UAAQ;AACN,UAAM,MADA;AAEN,WAAO,SAFD;AAGN,cAAU;AACR,YAAM;AADE,KAHJ;AAMN,eAAW,qBAAW;AACpB,aAAO,KAAK,MAAZ;AACD;;AARK,GADuB;;AAa/B,QAAM;AACJ,UAAM,MADF;AAEJ,WAAO;AAFH,GAbyB;;AAkB/B,aAAY;AACV,UAAM,IADI;AAEV,WAAO;AAFG,GAlBmB;;AAuB/B,SAAO;AACL,UAAM,MADD;AAEL,WAAO;AAFF,GAvBwB;;AA4B/B,eAAa;AACX,UAAM,MADK;AAEX,WAAO;AAFI;AA5BkB,CAAjB,CAAhB;;AAkCA,SAAS,YAAT,CAAsB,aAAtB","file":"/collections/account.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { AccompanistProfileSchema } from './accompanistProfile.js'\n\nexport const Accounts = new Mongo.Collection('accounts');\n\nPaymentMethodSchema = new SimpleSchema({\n  paymentType: {\n    type: String,\n    label: \"Payment Type\"\n  }\n});\n\nAccountSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    label: \"User ID\",\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function() {\n      return this.userId;\n    }\n\n  },\n\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n\n  birthDate : {\n    type: Date,\n    label: \"Date of Birth\"\n  },\n\n  phone: {\n    type: String,\n    label: \"Phone Number\"\n  },\n\n  affiliation: {\n    type: String,\n    label: \"Affiliation\"\n  }\n});\n\nAccounts.attachSchema(AccountSchema)\n"]},"hash":"a7af66a861d979bd85ad0f69d1b5f5eaacaa3cd3"}
