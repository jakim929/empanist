{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/easysearch:components/lib/core.js","filenameRelative":"/packages/easysearch:components/lib/core.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/easysearch:components/lib/core.js.map","sourceFileName":"/packages/easysearch:components/lib/core.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"core"},"ignored":false,"code":"var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * Extend EasySearch.Index with component functionality.\n *\n * @type {Index}\n */\nEasySearch.Index = function (_EasySearch$Index) {\n  (0, _inherits3['default'])(Index, _EasySearch$Index);\n\n  /**\n   * Constructor.\n   */\n\n  function Index() {\n    (0, _classCallCheck3['default'])(this, Index);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _EasySearch$Index.apply(this, arguments));\n\n    _this.components = {};\n    return _this;\n  }\n\n  /**\n   * Return static default name for components.\n   *\n   * @returns {String}\n   */\n\n\n  /**\n   * Register a component on the index.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n\n  Index.prototype.registerComponent = function () {\n    function registerComponent() {\n      var componentName = arguments.length <= 0 || arguments[0] === undefined ? EasySearch.Index.COMPONENT_DEFAULT_NAME : arguments[0];\n\n      this.components[componentName] = new ReactiveDict('easySearchComponent_' + this.config.name + '_' + componentName + '_' + Random.id());\n    }\n\n    return registerComponent;\n  }();\n\n  /**\n   * Get the reactive dictionary for a component.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n\n\n  Index.prototype.getComponentDict = function () {\n    function getComponentDict() {\n      var componentName = arguments.length <= 0 || arguments[0] === undefined ? EasySearch.Index.COMPONENT_DEFAULT_NAME : arguments[0];\n\n      return this.components[componentName];\n    }\n\n    return getComponentDict;\n  }();\n\n  /**\n   * Get component methods that are useful for implementing search behaviour.\n   *\n   * @param componentName\n   */\n\n\n  Index.prototype.getComponentMethods = function () {\n    function getComponentMethods() {\n      var componentName = arguments.length <= 0 || arguments[0] === undefined ? EasySearch.Index.COMPONENT_DEFAULT_NAME : arguments[0];\n\n      var dict = this.getComponentDict(componentName);\n\n      if (!dict) {\n        throw new Meteor.Error('no-component', 'Component with name \\'' + componentName + '\\' not found');\n      }\n\n      return EasySearch._getComponentMethods(dict, this);\n    }\n\n    return getComponentMethods;\n  }();\n\n  (0, _createClass3['default'])(Index, null, [{\n    key: 'COMPONENT_DEFAULT_NAME',\n    get: function () {\n      function get() {\n        return '__default';\n      }\n\n      return get;\n    }()\n  }]);\n  return Index;\n}(EasySearch.Index);\n\n/**\n * Return true if the current page is valid.\n *\n * @param {Number} totalPagesLength Count of all pages available\n * @param {Number} currentPage      Current page to check\n *\n * @returns {boolean}\n */\nfunction isValidPage(totalPagesLength, currentPage) {\n  return currentPage <= totalPagesLength && currentPage > 0;\n}\n\n/**\n * Helper method to get the pages for pagination as an array.\n *\n * @param totalCount   Total count of results\n * @param pageCount    Count of results per page\n * @param currentPage  Current page\n * @param prevAndNext  True if Next and Previous buttons should appear\n * @param maxPages     Maximum count of pages to show\n *\n * @private\n *\n * @returns {Array}\n */\nEasySearch._getPagesForPagination = function (_ref) {\n  var totalCount = _ref.totalCount;\n  var pageCount = _ref.pageCount;\n  var currentPage = _ref.currentPage;\n  var prevAndNext = _ref.prevAndNext;\n  var maxPages = _ref.maxPages;\n\n  var pages = _.range(1, Math.ceil(totalCount / pageCount) + 1),\n      pagesLength = pages.length;\n\n  if (!isValidPage(pagesLength, currentPage)) {\n    throw new Meteor.Error('invalid-page', 'Current page is not in valid range');\n  }\n\n  if (maxPages) {\n    var startSlice = currentPage > maxPages / 2 ? currentPage - 1 - Math.floor(maxPages / 2) : 0,\n        endSlice = startSlice + maxPages;\n\n    if (endSlice > pagesLength) {\n      pages = pages.slice(-maxPages);\n    } else {\n      pages = pages.slice(startSlice, startSlice + maxPages);\n    }\n  }\n\n  var pageData = _.map(pages, function (page) {\n    var isCurrentPage = page === currentPage;\n    return { page: page, content: page.toString(), current: isCurrentPage, disabled: isCurrentPage };\n  });\n\n  if (prevAndNext) {\n    // Previous\n    var prevPage = isValidPage(pagesLength, currentPage - 1) ? currentPage - 1 : null;\n    pageData.unshift({ page: prevPage, content: 'Prev', current: false, disabled: 1 === currentPage });\n    // Next\n    var nextPage = isValidPage(pagesLength, currentPage + 1) ? currentPage + 1 : null;\n    pageData.push({ page: nextPage, content: 'Next', current: false, disabled: null == nextPage || pagesLength + 1 === currentPage });\n  }\n\n  return pageData;\n};","ast":null,"map":{"version":3,"sources":["/packages/easysearch:components/lib/core.js"],"names":[],"mappings":"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","file":"/packages/easysearch:components/lib/core.js.map","sourcesContent":["/**\n * Extend EasySearch.Index with component functionality.\n *\n * @type {Index}\n */\nEasySearch.Index = class Index extends EasySearch.Index {\n  /**\n   * Constructor.\n   */\n  constructor() {\n    super(...arguments);\n    this.components = {};\n  }\n\n  /**\n   * Return static default name for components.\n   *\n   * @returns {String}\n   */\n  static get COMPONENT_DEFAULT_NAME() {\n    return'__default';\n  }\n\n  /**\n   * Register a component on the index.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n  registerComponent(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    this.components[componentName] = new ReactiveDict(`easySearchComponent_${this.config.name}_${componentName}_${Random.id()}`);\n  }\n\n  /**\n   * Get the reactive dictionary for a component.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n  getComponentDict(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    return this.components[componentName];\n  }\n\n  /**\n   * Get component methods that are useful for implementing search behaviour.\n   *\n   * @param componentName\n   */\n  getComponentMethods(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    let dict = this.getComponentDict(componentName);\n\n    if (!dict) {\n      throw new Meteor.Error('no-component', `Component with name '${componentName}' not found`);\n    }\n\n    return EasySearch._getComponentMethods(dict, this);\n  }\n};\n\n/**\n * Return true if the current page is valid.\n *\n * @param {Number} totalPagesLength Count of all pages available\n * @param {Number} currentPage      Current page to check\n *\n * @returns {boolean}\n */\nfunction isValidPage(totalPagesLength, currentPage) {\n  return currentPage <= totalPagesLength && currentPage > 0;\n}\n\n/**\n * Helper method to get the pages for pagination as an array.\n *\n * @param totalCount   Total count of results\n * @param pageCount    Count of results per page\n * @param currentPage  Current page\n * @param prevAndNext  True if Next and Previous buttons should appear\n * @param maxPages     Maximum count of pages to show\n *\n * @private\n *\n * @returns {Array}\n */\nEasySearch._getPagesForPagination = function ({totalCount, pageCount, currentPage, prevAndNext, maxPages}) {\n  let pages = _.range(1, Math.ceil(totalCount / pageCount) + 1),\n    pagesLength = pages.length;\n\n  if (!isValidPage(pagesLength, currentPage)) {\n    throw new Meteor.Error('invalid-page', 'Current page is not in valid range');\n  }\n\n  if (maxPages) {\n    let startSlice = (currentPage > (maxPages / 2) ? (currentPage - 1) - Math.floor(maxPages / 2) : 0),\n      endSlice = startSlice + maxPages;\n\n    if (endSlice > pagesLength) {\n      pages = pages.slice(-maxPages);\n    } else {\n      pages = pages.slice(startSlice, startSlice + maxPages);\n    }\n  }\n\n  let pageData = _.map(pages, function (page) {\n    let isCurrentPage = page === currentPage;\n    return { page, content: page.toString(), current: isCurrentPage, disabled: isCurrentPage };\n  });\n\n  if (prevAndNext) {\n    // Previous\n    let prevPage = isValidPage(pagesLength, currentPage - 1) ? currentPage - 1 : null;\n    pageData.unshift({ page: prevPage, content: 'Prev', current: false, disabled: 1 === currentPage });\n    // Next\n    let nextPage = isValidPage(pagesLength, currentPage + 1) ? currentPage + 1 : null;\n    pageData.push(\n      { page: nextPage, content: 'Next', current: false, disabled: null == nextPage || pagesLength + 1 === currentPage }\n    );\n  }\n\n  return pageData;\n};\n"]},"hash":"de8a9e85d3c78a025b261a8f2404bcb6847fe1f4"}
