{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/aldeed:template-extension/lib/template-parent-data-function.js","filenameRelative":"/packages/aldeed:template-extension/lib/template-parent-data-function.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/aldeed:template-extension/lib/template-parent-data-function.js.map","sourceFileName":"/packages/aldeed:template-extension/lib/template-parent-data-function.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"template-parent-data-function"},"ignored":false,"code":"// Allow to specify a function to test parent data for at various\n// levels, instead of specifying a fixed number of levels to traverse.\nvar originalParentData = Blaze._parentData;\nBlaze._parentData = function (height, _functionWrapped) {\n  // If height is not a function, simply call original implementation.\n  if (typeof height !== 'function') return originalParentData(height, _functionWrapped);\n\n  var theWith = Blaze.getView('with');\n  var test = function test() {\n    return height(theWith.dataVar.get());\n  };\n  while (theWith) {\n    if (Tracker.nonreactive(test)) break;\n    theWith = Blaze.getView(theWith, 'with');\n  }\n\n  // _functionWrapped is internal and will not be\n  // specified with non numeric height, so we ignore it.\n  if (!theWith) return null;\n  // This registers a Tracker dependency.\n  return theWith.dataVar.get();\n};\n\nTemplate.parentData = Blaze._parentData;","ast":null,"map":{"version":3,"sources":["/packages/aldeed:template-extension/lib/template-parent-data-function.js"],"names":[],"mappings":";;AAEA,IAAI,qBAAqB,MAAM,WAA/B;AACA,MAAM,WAAN,GAAoB,UAAU,MAAV,EAAkB,gBAAlB,EAAoC;;AAEtD,MAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC,OAAO,mBAAmB,MAAnB,EAA2B,gBAA3B,CAAP;;AAElC,MAAI,UAAU,MAAM,OAAN,CAAc,MAAd,CAAd;AACA,MAAI,OAAO,SAAP,IAAO,GAAM;AAAE,WAAO,OAAO,QAAQ,OAAR,CAAgB,GAAhB,EAAP,CAAP;AAAuC,GAA1D;AACA,SAAO,OAAP,EAAgB;AACd,QAAI,QAAQ,WAAR,CAAoB,IAApB,CAAJ,EAA+B;AAC/B,cAAU,MAAM,OAAN,CAAc,OAAd,EAAuB,MAAvB,CAAV;AACD;;;;AAID,MAAI,CAAC,OAAL,EAAc,OAAO,IAAP;;AAEd,SAAO,QAAQ,OAAR,CAAgB,GAAhB,EAAP;AACD,CAhBD;;AAkBA,SAAS,UAAT,GAAsB,MAAM,WAA5B","file":"/packages/aldeed:template-extension/lib/template-parent-data-function.js.map","sourcesContent":["// Allow to specify a function to test parent data for at various\n// levels, instead of specifying a fixed number of levels to traverse.\nvar originalParentData = Blaze._parentData;\nBlaze._parentData = function (height, _functionWrapped) {\n  // If height is not a function, simply call original implementation.\n  if (typeof height !== 'function') return originalParentData(height, _functionWrapped);\n\n  var theWith = Blaze.getView('with');\n  var test = () => { return height(theWith.dataVar.get()); };\n  while (theWith) {\n    if (Tracker.nonreactive(test)) break;\n    theWith = Blaze.getView(theWith, 'with');\n  }\n\n  // _functionWrapped is internal and will not be\n  // specified with non numeric height, so we ignore it.\n  if (!theWith) return null;\n  // This registers a Tracker dependency.\n  return theWith.dataVar.get();\n};\n\nTemplate.parentData = Blaze._parentData;\n"]},"hash":"e647d9f38aff788cb4a806786cc62f7db58873ce"}
