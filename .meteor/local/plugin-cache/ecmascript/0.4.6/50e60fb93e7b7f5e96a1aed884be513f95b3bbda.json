{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/both/modules/check-url-validity.js","filenameRelative":"/both/modules/check-url-validity.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/both/modules/check-url-validity.js.map","sourceFileName":"/both/modules/check-url-validity.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"check-url-validity"},"ignored":false,"code":"var _fileExistsInDatabase = function _fileExistsInDatabase(url) {\n  return Images.findOne({ \"url\": url, \"userId\": Meteor.userId() }, { fields: { \"_id\": 1 } });\n};\n\nvar _isNotAmazonUrl = function _isNotAmazonUrl(url) {\n  return url.indexOf('s3.amazonaws.com') < 0;\n};\n\nvar _validateUrl = function _validateUrl(url) {\n  if (_fileExistsInDatabase(url)) {\n    return { valid: false, error: \"Sorry, this file already exists!\" };\n  }\n\n  if (_isNotAmazonUrl(url)) {\n    return { valid: false, error: \"Sorry, this isn't a valid URL!\" };\n  }\n\n  return { valid: true };\n};\n\nvar validate = function validate(url) {\n  var test = _validateUrl(url);\n\n  if (!test.valid) {\n    throw new Meteor.Error(\"file-error\", test.error);\n  }\n};\n\nModules.both.checkUrlValidity = validate;","ast":null,"map":{"version":3,"sources":["/both/modules/check-url-validity.js"],"names":[],"mappings":"AAAA,IAAI,wBAAwB,SAAxB,qBAAwB,CAAE,GAAF,EAAW;AACrC,SAAO,OAAO,OAAP,CAAgB,EAAE,OAAO,GAAT,EAAc,UAAU,OAAO,MAAP,EAAxB,EAAhB,EAA2D,EAAE,QAAQ,EAAE,OAAO,CAAT,EAAV,EAA3D,CAAP;AACD,CAFD;;AAIA,IAAI,kBAAkB,SAAlB,eAAkB,CAAE,GAAF,EAAW;AAC/B,SAAS,IAAI,OAAJ,CAAa,kBAAb,IAAoC,CAA7C;AACD,CAFD;;AAIA,IAAI,eAAe,SAAf,YAAe,CAAE,GAAF,EAAW;AAC5B,MAAK,sBAAuB,GAAvB,CAAL,EAAoC;AAClC,WAAO,EAAE,OAAO,KAAT,EAAgB,OAAO,kCAAvB,EAAP;AACD;;AAED,MAAK,gBAAiB,GAAjB,CAAL,EAA8B;AAC5B,WAAO,EAAE,OAAO,KAAT,EAAgB,OAAO,gCAAvB,EAAP;AACD;;AAED,SAAO,EAAE,OAAO,IAAT,EAAP;AACD,CAVD;;AAYA,IAAI,WAAW,SAAX,QAAW,CAAE,GAAF,EAAW;AACxB,MAAI,OAAO,aAAc,GAAd,CAAX;;AAEA,MAAK,CAAC,KAAK,KAAX,EAAmB;AACjB,UAAM,IAAI,OAAO,KAAX,CAAkB,YAAlB,EAAgC,KAAK,KAArC,CAAN;AACD;AACF,CAND;;AAQA,QAAQ,IAAR,CAAa,gBAAb,GAAgC,QAAhC","file":"/both/modules/check-url-validity.js.map","sourcesContent":["let _fileExistsInDatabase = ( url ) => {\n  return Images.findOne( { \"url\": url, \"userId\": Meteor.userId() }, { fields: { \"_id\": 1 } } );\n};\n\nlet _isNotAmazonUrl = ( url ) => {\n  return ( url.indexOf( 's3.amazonaws.com' ) < 0 );\n};\n\nlet _validateUrl = ( url ) => {\n  if ( _fileExistsInDatabase( url ) ) {\n    return { valid: false, error: \"Sorry, this file already exists!\" };\n  }\n\n  if ( _isNotAmazonUrl( url ) ) {\n    return { valid: false, error: \"Sorry, this isn't a valid URL!\" };\n  }\n\n  return { valid: true };\n};\n\nlet validate = ( url ) => {\n  let test = _validateUrl( url );\n\n  if ( !test.valid ) {\n    throw new Meteor.Error( \"file-error\", test.error );\n  }\n};\n\nModules.both.checkUrlValidity = validate;\n"]},"hash":"50e60fb93e7b7f5e96a1aed884be513f95b3bbda"}
