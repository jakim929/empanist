{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../collections/musicProfiles.js","imported":["MusicProfiles"],"specifiers":[{"kind":"named","imported":"MusicProfiles","local":"MusicProfiles"}]},{"source":"../collections/accompanistProfiles.js","imported":["AccompanistProfiles"],"specifiers":[{"kind":"named","imported":"AccompanistProfiles","local":"AccompanistProfiles"}]},{"source":"../collections/basicProfiles.js","imported":["BasicProfiles"],"specifiers":[{"kind":"named","imported":"BasicProfiles","local":"BasicProfiles"}]},{"source":"../collections/competitions.js","imported":["MusicCompetitions"],"specifiers":[{"kind":"named","imported":"MusicCompetitions","local":"MusicCompetitions"}]},{"source":"../collections/transactions.js","imported":["Transactions"],"specifiers":[{"kind":"named","imported":"Transactions","local":"Transactions"}]},{"source":"../collections/testData.js","imported":["TestAccountData"],"specifiers":[{"kind":"named","imported":"TestAccountData","local":"TestAccountData"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/main.js","filenameRelative":"/client/main.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/main.js.map","sourceFileName":"/client/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"main"},"ignored":false,"code":"var MusicProfiles;module.import('../collections/musicProfiles.js',{\"MusicProfiles\":function(v){MusicProfiles=v}});var AccompanistProfiles;module.import('../collections/accompanistProfiles.js',{\"AccompanistProfiles\":function(v){AccompanistProfiles=v}});var BasicProfiles;module.import('../collections/basicProfiles.js',{\"BasicProfiles\":function(v){BasicProfiles=v}});var MusicCompetitions;module.import('../collections/competitions.js',{\"MusicCompetitions\":function(v){MusicCompetitions=v}});var Transactions;module.import('../collections/transactions.js',{\"Transactions\":function(v){Transactions=v}});var TestAccountData;module.import('../collections/testData.js',{\"TestAccountData\":function(v){TestAccountData=v}});\n\n\n\n\n\n\n\nwindow.MusicProfiles = MusicProfiles;\nwindow.AccompanistProfiles = AccompanistProfiles;\nwindow.BasicProfiles = BasicProfiles;\nwindow.MusicCompetitions = MusicCompetitions;\nwindow.Transactions = Transactions;\n\n// Autoform Settings\n\nAutoForm.setDefaultTemplate('materialize');\n\n// Accounts\n\nAccountsTemplates.configure({\n  defaultLayoutType: 'blaze', // Optional, the default is 'blaze'\n  defaultLayout: 'MainLayout',\n  defaultLayoutRegions: {\n    nav: 'Navbar'\n  },\n  defaultContentRegion: 'main',\n\n  onSubmitHook: function () {\n    function onSubmitHook(error, state) {\n      if (!error) {\n        if (state === \"signIn\") {\n          $('#signUp').closeModal();\n          $('#login').closeModal();\n        }\n        if (state === \"signUp\") {\n          $('#signUp').closeModal();\n          $('#login').closeModal();\n        }\n      }\n    }\n\n    return onSubmitHook;\n  }()\n});\n\nAccountsTemplates.configureRoute('signIn');\nAccountsTemplates.configureRoute('signUp');\n\n// Javascript Component Initialization\n\nTemplate.Navbar.onRendered(function () {\n  $(document).ready(function () {\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $(\".dropdown-button\").dropdown();\n  });\n});\n\nTemplate.navbarAccount.onRendered(function () {\n  $(document).ready(function () {\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $(\".dropdown-button\").dropdown();\n  });\n});\n\nTemplate.modalLogin.onRendered(function () {\n  $(document).ready(function () {\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $('.modal-trigger').leanModal();\n  });\n});\n\nTemplate.modalSignUp.onRendered(function () {\n  $(document).ready(function () {\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $('.modal-trigger').leanModal();\n  });\n});\n\nTemplate.ProfileLayout.onRendered(function () {\n  $(document).ready(function () {\n    $('.materialboxed').materialbox();\n  });\n});\n\nTemplate.CollapsibleStructure.onRendered(function () {\n  $('.collapsible').collapsible({\n    accordion: false\n  });\n});\n\nTemplate.TabStructure.onRendered(function () {\n  $('ul.tabs').tabs();\n});\n\nTemplate.NewAccompLayout.onRendered(function () {\n  // Initialize collapse button\n  $(\".button-collapse\").sideNav();\n  // Initialize collapsible (uncomment the line below if you use the dropdown variation)\n  //$('.collapsible').collapsible();\n});\n\nTemplate.ProfileLayout.onRendered(function () {\n  // parallax\n  $(\".parallax\").parallax();\n\n  // resize card with card-reveal\n  $(document).ready(function () {\n    $(document).on('click.card', '.card', function (e) {\n      if ($(this).find('> .card-reveal').length) {\n        if ($(e.target).is($('.card-reveal .card-title')) || $(e.target).is($('.card-reveal .card-title i'))) {\n          // Make Reveal animate down and display none\n          $(this).find('.card-reveal').velocity({ translateY: 0 }, {\n            duration: 225,\n            queue: false,\n            easing: 'easeInOutQuad',\n            complete: function () {\n              function complete() {\n                $(this).css({ display: 'none' });\n              }\n\n              return complete;\n            }()\n          });\n          $(this).velocity({ height: $(this).data('height') }, { duration: 225 });\n        } else if ($(e.target).is($('.card .activator')) || $(e.target).is($('.card .activator i'))) {\n          $(e.target).closest('.card').css('overflow', 'hidden');\n          $(this).data('height', $(this).css('height')).find('.card-reveal').css({ display: 'block', height: 'auto' }).velocity(\"stop\", false).velocity({ translateY: '-100%' }, { duration: 300, queue: false, easing: 'easeInOutQuad' });\n          $(this).velocity({ height: $(this).find('.card-reveal').height() + 40 }, { duration: 300 });\n        }\n      }\n      $('.card-reveal').closest('.card').css('overflow', 'hidden');\n    });\n  });\n});\n\nTemplate.search.onRendered(function () {\n  // Enter acts as tabs till time to submit form\n  $(document).ready(function () {\n    $('#searchform input').keydown(function (e) {\n      if (e.keyCode == 13) {\n        if ($(':input:eq(' + ($(':input').index(this) + 1) + ')').attr('type') == 'submit') {\n          return true;\n        }\n        $(':input:eq(' + ($(':input').index(this) + 1) + ')').focus();\n        return false;\n      }\n    });\n  });\n\n  // Materialize date picker desing\n  $('.datepicker').pickadate({\n    selectMonths: true, // Creates a dropdown to control month\n    selectYears: 15 // Creates a dropdown of 15 years to control year\n  });\n});\n\n// On creation\n\n// ==Global Template Helpers==\n\nTemplate.registerHelper('navbarFields', function () {\n  // Logged In\n  if (Meteor.user()) {\n    // Accompanist\n    if (Roles.userIsInRole(Meteor.userId(), 'accompanist')) {\n      console.log(\"Navbar Config 1\");\n      return ['accompanistDashboard', 'bookings', 'navbarAccount'];\n    }\n    // Not Accompanist\n    return ['becomeAnAccompanist', 'bookings', 'navbarAccount'];\n    // Not Logged In\n  } else {\n      return ['modalLogin', 'modalSignUp', 'becomeAnAccompanist'];\n    }\n});\n\n// Get Current User's Account\nTemplate.registerHelper('myBasicProfile', function () {\n  return BasicProfiles.findOne({ userId: Meteor.userId() });\n});\n\n// Get Current User's Music Profile\nTemplate.registerHelper('myMusicProfile', function () {\n  return MusicProfiles.findOne({ userId: Meteor.userId() });\n});\n\n// Get Current Route's Accompanist Profile\nTemplate.registerHelper('myAccompanistProfile', function () {\n  return AccompanistProfiles.findOne({ Id: Meteor.userId() });\n});\n\nTemplate.registerHelper('routeBasicProfile', function () {\n  return BasicProfiles.findOne({ userId: FlowRouter.getParam(\"profileId\") });\n});\n\n// Get Current Route's Music Profile\nTemplate.registerHelper('routeMusicProfile', function () {\n  return MusicProfiles.findOne({ userId: FlowRouter.getParam(\"profileId\") });\n});\n\n// Get Current Route's Accompanist Profile\nTemplate.registerHelper('routeAccompanistProfile', function () {\n  return AccompanistProfiles.findOne({ Id: FlowRouter.getParam(\"profileId\") });\n});\n\nTemplate.registerHelper('sentBookingRequests', function () {\n  return Transactions.find({ musician: Meteor.userId() }).fetch();\n});\n\nTemplate.registerHelper('receivedBookingRequests', function (arg) {\n  var splitRequests = { pending: [], ongoing: [], completed: [], cancelled: [] };\n  Transactions.find({ accompanist: Meteor.userId() }).forEach(function (doc) {\n    if (doc.status == \"Pending\") {\n      splitRequests.pending.push(doc);\n    } else if (doc.status == \"Ongoing\") {\n      splitRequests.ongoing.push(doc);\n    } else if (doc.status == \"Completed\") {\n      splitRequests.completed.push(doc);\n    } else {\n      splitRequests.cancelled.push(doc);\n    }\n  });\n  return splitRequests;\n});\n\nTemplate.registerHelper('formatDate', function (date) {\n  return moment(date).format('MMM DD, YYYY');\n});\n\nTemplate.registerHelper('formatBirthDate', function (date) {\n  return moment(date).format('MMM, YYYY');\n});\n\n// Slice day string and capitalize it's first letter\n// All fixed in schema, only need the slicing functionality\nTemplate.registerHelper('formatDay', function (day) {\n  var Day = day.substr(0, 3);\n  var new_day = Day.charAt(0).toUpperCase() + Day.slice(1);\n  return new_day;\n});\n\nTemplate.registerHelper('formatDuration', function (date1, date2) {\n  var start = moment(date1);\n  var end = moment(date2);\n  if (start.year() == end.year()) {\n    // Year is the same\n    if (start.month() == end.month()) {\n      return start.format('MMM DD - ') + end.format('DD, YYYY');\n    }\n    return start.format('MMM DD - ') + end.format('MMM DD, YYYY');\n  }\n  return start.format('MMM DD, YYYY - ') + end.format('MMM DD, YYYY');\n});\n\nTemplate.registerHelper('basicProfileById', function (id) {\n  return BasicProfiles.findOne({ userId: id });\n});\n\nTemplate.registerHelper('musicProfileById', function (id) {\n  return MusicProfiles.findOne({ userId: id });\n});\n\nTemplate.registerHelper('accompanistProfileById', function (id) {\n  return AccompanistProfiles.findOne({ Id: id });\n});\n\nTemplate.registerHelper('routeTransaction', function () {\n  return Transactions.findOne({ _id: FlowRouter.getParam(\"transactionId\") });\n});\n\nTemplate.registerHelper('isOwnProfile', function () {\n  return FlowRouter.getParam(\"profileId\") == Meteor.userId();\n});\n\nTemplate.registerHelper('isAccompanist', function () {\n  var x = AccompanistProfiles.findOne({ Id: FlowRouter.getParam(\"profileId\") });\n  return x !== null;\n});\n\nTemplate.registerHelper('validId', function () {\n  if (BasicProfiles.findOne({ userId: FlowRouter.getParam(\"profileId\") })) {\n    return true;\n  } else {\n    return false;\n  }\n});\n\nTemplate.registerHelper('userId', function () {\n  event.preventDefault();\n  return Meteor.userId();\n});\n\n// Old Global Template Helpers\n\nTemplate.registerHelper('defaultTransaction', function () {\n  return { musician: Meteor.userId(),\n    accompanist: FlowRouter.getParam(\"profileId\"),\n    status: 'Pending' };\n});\n\nTemplate.registerHelper('getProfileRoute', function () {\n  var id = arguments.length <= 0 || arguments[0] === undefined ? Meteor.userId() : arguments[0];\n\n  return \"/profile/\" + id;\n});\n\nTemplate.registerHelper('getBookingRoute', function (bookingId) {\n  return \"/bookingRequest/\" + bookingId;\n});\n\nTemplate.registerHelper('transactionById', function () {\n  var id = arguments.length <= 0 || arguments[0] === undefined ? FlowRouter.getParam(\"transactionId\") : arguments[0];\n\n  event.preventDefault();\n  // Only return if the user is the accompanist listed\n  return Transactions.findOne({ _id: id, accompanist: Meteor.userId() });\n});\n\nTemplate.registerHelper('musicCompetitionsDoc', function () {\n  event.preventDefault();\n  // array =  MusicCompetitions.find().fetch();\n  return [{ label: \"First Manhattan International Music Competition\", value: \"First Manhattan International Music Competition\" }];\n});\n\n// Local Template On Created\n\nTemplate.upsertMusicProfileForm.onCreated(function () {\n  this.formType = new ReactiveVar('insert');\n});\n\nTemplate.upsertBasicProfileForm.onCreated(function () {\n  this.formType = new ReactiveVar('insert');\n});\n\nTemplate.upsertAccompanistForm.onCreated(function () {\n  this.formType = new ReactiveVar('insert');\n});\n\nTemplate.upsertInstrumentForm.onCreated(function () {\n  this.formType = new ReactiveVar('insert');\n});\n\nTemplate.upsertAwardsForm.onCreated(function () {\n  this.formType = new ReactiveVar('insert');\n});\n\nTemplate.upsertProgramsForm.onCreated(function () {\n  this.formType = new ReactiveVar('insert');\n});\n\nTemplate.upsertOrchestraForm.onCreated(function () {\n  this.formType = new ReactiveVar('insert');\n});\n\n// Local Template Helpers\n\nTemplate.upsertOrchestraForm.helpers({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    function currentProfile() {\n      var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId() });\n      if (currentProfile) {\n        Template.instance().formType.set('update');\n        return currentProfile;\n      }\n    }\n\n    return currentProfile;\n  }(),\n\n  formType: function () {\n    function formType() {\n      var formType = Template.instance().formType.get();\n      return formType;\n    }\n\n    return formType;\n  }()\n});\n\nTemplate.upsertProgramsForm.helpers({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    function currentProfile() {\n      var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId() });\n      if (currentProfile) {\n        Template.instance().formType.set('update');\n        return currentProfile;\n      }\n    }\n\n    return currentProfile;\n  }(),\n\n  formType: function () {\n    function formType() {\n      var formType = Template.instance().formType.get();\n      return formType;\n    }\n\n    return formType;\n  }()\n});\n\nTemplate.upsertAwardsForm.helpers({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    function currentProfile() {\n      var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId() });\n      if (currentProfile) {\n        Template.instance().formType.set('update');\n        return currentProfile;\n      }\n    }\n\n    return currentProfile;\n  }(),\n\n  formType: function () {\n    function formType() {\n      var formType = Template.instance().formType.get();\n      return formType;\n    }\n\n    return formType;\n  }()\n});\n\nTemplate.upsertMusicProfileForm.helpers({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    function currentProfile() {\n      var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId() });\n      if (currentProfile) {\n        Template.instance().formType.set('update');\n        return currentProfile;\n      }\n    }\n\n    return currentProfile;\n  }(),\n\n  formType: function () {\n    function formType() {\n      var formType = Template.instance().formType.get();\n      return formType;\n    }\n\n    return formType;\n  }(),\n\n  instrumentList: function () {\n    function instrumentList() {\n      return [\"Voice\", \"Bagpipes\", \"Banjo\", \"Bass drum\", \"Bassoon\", \"Bell\", \"Bongo\", \"Castanets\", \"Cello\", \"Clarinet\", \"Clavichord\", \"Conga drum\", \"Contrabassoon\", \"Cornet\", \"Cymbals\", \"Double bass\", \"Dulcian\", \"Dynamophone\", \"Flute\", \"Flutophone\", \"Glockenspiel\", \"Gongs\", \"Guitar\", \"Harmonica\", \"Harp\", \"Harpsichord\", \"Lute\", \"Mandolin\", \"Maracas\", \"Metallophone\", \"Musical box\", \"Oboe\", \"Ondes-Martenot\", \"Piano\", \"Recorder\", \"Saxophone\", \"Shawm\", \"Snare drum\", \"Steel drum\", \"Tambourine\", \"Theremin\", \"Triangle\", \"Trombone\", \"Trumpet\", \"Tuba\", \"Ukulele\", \"Viola\", \"Violin\", \"Xylophone\", \"Zither\"].map(function (obj) {\n        return { label: obj, value: obj };\n      });\n    }\n\n    return instrumentList;\n  }()\n});\n\nTemplate.upsertInstrumentForm.helpers({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    function currentProfile() {\n      var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId() });\n      if (currentProfile) {\n        Template.instance().formType.set('update');\n        return currentProfile;\n      }\n    }\n\n    return currentProfile;\n  }(),\n\n  formType: function () {\n    function formType() {\n      var formType = Template.instance().formType.get();\n      return formType;\n    }\n\n    return formType;\n  }(),\n\n  instrumentList: function () {\n    function instrumentList() {\n      return [\"Voice\", \"Bagpipes\", \"Banjo\", \"Bass drum\", \"Bassoon\", \"Bell\", \"Bongo\", \"Castanets\", \"Cello\", \"Clarinet\", \"Clavichord\", \"Conga drum\", \"Contrabassoon\", \"Cornet\", \"Cymbals\", \"Double bass\", \"Dulcian\", \"Dynamophone\", \"Flute\", \"Flutophone\", \"Glockenspiel\", \"Gongs\", \"Guitar\", \"Harmonica\", \"Harp\", \"Harpsichord\", \"Lute\", \"Mandolin\", \"Maracas\", \"Metallophone\", \"Musical box\", \"Oboe\", \"Ondes-Martenot\", \"Piano\", \"Recorder\", \"Saxophone\", \"Shawm\", \"Snare drum\", \"Steel drum\", \"Tambourine\", \"Theremin\", \"Triangle\", \"Trombone\", \"Trumpet\", \"Tuba\", \"Ukulele\", \"Viola\", \"Violin\", \"Xylophone\", \"Zither\"].map(function (obj) {\n        return { label: obj, value: obj };\n      });\n    }\n\n    return instrumentList;\n  }()\n});\n\nTemplate.upsertBasicProfileForm.helpers({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentBasicProfile: function () {\n    function currentBasicProfile() {\n      var currentAccount = BasicProfiles.findOne({ userId: Meteor.userId() });\n      if (currentAccount) {\n        Template.instance().formType.set('update');\n        return currentAccount;\n      }\n    }\n\n    return currentBasicProfile;\n  }(),\n\n  formType: function () {\n    function formType() {\n      var formType = Template.instance().formType.get();\n      return formType;\n    }\n\n    return formType;\n  }()\n});\n\nTemplate.upsertAccompanistForm.helpers({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentAccompanistProfiles: function () {\n    function currentAccompanistProfiles() {\n      var currentAccompanistProfiles = AccompanistProfiles.findOne({ Id: Meteor.userId() });\n      if (currentAccompanistProfiles) {\n        Template.instance().formType.set('update');\n        return currentAccompanistProfiles;\n      }\n    }\n\n    return currentAccompanistProfiles;\n  }(),\n\n  formType: function () {\n    function formType() {\n      var formType = Template.instance().formType.get();\n      return formType;\n    }\n\n    return formType;\n  }()\n});\n\nTemplate.results.helpers({\n\n  accompanists: function () {\n    function accompanists() {\n      //var coords = Session.get('coords')\n\n      var address = FlowRouter.getQueryParam(\"address\");\n      var start_date = FlowRouter.getQueryParam(\"start_date\");\n      var end_date = FlowRouter.getQueryParam(\"end_date\");\n\n      Meteor.call('getGeocode', address, function (err, result) {\n        console.log(\"Meteor call worked\");\n\n        if (result !== null) {\n          var lat = Number(result[0].latitude);\n          var lng = Number(result[0].longitude);\n          var coords = [lng, lat];\n        }\n\n        //convert dates to dates that can be compared with Mongo schema\n        var sd = new Date(start_date);\n        var ed = new Date(end_date);\n\n        if (coords !== undefined && moment(sd).isValid() && moment(ed).isValid()) {\n          var results = AccompanistProfiles.find({\n            loc: { $near: {\n                $geometry: { type: \"Point\", coordinates: coords },\n                $maxDistance: 20000\n              }\n            },\n            startDate: { $lte: sd, $lte: ed },\n            endDate: { $gte: sd, $gte: ed } }).fetch();\n        } else if (moment(sd).isValid() && moment(ed).isValid()) {\n          var results = AccompanistProfiles.find({\n            startDate: { $lte: sd, $lte: ed },\n            endDate: { $gte: sd, $gte: ed } }).fetch();\n        } else if (moment(ed).isValid()) {\n          var results = AccompanistProfiles.find({\n            startDate: { $lte: ed },\n            endDate: { $gte: ed } }).fetch();\n        } else if (moment(sd).isValid()) {\n          var results = AccompanistProfiles.find({\n            startDate: { $lte: sd },\n            endDate: { $gte: sd } }).fetch();\n        } else if (coords !== undefined) {\n          var results = AccompanistProfiles.find({\n            loc: { $near: {\n                $geometry: { type: \"Point\", coordinates: coords },\n                $maxDistance: 20000\n              }\n            } }).fetch();\n        } else {\n          var results = null;\n        }\n\n        Session.set('results', results);\n      });\n\n      return Session.get('results');\n    }\n\n    return accompanists;\n  }(),\n  accompname: function () {\n    function accompname() {\n      var names = BasicProfiles.findOne({ userId: this.Id });\n      return names;\n    }\n\n    return accompname;\n  }()\n\n});\n\n// Events\n\nTemplate.search.events({\n  'submit form': function () {\n    function submitForm() {\n      console.log(\"Form Submitted\");\n      FlowRouter.go('results?');\n    }\n\n    return submitForm;\n  }()\n});\n\n// Google search autocomplete\nTemplate.search.events({\n  'click #autocomplete': function () {\n    function clickAutocomplete(e, search) {\n      initAutoComplete();\n    }\n\n    return clickAutocomplete;\n  }()\n});\n\nTemplate.NewAccompLayout.events({\n  'click #autocomplete': function () {\n    function clickAutocomplete(e, NewAccompLayout) {\n      initAutoComplete();\n    }\n\n    return clickAutocomplete;\n  }()\n});\n\nvar initAutoComplete = function initAutoComplete() {\n  var autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { types: ['geocode'] });\n};\n\nTemplate.EditAccompanistProfiles.events({\n  'click button': function () {\n    function clickButton() {\n      Notifications.info('Test', 'Working Notification');\n    }\n\n    return clickButton;\n  }()\n});\n\nTemplate.BookingRequest.events({\n  'click button': function () {\n    function clickButton() {\n      Transactions.update({ _id: FlowRouter.getParam(\"transactionId\") }, { $set: { status: \"Confirmed\" } });\n      Notifications.info('Successful Confirmation', 'You successfully confirmed your booking!');\n    }\n\n    return clickButton;\n  }()\n});\n\nTemplate.makeAdmin.events({\n  'click button': function () {\n    function clickButton() {\n      userId = Meteor.userId();\n      Meteor.call('divinify', userId);\n    }\n\n    return clickButton;\n  }()\n});\n\n// Decide Modal Login/SignUp Popup\nTemplate.modalLogin.events({\n  'click .modal-trigger': function () {\n    function clickModalTrigger() {\n      AccountsTemplates.setState('signIn');\n    }\n\n    return clickModalTrigger;\n  }()\n});\n\nTemplate.modalSignUp.events({\n  'click .modal-trigger': function () {\n    function clickModalTrigger() {\n      AccountsTemplates.setState('signUp');\n    }\n\n    return clickModalTrigger;\n  }()\n});\n\n// Logout from the navbar\nTemplate.Navbar.events({\n  'click .logout': function () {\n    function clickLogout() {\n      AccountsTemplates.logout();\n    }\n\n    return clickLogout;\n  }()\n});\n\n// For Debugging\nSimpleSchema.debug = true;","ast":null,"map":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"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","file":"/client/main.js.map","sourcesContent":["import { MusicProfiles } from '../collections/musicProfiles.js'\nimport { AccompanistProfiles } from '../collections/accompanistProfiles.js'\nimport { BasicProfiles } from '../collections/basicProfiles.js'\nimport { MusicCompetitions } from '../collections/competitions.js'\nimport { Transactions } from '../collections/transactions.js'\n\nimport { TestAccountData } from '../collections/testData.js'\n\nwindow.MusicProfiles = MusicProfiles\nwindow.AccompanistProfiles = AccompanistProfiles\nwindow.BasicProfiles = BasicProfiles\nwindow.MusicCompetitions = MusicCompetitions\nwindow.Transactions = Transactions\n\n// Autoform Settings\n\nAutoForm.setDefaultTemplate('materialize');\n\n// Accounts\n\nAccountsTemplates.configure({\n  defaultLayoutType: 'blaze', // Optional, the default is 'blaze'\n  defaultLayout: 'MainLayout',\n  defaultLayoutRegions: {\n      nav: 'Navbar'\n  },\n  defaultContentRegion: 'main',\n\n  onSubmitHook: function(error, state){\n    if (!error){\n      if (state === \"signIn\"){\n        $('#signUp').closeModal();\n        $('#login').closeModal();\n      }\n      if (state === \"signUp\"){\n        $('#signUp').closeModal();\n        $('#login').closeModal();\n      }\n    }\n  }\n});\n\nAccountsTemplates.configureRoute('signIn');\nAccountsTemplates.configureRoute('signUp');\n\n// Javascript Component Initialization\n\nTemplate.Navbar.onRendered(function () {\n  $(document).ready(function(){\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $(\".dropdown-button\").dropdown();\n  });\n});\n\nTemplate.navbarAccount.onRendered(function () {\n  $(document).ready(function(){\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $(\".dropdown-button\").dropdown();\n  });\n});\n\nTemplate.modalLogin.onRendered(function () {\n  $(document).ready(function(){\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $('.modal-trigger').leanModal();\n  });\n});\n\nTemplate.modalSignUp.onRendered(function () {\n  $(document).ready(function(){\n    // the \"href\" attribute of .modal-trigger must specify the modal ID that wants to be triggered\n    $('.modal-trigger').leanModal();\n  });\n});\n\nTemplate.ProfileLayout.onRendered(function () {\n  $(document).ready(function(){\n    $('.materialboxed').materialbox();\n  });\n});\n\nTemplate.CollapsibleStructure.onRendered(function () {\n  $('.collapsible').collapsible({\n    accordion : false\n  });\n});\n\nTemplate.TabStructure.onRendered(function () {\n  $('ul.tabs').tabs();\n});\n\nTemplate.NewAccompLayout.onRendered(function () {\n  // Initialize collapse button\n  $(\".button-collapse\").sideNav();\n  // Initialize collapsible (uncomment the line below if you use the dropdown variation)\n  //$('.collapsible').collapsible();\n});\n\nTemplate.ProfileLayout.onRendered(function(){\n  // parallax\n  $(\".parallax\").parallax();\n\n  // resize card with card-reveal\n  $(document).ready(function() {\n    $(document).on('click.card', '.card', function (e) {\n      if ($(this).find('> .card-reveal').length) {\n        if ($(e.target).is($('.card-reveal .card-title')) || $(e.target).is($('.card-reveal .card-title i'))) {\n          // Make Reveal animate down and display none\n          $(this).find('.card-reveal').velocity(\n            {translateY: 0}, {\n              duration: 225,\n              queue: false,\n              easing: 'easeInOutQuad',\n              complete: function() { $(this).css({ display: 'none'}); }\n            }\n          );\n            $(this).velocity({height:$(this).data('height')},{duration:225});\n        }\n        else if ($(e.target).is($('.card .activator')) ||\n                 $(e.target).is($('.card .activator i')) ) {\n          $(e.target).closest('.card').css('overflow', 'hidden');\n          $(this).data('height',$(this).css('height')).find('.card-reveal').css({ display: 'block',height:'auto'}).velocity(\"stop\", false).velocity({translateY: '-100%'}, {duration: 300, queue: false, easing: 'easeInOutQuad'});\n              $(this).velocity({height:$(this).find('.card-reveal').height()+40},{duration:300});\n        }\n      }\n      $('.card-reveal').closest('.card').css('overflow', 'hidden');\n    });\n  });\n});\n\nTemplate.search.onRendered(function () {\n  // Enter acts as tabs till time to submit form\n  $(document).ready(function(){\n    $('#searchform input').keydown(function(e){\n      if(e.keyCode==13){\n        if($(':input:eq(' + ($(':input').index(this) + 1) + ')').attr('type')=='submit'){\n          return true;\n        }\n        $(':input:eq(' + ($(':input').index(this) + 1) + ')').focus();\n        return false;\n      }\n    });\n  });\n\n  // Materialize date picker desing\n  $('.datepicker').pickadate({\n    selectMonths: true, // Creates a dropdown to control month\n    selectYears: 15 // Creates a dropdown of 15 years to control year\n  });\n});\n\n\n\n// On creation\n\n\n// ==Global Template Helpers==\n\nTemplate.registerHelper('navbarFields', () => {\n  // Logged In\n  if (Meteor.user()){\n    // Accompanist\n    if (Roles.userIsInRole(Meteor.userId(), 'accompanist')){\n      console.log(\"Navbar Config 1\")\n      return ['accompanistDashboard', 'bookings', 'navbarAccount']\n    }\n    // Not Accompanist\n    return ['becomeAnAccompanist','bookings', 'navbarAccount' ]\n  // Not Logged In\n  }else{\n    return ['modalLogin','modalSignUp', 'becomeAnAccompanist']\n\n  }\n});\n\n\n// Get Current User's Account\nTemplate.registerHelper('myBasicProfile', () => {\n  return BasicProfiles.findOne({userId: Meteor.userId()});\n});\n\n// Get Current User's Music Profile\nTemplate.registerHelper('myMusicProfile', () => {\n  return MusicProfiles.findOne({userId: Meteor.userId()});\n});\n\n// Get Current Route's Accompanist Profile\nTemplate.registerHelper('myAccompanistProfile', () => {\n  return AccompanistProfiles.findOne({Id: Meteor.userId()});\n});\n\nTemplate.registerHelper('routeBasicProfile', () => {\n  return BasicProfiles.findOne({userId: FlowRouter.getParam(\"profileId\")});\n});\n\n// Get Current Route's Music Profile\nTemplate.registerHelper('routeMusicProfile', () => {\n  return MusicProfiles.findOne({userId: FlowRouter.getParam(\"profileId\")});\n});\n\n// Get Current Route's Accompanist Profile\nTemplate.registerHelper('routeAccompanistProfile', () => {\n  return AccompanistProfiles.findOne({Id: FlowRouter.getParam(\"profileId\")});\n});\n\nTemplate.registerHelper('sentBookingRequests', () =>{\n  return Transactions.find({musician: Meteor.userId()}).fetch()\n});\n\nTemplate.registerHelper('receivedBookingRequests', (arg) =>{\n  var splitRequests = {pending:[], ongoing:[], completed:[], cancelled:[]}\n  Transactions.find({accompanist: Meteor.userId()}).forEach(function(doc){\n    if(doc.status == \"Pending\"){\n      splitRequests.pending.push(doc);\n    }else if(doc.status == \"Ongoing\"){\n      splitRequests.ongoing.push(doc);\n    }else if(doc.status == \"Completed\"){\n      splitRequests.completed.push(doc);\n    }else{\n      splitRequests.cancelled.push(doc);\n    }\n  });\n  return splitRequests\n});\n\nTemplate.registerHelper('formatDate', function(date) {\n  return moment(date).format('MMM DD, YYYY');\n});\n\nTemplate.registerHelper('formatBirthDate', function(date) {\n  return moment(date).format('MMM, YYYY');\n});\n\n// Slice day string and capitalize it's first letter\n// All fixed in schema, only need the slicing functionality\nTemplate.registerHelper('formatDay', function(day) {\n  var Day = day.substr(0,3);\n  var new_day = Day.charAt(0).toUpperCase() + Day.slice(1);\n  return new_day;\n});\n\nTemplate.registerHelper('formatDuration', function(date1, date2) {\n  var start =  moment(date1);\n  var end = moment(date2);\n  if (start.year() == end.year()){\n    // Year is the same\n    if(start.month() == end.month()){\n      return start.format('MMM DD - ') + end.format('DD, YYYY')\n    }\n      return start.format('MMM DD - ') + end.format('MMM DD, YYYY')\n  }\n  return start.format('MMM DD, YYYY - ') + end.format('MMM DD, YYYY')\n});\n\nTemplate.registerHelper('basicProfileById', (id) =>{\n  return BasicProfiles.findOne({userId: id})\n});\n\nTemplate.registerHelper('musicProfileById', (id) =>{\n  return MusicProfiles.findOne({userId: id})\n});\n\nTemplate.registerHelper('accompanistProfileById', (id) =>{\n  return AccompanistProfiles.findOne({Id: id})\n});\n\nTemplate.registerHelper('routeTransaction', () =>{\n  return Transactions.findOne({_id: FlowRouter.getParam(\"transactionId\")})\n});\n\nTemplate.registerHelper('isOwnProfile', () => {\n  return FlowRouter.getParam(\"profileId\") == Meteor.userId();\n});\n\nTemplate.registerHelper('isAccompanist', () => {\n  var x = AccompanistProfiles.findOne({Id: FlowRouter.getParam(\"profileId\")})\n  return x !== null; \n});\n\nTemplate.registerHelper('validId', () =>{\n  if (BasicProfiles.findOne({userId : FlowRouter.getParam(\"profileId\")})){\n    return true\n  }else{\n    return false\n  }\n});\n\nTemplate.registerHelper( 'userId', () => {\n    event.preventDefault();\n    return Meteor.userId();\n});\n\n\n// Old Global Template Helpers\n\n\nTemplate.registerHelper('defaultTransaction', () => {\n  return {musician: Meteor.userId(),\n          accompanist: FlowRouter.getParam(\"profileId\"),\n          status: 'Pending'}\n});\n\n\n\nTemplate.registerHelper( 'getProfileRoute', (id = Meteor.userId()) =>{\n  return \"/profile/\"+id\n});\n\nTemplate.registerHelper( 'getBookingRoute', (bookingId) =>{\n  return \"/bookingRequest/\"+bookingId\n});\n\n\nTemplate.registerHelper( 'transactionById', (id = FlowRouter.getParam(\"transactionId\")) => {\n    event.preventDefault();\n    // Only return if the user is the accompanist listed\n    return Transactions.findOne({_id:id, accompanist: Meteor.userId()})\n});\n\n\nTemplate.registerHelper( 'musicCompetitionsDoc', () => {\n    event.preventDefault();\n    // array =  MusicCompetitions.find().fetch();\n    return [{label: \"First Manhattan International Music Competition\", value: \"First Manhattan International Music Competition\"}]\n});\n\n\n// Local Template On Created\n\nTemplate.upsertMusicProfileForm.onCreated(function() {\n  this.formType = new ReactiveVar('insert')\n});\n\nTemplate.upsertBasicProfileForm.onCreated(function() {\n  this.formType = new ReactiveVar('insert')\n});\n\nTemplate.upsertAccompanistForm.onCreated(function() {\n  this.formType = new ReactiveVar('insert')\n});\n\nTemplate.upsertInstrumentForm.onCreated(function() {\n  this.formType = new ReactiveVar('insert')\n});\n\nTemplate.upsertAwardsForm.onCreated(function() {\n  this.formType = new ReactiveVar('insert')\n});\n\nTemplate.upsertProgramsForm.onCreated(function() {\n  this.formType = new ReactiveVar('insert')\n});\n\nTemplate.upsertOrchestraForm.onCreated(function() {\n  this.formType = new ReactiveVar('insert')\n});\n\n// Local Template Helpers\n\nTemplate.upsertOrchestraForm.helpers ({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId()});\n    if (currentProfile) {\n      Template.instance().formType.set('update');\n      return currentProfile\n    }\n  },\n\n  formType: function () {\n    var formType = Template.instance().formType.get();\n    return formType;\n  }\n});\n\nTemplate.upsertProgramsForm.helpers ({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId()});\n    if (currentProfile) {\n      Template.instance().formType.set('update');\n      return currentProfile\n    }\n  },\n\n  formType: function () {\n    var formType = Template.instance().formType.get();\n    return formType;\n  }\n});\n\nTemplate.upsertAwardsForm.helpers ({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId()});\n    if (currentProfile) {\n      Template.instance().formType.set('update');\n      return currentProfile\n    }\n  },\n\n  formType: function () {\n    var formType = Template.instance().formType.get();\n    return formType;\n  }\n});\n\nTemplate.upsertMusicProfileForm.helpers ({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId()});\n    if (currentProfile) {\n      Template.instance().formType.set('update');\n      return currentProfile\n    }\n  },\n\n  formType: function () {\n    var formType = Template.instance().formType.get();\n    return formType;\n  },\n\n  instrumentList: function () {\n    return [\"Voice\",\"Bagpipes\", \"Banjo\", \"Bass drum\", \"Bassoon\", \"Bell\", \"Bongo\", \"Castanets\", \"Cello\", \"Clarinet\", \"Clavichord\", \"Conga drum\", \"Contrabassoon\", \"Cornet\", \"Cymbals\", \"Double bass\", \"Dulcian\", \"Dynamophone\", \"Flute\", \"Flutophone\", \"Glockenspiel\", \"Gongs\", \"Guitar\", \"Harmonica\", \"Harp\", \"Harpsichord\", \"Lute\", \"Mandolin\", \"Maracas\", \"Metallophone\", \"Musical box\", \"Oboe\", \"Ondes-Martenot\", \"Piano\", \"Recorder\", \"Saxophone\", \"Shawm\", \"Snare drum\", \"Steel drum\", \"Tambourine\", \"Theremin\", \"Triangle\", \"Trombone\", \"Trumpet\", \"Tuba\", \"Ukulele\", \"Viola\", \"Violin\", \"Xylophone\",\n    \"Zither\"].map(function(obj){return {label: obj, value:obj}})\n  }\n});\n\nTemplate.upsertInstrumentForm.helpers ({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentProfile: function () {\n    var currentProfile = MusicProfiles.findOne({ userId: Meteor.userId()});\n     if (currentProfile) {\n       Template.instance().formType.set('update');\n      return currentProfile\n     }\n  },\n\n  formType: function () {\n    var formType = Template.instance().formType.get();\n    return formType;\n  },\n\n  instrumentList: function () {\n    return [\"Voice\",\"Bagpipes\", \"Banjo\", \"Bass drum\", \"Bassoon\", \"Bell\", \"Bongo\", \"Castanets\", \"Cello\", \"Clarinet\", \"Clavichord\", \"Conga drum\", \"Contrabassoon\", \"Cornet\", \"Cymbals\", \"Double bass\", \"Dulcian\", \"Dynamophone\", \"Flute\", \"Flutophone\", \"Glockenspiel\", \"Gongs\", \"Guitar\", \"Harmonica\", \"Harp\", \"Harpsichord\", \"Lute\", \"Mandolin\", \"Maracas\", \"Metallophone\", \"Musical box\", \"Oboe\", \"Ondes-Martenot\", \"Piano\", \"Recorder\", \"Saxophone\", \"Shawm\", \"Snare drum\", \"Steel drum\", \"Tambourine\", \"Theremin\", \"Triangle\", \"Trombone\", \"Trumpet\", \"Tuba\", \"Ukulele\", \"Viola\", \"Violin\", \"Xylophone\",\n    \"Zither\"].map(function(obj){return {label: obj, value:obj}})\n  }\n});\n\nTemplate.upsertBasicProfileForm.helpers ({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentBasicProfile: function () {\n    var currentAccount = BasicProfiles.findOne({ userId: Meteor.userId()});\n    if (currentAccount) {\n      Template.instance().formType.set('update');\n      return currentAccount;\n    }\n  },\n\n  formType: function () {\n    var formType = Template.instance().formType.get();\n    return formType;\n  }\n});\n\nTemplate.upsertAccompanistForm.helpers ({\n  // Helps set up fields for deciding between \"insert\" and \"update\"\n  currentAccompanistProfiles: function () {\n    var currentAccompanistProfiles = AccompanistProfiles.findOne({ Id: Meteor.userId()});\n    if (currentAccompanistProfiles) {\n      Template.instance().formType.set('update');\n      return currentAccompanistProfiles;\n    }\n  },\n\n  formType: function () {\n    var formType = Template.instance().formType.get();\n    return formType;\n  }\n});\n\n\nTemplate.results.helpers({\n\n  accompanists: function() {\n  //var coords = Session.get('coords')\n\n    var address = FlowRouter.getQueryParam(\"address\")\n    var start_date = FlowRouter.getQueryParam(\"start_date\")\n    var end_date = FlowRouter.getQueryParam(\"end_date\")\n\n    Meteor.call('getGeocode', address, function(err, result){\n      console.log(\"Meteor call worked\")\n\n      if (result !== null){\n        var lat = Number(result[0].latitude);\n        var lng = Number(result[0].longitude);\n        var coords = [lng, lat];\n      }\n\n      //convert dates to dates that can be compared with Mongo schema\n      var sd = new Date(start_date)\n      var ed = new Date(end_date)\n\n      if (coords !== undefined && moment(sd).isValid() && moment(ed).isValid()) {\n          var results = AccompanistProfiles.find({\n            loc:\n              { $near :\n                {\n                  $geometry: { type: \"Point\",  coordinates: coords },\n                  $maxDistance: 20000\n                }\n              },\n            startDate:  {$lte: sd, $lte: ed},\n            endDate: {$gte: sd, $gte: ed}}).fetch();\n      }\n\n      else if (moment(sd).isValid() && moment(ed).isValid()){\n        var results =\n          AccompanistProfiles.find({\n            startDate:  {$lte: sd, $lte: ed},\n            endDate: {$gte: sd, $gte: ed}}).fetch();\n      }\n\n      else if (moment(ed).isValid()){\n        var results =\n          AccompanistProfiles.find({\n            startDate:  {$lte: ed},\n            endDate: {$gte: ed}}).fetch();\n      }\n\n      else if (moment(sd).isValid() ){\n        var results =\n          AccompanistProfiles.find({\n            startDate:  {$lte: sd},\n            endDate: {$gte: sd}}).fetch();\n      }\n\n      else if (coords !== undefined){\n        var results = AccompanistProfiles.find({\n          loc:\n            { $near :\n              {\n                $geometry: { type: \"Point\",  coordinates: coords },\n                $maxDistance: 20000\n              }\n            }}).fetch();\n      }\n\n      else {\n        var results = null\n      }\n\n      Session.set('results', results)\n    });\n\n  return Session.get('results')\n},\n  accompname: function() {\n    var names = BasicProfiles.findOne({userId: this.Id});\n    return names\n  }\n\n});\n\n// Events\n\nTemplate.search.events({\n  'submit form': function(){\n      console.log(\"Form Submitted\")\n      FlowRouter.go('results?');\n  }\n});\n\n// Google search autocomplete\nTemplate.search.events({\n   'click #autocomplete': function(e,search) {\n     initAutoComplete();\n   }\n});\n\nTemplate.NewAccompLayout.events({\n   'click #autocomplete': function(e,NewAccompLayout) {\n     initAutoComplete();\n   }\n});\n\nvar initAutoComplete = function() {\n  var autocomplete = new google.maps.places.Autocomplete(\n    (document.getElementById('autocomplete')),{types: ['geocode'] }\n  );\n};\n\nTemplate.EditAccompanistProfiles.events({\n  'click button': function(){\n      Notifications.info('Test', 'Working Notification');\n  }\n});\n\nTemplate.BookingRequest.events({\n\t'click button': function(){\n      Transactions.update({_id: FlowRouter.getParam(\"transactionId\")}, {$set: {status: \"Confirmed\"}});\n      Notifications.info('Successful Confirmation', 'You successfully confirmed your booking!');\n  }\n});\n\nTemplate.makeAdmin.events({\n\t'click button': function(){\n    userId = Meteor.userId();\n    Meteor.call('divinify', userId);\n  }\n});\n\n// Decide Modal Login/SignUp Popup\nTemplate.modalLogin.events({\n  'click .modal-trigger': function(){\n    AccountsTemplates.setState('signIn');\n  }\n});\n\nTemplate.modalSignUp.events({\n  'click .modal-trigger': function(){\n    AccountsTemplates.setState('signUp');\n  }\n});\n\n\n// Logout from the navbar\nTemplate.Navbar.events({\n  'click .logout': function(){\n    AccountsTemplates.logout();\n  }\n});\n\n\n// For Debugging\n SimpleSchema.debug = true;\n"]},"hash":"3fcb402d5f5a62d1386059f706852de95df5c88c"}
