{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar EventHandler, WHITESPACE_REGEX, createUIHooks, originalDOMRangeAttach, originalExpandAttributes, originalInsertNodeWithHooks, originalMakeAttributeHandler, originalMoveNodeWithHooks, originalToText, propagateUIHooks;\n\npropagateUIHooks = function(parent, node) {\n  var childNode, i, len, ref;\n  if (!parent._uihooks || node._uihooks) {\n    return;\n  }\n  node._uihooks = _.extend({}, parent._uihooks, {\n    parentNode: node\n  });\n  if (!node.hasChildNodes()) {\n    return;\n  }\n  ref = node.childNodes;\n  for (i = 0, len = ref.length; i < len; i++) {\n    childNode = ref[i];\n    if (childNode.nodeType === Node.ELEMENT_NODE) {\n      propagateUIHooks(node, childNode);\n    }\n  }\n};\n\noriginalInsertNodeWithHooks = Blaze._DOMRange._insertNodeWithHooks;\n\nBlaze._DOMRange._insertNodeWithHooks = function(node, parent, next) {\n  propagateUIHooks(parent, node);\n  return originalInsertNodeWithHooks(node, parent, next);\n};\n\noriginalMoveNodeWithHooks = Blaze._DOMRange._moveNodeWithHooks;\n\nBlaze._DOMRange._moveNodeWithHooks = function(node, parent, next) {\n  propagateUIHooks(parent, node);\n  return originalMoveNodeWithHooks(node, parent, next);\n};\n\ncreateUIHooks = function(component, parentNode) {\n  return {\n    parentNode: parentNode,\n    insertElement: function(node, before) {\n      return component.insertDOMElement(this.parentNode, node, before);\n    },\n    moveElement: function(node, before) {\n      return component.moveDOMElement(this.parentNode, node, before);\n    },\n    removeElement: function(node) {\n      return component.removeDOMElement(node.parentNode, node);\n    }\n  };\n};\n\noriginalDOMRangeAttach = Blaze._DOMRange.prototype.attach;\n\nBlaze._DOMRange.prototype.attach = function(parentElement, nextNode, _isMove, _isReplace) {\n  var childNode, component, i, j, len, len1, member, oldUIHooks, ref, ref1, ref2, ref3;\n  if (component = (ref = this.view) != null ? (ref1 = ref._templateInstance) != null ? ref1.component : void 0 : void 0) {\n    ref2 = this.members;\n    for (i = 0, len = ref2.length; i < len; i++) {\n      member = ref2[i];\n      if (!(!(member instanceof Blaze._DOMRange))) {\n        continue;\n      }\n      member._uihooks = createUIHooks(component, member);\n      if (!member.hasChildNodes()) {\n        continue;\n      }\n      ref3 = member.childNodes;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        childNode = ref3[j];\n        if (childNode.nodeType === Node.ELEMENT_NODE) {\n          propagateUIHooks(member, childNode);\n        }\n      }\n    }\n    oldUIHooks = parentElement._uihooks;\n    try {\n      parentElement._uihooks = createUIHooks(component, parentElement);\n      return originalDOMRangeAttach.apply(this, arguments);\n    } finally {\n      if (oldUIHooks) {\n        parentElement._uihooks = oldUIHooks;\n      } else {\n        delete parentElement._uihooks;\n      }\n    }\n  }\n  return originalDOMRangeAttach.apply(this, arguments);\n};\n\nWHITESPACE_REGEX = /^\\s+$/;\n\nEventHandler = Blaze._AttributeHandler.extend({\n  update: function(element, oldValue, value) {\n    var $element, eventName, fun, i, j, len, len1, results;\n    if (!oldValue) {\n      oldValue = [];\n    }\n    if (!_.isArray(oldValue)) {\n      oldValue = [oldValue];\n    }\n    if (!value) {\n      value = [];\n    }\n    if (!_.isArray(value)) {\n      value = [value];\n    }\n    assert(_.every(oldValue, share.isEventHandler), oldValue);\n    assert(_.every(value, share.isEventHandler), value);\n    $element = $(element);\n    eventName = this.name.substr(2).toLowerCase();\n    for (i = 0, len = oldValue.length; i < len; i++) {\n      fun = oldValue[i];\n      $element.off(eventName, fun);\n    }\n    results = [];\n    for (j = 0, len1 = value.length; j < len1; j++) {\n      fun = value[j];\n      results.push($element.on(eventName, fun));\n    }\n    return results;\n  }\n});\n\noriginalMakeAttributeHandler = Blaze._makeAttributeHandler;\n\nBlaze._makeAttributeHandler = function(elem, name, value) {\n  if (share.EVENT_HANDLER_REGEX.test(name)) {\n    return new EventHandler(name, value);\n  } else {\n    return originalMakeAttributeHandler(elem, name, value);\n  }\n};\n\noriginalToText = Blaze._toText;\n\nBlaze._toText = function(htmljs, parentView, textMode) {\n  if (share.isEventHandler(htmljs)) {\n    return htmljs;\n  } else if (_.isArray(htmljs) && _.some(htmljs, share.isEventHandler)) {\n    return _.filter(htmljs, function(fun) {\n      if (share.isEventHandler(fun)) {\n        return true;\n      }\n      if (WHITESPACE_REGEX.test(fun)) {\n        return false;\n      }\n      throw new Error(\"Invalid event handler: \" + fun);\n    });\n  } else {\n    return originalToText(htmljs, parentView, textMode);\n  }\n};\n\noriginalExpandAttributes = Blaze._expandAttributes;\n\nBlaze._expandAttributes = function(attrs, parentView) {\n  var previousInExpandAttributes;\n  previousInExpandAttributes = share.inExpandAttributes;\n  share.inExpandAttributes = true;\n  try {\n    return originalExpandAttributes(attrs, parentView);\n  } finally {\n    share.inExpandAttributes = previousInExpandAttributes;\n  }\n};\n","sourceMap":{"version":3,"file":"/client.coffee.js","sourceRoot":"","sources":["/packages/peerlibrary_blaze-components/client.coffee"],"names":[],"mappings":"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","sourcesContent":["propagateUIHooks = (parent, node) ->\n  return if not parent._uihooks or node._uihooks\n\n  node._uihooks = _.extend {}, parent._uihooks, parentNode: node\n\n  return unless node.hasChildNodes()\n\n  for childNode in node.childNodes when childNode.nodeType is Node.ELEMENT_NODE\n    propagateUIHooks node, childNode\n\n  # To optimize.\n  return\n\noriginalInsertNodeWithHooks = Blaze._DOMRange._insertNodeWithHooks\nBlaze._DOMRange._insertNodeWithHooks = (node, parent, next) ->\n  propagateUIHooks parent, node\n  originalInsertNodeWithHooks node, parent, next\n\noriginalMoveNodeWithHooks = Blaze._DOMRange._moveNodeWithHooks\nBlaze._DOMRange._moveNodeWithHooks = (node, parent, next) ->\n  propagateUIHooks parent, node\n  originalMoveNodeWithHooks node, parent, next\n\ncreateUIHooks = (component, parentNode) ->\n  parentNode: parentNode\n\n  insertElement: (node, before) ->\n    component.insertDOMElement @parentNode, node, before\n\n  moveElement: (node, before) ->\n    component.moveDOMElement @parentNode, node, before\n\n  removeElement: (node) ->\n    component.removeDOMElement node.parentNode, node\n\noriginalDOMRangeAttach = Blaze._DOMRange::attach\nBlaze._DOMRange::attach = (parentElement, nextNode, _isMove, _isReplace) ->\n  if component = @view?._templateInstance?.component\n    for member in @members when member not instanceof Blaze._DOMRange\n      member._uihooks = createUIHooks component, member\n\n      continue unless member.hasChildNodes()\n\n      for childNode in member.childNodes when childNode.nodeType is Node.ELEMENT_NODE\n        propagateUIHooks member, childNode\n\n    oldUIHooks = parentElement._uihooks\n    try\n      parentElement._uihooks = createUIHooks component, parentElement\n      return originalDOMRangeAttach.apply @, arguments\n    finally\n      if oldUIHooks\n        parentElement._uihooks = oldUIHooks\n      else\n        delete parentElement._uihooks\n\n  originalDOMRangeAttach.apply @, arguments\n\nWHITESPACE_REGEX = /^\\s+$/\n\nEventHandler = Blaze._AttributeHandler.extend\n  update: (element, oldValue, value) ->\n    oldValue = [] unless oldValue\n    oldValue = [oldValue] unless _.isArray oldValue\n\n    value = [] unless value\n    value = [value] unless _.isArray value\n\n    assert _.every(oldValue, share.isEventHandler), oldValue\n    assert _.every(value, share.isEventHandler), value\n\n    $element = $(element)\n    eventName = @name.substr(2).toLowerCase()\n\n    $element.off eventName, fun for fun in oldValue\n    $element.on eventName, fun for fun in value\n\noriginalMakeAttributeHandler = Blaze._makeAttributeHandler\nBlaze._makeAttributeHandler = (elem, name, value) ->\n  if share.EVENT_HANDLER_REGEX.test name\n    new EventHandler name, value\n  else\n    originalMakeAttributeHandler elem, name, value\n\noriginalToText = Blaze._toText\nBlaze._toText = (htmljs, parentView, textMode) ->\n  # If it is an event handler function, we pass it as it is and do not try to convert it to text.\n  # Our EventHandler knows how to handle such attribute values - functions.\n  if share.isEventHandler htmljs\n    htmljs\n  else if _.isArray(htmljs) and _.some htmljs, share.isEventHandler\n    # Remove whitespace in onEvent=\"{{onEvent1}} {{onEvent2}}\".\n    _.filter htmljs, (fun) ->\n      return true if share.isEventHandler fun\n      return false if WHITESPACE_REGEX.test fun\n\n      # We do not support anything fancy besides whitespace.\n      throw new Error \"Invalid event handler: #{fun}\"\n  else\n    originalToText htmljs, parentView, textMode\n\noriginalExpandAttributes = Blaze._expandAttributes\nBlaze._expandAttributes = (attrs, parentView) ->\n  previousInExpandAttributes = share.inExpandAttributes\n  share.inExpandAttributes = true\n  try\n    originalExpandAttributes attrs, parentView\n  finally\n    share.inExpandAttributes = previousInExpandAttributes\n"]}}