{"head":"","body":"","js":"\nTemplate.__checkName(\"TestLayout\");\nTemplate[\"TestLayout\"] = new Template(\"Template.TestLayout\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n      \", HTML.MAIN(\"\\n        \", HTML.Raw(\"<!-- {{>BookPanel}} -->\"), \"\\n     \", HTML.Raw(\"<!--    {{>modalConfirm}}\\n        {{>collectionTest}}\\n        {{>tester}} -->\"), \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"currentFieldValue\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  }), \"\\n      \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"afArrayField_mycustom\");\nTemplate[\"afArrayField_mycustom\"] = new Template(\"Template.afArrayField_mycustom\", (function() {\n  var view = this;\n  return [ Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"MusicProfiles\"),\n      doc: Spacebars.call(view.lookup(\"currentProfile\")),\n      id: Spacebars.call(\"upsertMusicProfileForm\"),\n      type: Spacebars.call(view.lookup(\"formType\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n  \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"awards\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afArrayField\"));\n      }), \"\\n  \", HTML.DIV({\n        \"class\": \"form-group\"\n      }, \"\\n    \", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary\"\n      }, \"Create\"), \"\\n  \"), \"\\n\" ];\n    });\n  }), \"\\n  \", HTML.DIV({\n    \"class\": \"panel panel-default\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"panel-heading\"\n  }, Blaze.View(\"lookup:afFieldLabelText\", function() {\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")\n    }));\n  })), \"\\n    \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")\n    }));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"panel-body has-error\"\n    }, \"\\n      \", HTML.SPAN({\n      \"class\": \"help-block\"\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")\n      })));\n    })), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n    \", HTML.UL({\n    \"class\": \"list-group\"\n  }, \"\\n      \", Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\")),\n      minCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\")),\n      maxCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {\n      return [ \"\\n      \", HTML.LI({\n        \"class\": \"list-group-item autoform-array-item\"\n      }, \"\\n        \", HTML.DIV(\"\\n          \", HTML.DIV({\n        \"class\": \"autoform-remove-item-wrap\"\n      }, \"\\n            \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasMoreThanMinimum\"), Spacebars.kw({\n          name: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"name\"),\n          minCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"minCount\"),\n          maxCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"maxCount\")\n        }));\n      }, function() {\n        return [ \"\\n            \", HTML.BUTTON({\n          type: \"button\",\n          \"class\": \"btn btn-primary autoform-remove-item\"\n        }, HTML.SPAN({\n          \"class\": \"glyphicon glyphicon-minus\"\n        }), \"\\n            \"), \"\\n            \" ];\n      }), \"\\n          \"), \"\\n          \", HTML.DIV({\n        \"class\": \"autoform-array-item-body\"\n      }, \"\\n            \", HTML.Comment(\"all actions have a type \"), \"\\n            \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"current\", \"type\")),\n          label: Spacebars.call(false),\n          options: Spacebars.call(\"auto\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n      }), \"\\n            \", HTML.Comment(\"branch here for other fields that depend on type \"), \"\\n            \", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"currentFieldValue\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n      \" ];\n    });\n  }), \" \\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasLessThanMaximum\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\"),\n      minCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"),\n      maxCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\")\n    }));\n  }, function() {\n    return [ \"\\n      \", HTML.LI({\n      \"class\": \"list-group-item\"\n    }, \"\\n        \", HTML.BUTTON({\n      type: \"button\",\n      \"class\": \"btn btn-primary autoform-add-item\",\n      \"data-autoform-field\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"name\"));\n      },\n      \"data-autoform-mincount\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"));\n      },\n      \"data-autoform-maxcount\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"));\n      }\n    }, HTML.SPAN({\n      \"class\": \"glyphicon glyphicon-plus\"\n    }), \"\\n        \"), \"\\n      \"), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \") ];\n}));\n\nTemplate.__checkName(\"type1\");\nTemplate[\"type1\"] = new Template(\"Template.type1\", (function() {\n  var view = this;\n  return HTML.Raw(\"<!--include type1 fields here-->\");\n}));\n\nTemplate.__checkName(\"type2\");\nTemplate[\"type2\"] = new Template(\"Template.type2\", (function() {\n  var view = this;\n  return HTML.Raw(\"<!--include type2 fields here-->\");\n}));\n\nTemplate.__checkName(\"type3\");\nTemplate[\"type3\"] = new Template(\"Template.type3\", (function() {\n  var view = this;\n  return HTML.Raw(\"<!--include type3 fields here-->\");\n}));\n","bodyAttrs":{}}