{"head":"","body":"","js":"\nTemplate.__checkName(\"TestLayout\");\nTemplate[\"TestLayout\"] = new Template(\"Template.TestLayout\", (function() {\n  var view = this;\n  return HTML.Raw('<!-- <header>\\n        <link rel=\"stylesheet\" href=\"styles/custom.css\">\\n        <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\\n\\n    </head>\\n    <main>\\n      <! {{>BookPanel}} -->\\n      <!-- {{>modalConfirm}}\\n      {{>bookAccompanist}}\\n      {{>collectionTest}}\\n      {{>tester}} -->\\n\\n    <!-- </header> -->');\n}));\n\nTemplate.__checkName(\"modalConfirm\");\nTemplate[\"modalConfirm\"] = new Template(\"Template.modalConfirm\", (function() {\n  var view = this;\n  return [ HTML.Raw('<!-- Modal Trigger -->\\n<a class=\"waves-effect waves-light btn modal-trigger\" href=\"#modal1\">Modal</a>\\n\\n<!-- Modal Structure -->\\n'), HTML.DIV({\n    id: \"modal1\",\n    \"class\": \"modal\"\n  }, \"\\n  \", HTML.DIV({\n    \"class\": \"modal-content\"\n  }, \"\\n    \", HTML.Raw(\"<h4>Review Booking Request</h4>\"), \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(\"BookingRequest\"),\n      data: Spacebars.call(Spacebars.dataMustache(view.lookup(\"transactionById\"), \"2STt9vFsiQDmXXwK9\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  }), \"\\n  \"), \"\\n  \", HTML.Raw('<div class=\"modal-footer\">\\n    <a href=\"#!\" class=\" modal-action modal-close waves-effect waves-green btn-flat\">Confirm</a>\\n    <a href=\"#!\" class=\" modal-action modal-close waves-effect waves-green btn-flat\">Reject</a>\\n  </div>'), \"\\n\") ];\n}));\n\nTemplate.__checkName(\"tester\");\nTemplate[\"tester\"] = new Template(\"Template.tester\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"row\">\\n    <div class=\"col s12 m6\">\\n      <div class=\"card blue-grey darken-1\">\\n        <div class=\"row\">\\n          <div class=\"card-content white-text valign-wrapper\">\\n            <div class=\"col s2\">\\n              <a href=\"#!\" class=\"valign\">Account     </a>\\n            </div>\\n            <div class=\"col s10\">\\n            <img src=\"https://avatars1.githubusercontent.com/u/49341?v=3&amp;s=40\" alt=\"\" class=\"circle valign responsive-img\">\\n            </div>\\n\\n\\n          </div>\\n          <div class=\"card-action\">\\n            <a href=\"#\">This is a link</a>\\n            <a href=\"#\">This is a link</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>');\n}));\n\nTemplate.__checkName(\"collectionTest\");\nTemplate[\"collectionTest\"] = new Template(\"Template.collectionTest\", (function() {\n  var view = this;\n  return [ HTML.Raw('<!-- <ul class=\"collection with-header\">\\n    <li class=\"collection-header\"><h4>First Names</h4></li>\\n    <div class=\"row\"><li class=\"collection-item\"><div class=\"col s11\"><input type=\"text\"></div><div class=\"col s1\"><a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">remove_circle</i></a></div></li></div>\\n    <li class=\"collection-item\"><div>Alvin<a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">remove_circle</i></a></div></li>\\n    <li class=\"collection-item\"><div>Alvin<a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">remove_circle</i></a></div></li>\\n    <li class=\"collection-item\"><div>Alvin<a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">remove_circle</i></a></div></li>\\n  </ul> -->\\n\\n  '), HTML.TABLE(\"\\n    \", HTML.THEAD(\"\\n      \", HTML.TR(\"\\n          \", HTML.TH({\n    \"data-field\": \"id\"\n  }, \"Name\"), \"\\n          \", HTML.TH({\n    \"data-field\": \"name\"\n  }, \"Item Name\"), \"\\n      \"), \"\\n    \"), \"\\n\\n    \", HTML.TBODY(\"\\n      \", HTML.TR(\"\\n        \", HTML.TD(\"  \", HTML.INPUT({\n    \"class\": \"tags\",\n    value: \"one;two;three\",\n    \"data-options\": \"four;five\",\n    \"data-separator\": \";\"\n  })), \"\\n      \"), \"\\n      \", HTML.TR(\"\\n        \", HTML.TD(\"Alan\"), \"\\n      \"), \"\\n\\n    \"), \"\\n  \"), HTML.Raw('\\n  <input class=\"tags\" value=\"one;two;three\" data-options=\"four;five\" data-separator=\";\">') ];\n}));\n\nTemplate.__checkName(\"afArrayField_changed\");\nTemplate[\"afArrayField_changed\"] = new Template(\"Template.afArrayField_changed\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"collection\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"collection-item\"\n  }, \"\\n    \", Blaze.View(\"lookup:afFieldLabelText\", function() {\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\")\n    }));\n  }), \"\\n      \", HTML.Raw(\"<!-- First Line (with Add icon) -->\"), \"\\n\\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasLessThanMaximum\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\"),\n      minCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"),\n      maxCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.A({\n      \"class\": \"secondary-content waves-effect waves-light autoform-add-item\",\n      \"data-autoform-field\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"name\"));\n      },\n      \"data-autoform-mincount\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"minCount\"));\n      },\n      \"data-autoform-maxcount\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"maxCount\"));\n      }\n    }, \"\\n          \", HTML.I({\n      \"class\": \"material-icons\"\n    }, \"add_circle\"), \"\\n        \"), \"\\n\\n      \" ];\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      \"class\": \"collection-item\"\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"red-text\"\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\"atts\"), \"name\")\n      })));\n    })), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"name\")),\n      minCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\")),\n      maxCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {\n      return [ \"\\n      \", HTML.DIV({\n        \"class\": \"collection-item\"\n      }, \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\")),\n          label: Spacebars.call(\"Piece\"),\n          options: Spacebars.call(view.lookup(\"afOptionsFromSchema\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n        \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasMoreThanMinimum\"), Spacebars.kw({\n          name: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"name\"),\n          minCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"minCount\"),\n          maxCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"maxCount\")\n        }));\n      }, function() {\n        return [ \"\\n          \", HTML.A({\n          href: \"#!\",\n          \"class\": \"secondary-content autoform-remove-item\"\n        }, HTML.I({\n          \"class\": \"material-icons\"\n        }, \"remove_circle\")), \"\\n        \" ];\n      }), \"\\n      \"), \"\\n\\n    \" ];\n    });\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"afQuickField_changed\");\nTemplate[\"afQuickField_changed\"] = new Template(\"Template.afQuickField_changed\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"isGroup\"), Spacebars.kw({\n      atts: view.lookup(\".\")\n    }));\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"afObjectField_changed\")), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"isFieldArray\"), Spacebars.kw({\n        atts: view.lookup(\".\")\n      }));\n    }, function() {\n      return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"afArrayField_changed\")), \"\\n    \" ];\n    }, function() {\n      return [ \"\\n      \", Blaze._TemplateWith(function() {\n        return Spacebars.call(view.lookup(\"groupAtts\"));\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afFormGroup_materialize\"));\n      }), \"\\n    \" ];\n    }), \"\\n  \" ];\n  });\n}));\n\nTemplate.__checkName(\"afObjectField_changed\");\nTemplate[\"afObjectField_changed\"] = new Template(\"Template.afObjectField_changed\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"card-panel autoform-object-field\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"card-content\"\n  }, \"\\n      \", Spacebars.With(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      \"class\": \"card-title\"\n    }, \"\\n          James\\n        \"), \"\\n      \" ];\n  }), \"\\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      \"class\": \"red-text\"\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")\n      })));\n    })), \"\\n      \" ];\n  }), \"\\n      \", Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"afQuickFields\"));\n  }), \"\\n    \"), \"\\n  \");\n}));\n","bodyAttrs":{}}