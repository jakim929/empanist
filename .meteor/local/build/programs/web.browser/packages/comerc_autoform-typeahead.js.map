{"version":3,"sources":["meteor://ðŸ’»app/packages/comerc_autoform-typeahead/template.autoform-typeahead.js","meteor://ðŸ’»app/packages/comerc_autoform-typeahead/autoform-typeahead.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mF;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mF","file":"/packages/comerc_autoform-typeahead.js","sourcesContent":["\nTemplate.__checkName(\"afTypeahead\");\nTemplate[\"afTypeahead\"] = new Template(\"Template.afTypeahead\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","AutoForm.addInputType(\"typeahead\", {\n  template: \"afTypeahead\",\n  valueOut: function () {\n    return this.typeahead('val');\n  },\n  valueConverters: {\n    \"number\": AutoForm.Utility.stringToNumber,\n    \"numberArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToNumber(item);\n        });\n      }\n      return val;\n    },\n    \"boolean\": AutoForm.Utility.stringToBool,\n    \"booleanArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToBool(item);\n        });\n      }\n      return val;\n    },\n    \"date\": AutoForm.Utility.stringToDate,\n    \"dateArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToDate(item);\n        });\n      }\n      return val;\n    }\n  }\n});\n\nTemplate.afTypeahead.helpers({\n  atts: function () {\n    var atts = _.clone(this.atts);\n    atts = AutoForm.Utility.addClass(atts, \"twitter-typeahead form-control\");\n    delete atts.typeaheadOptions;\n    delete atts.typeaheadDatasets;\n    return atts;\n  }\n});\n\nTemplate.afTypeahead.rendered = function () {\n  // instanciate typeahead\n  var substringMatcher = function(strs) {\n    return function findMatches(q, cb) {\n      var matches, substrRegex;\n      // an array that will be populated with substring matches\n      matches = [];\n      // regex used to determine if a string contains the substring `q`\n      substrRegex = new RegExp(q, 'i');\n      // iterate through the pool of strings and for any string that\n      // contains the substring `q`, add it to the `matches` array\n      $.each(strs, function(i, str) {\n        if (substrRegex.test(str.label)) {\n          // the typeahead jQuery plugin expects suggestions to a\n          // JavaScript object, refer to typeahead docs for more info\n          matches.push({ value: str.label });\n        }\n      });\n      cb(matches);\n    };\n  };\n  var options = {\n    highlight: true\n  };\n  if (this.data.atts.typeaheadOptions) {\n    _.extend(options, this.data.atts.typeaheadOptions);\n  }\n  var datasets = {\n    source: substringMatcher(this.data.selectOptions)\n  };\n  if (this.data.atts.typeaheadDatasets) {\n    _.extend(datasets, this.data.atts.typeaheadDatasets);\n  }\n  this.$('.twitter-typeahead').typeahead(options, datasets);\n};\n\nTemplate.afTypeahead.destroyed = function () {\n  this.$('.twitter-typeahead').typeahead('destroy');\n};\n"]}