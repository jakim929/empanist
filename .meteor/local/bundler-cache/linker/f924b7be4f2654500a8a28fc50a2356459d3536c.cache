[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar meteorInstall = Package['modules-runtime'].meteorInstall;\n\n/* Package-scope variables */\nvar Buffer, process;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"modules\":{\"server.js\":[\"./install-packages.js\",\"./buffer.js\",\"./process.js\",function(require){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/modules/server.js                                             //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nrequire(\"./install-packages.js\");\nrequire(\"./buffer.js\");\nrequire(\"./process.js\");\n\n////////////////////////////////////////////////////////////////////////////\n\n}],\"buffer.js\":[\"buffer\",function(require){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/modules/buffer.js                                             //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\ntry {\n  Buffer = global.Buffer || require(\"buffer\").Buffer;\n} catch (noBuffer) {}\n\n////////////////////////////////////////////////////////////////////////////\n\n}],\"install-packages.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/modules/install-packages.js                                   //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nfunction install(name) {\n  var meteorDir = {};\n\n  // Given a package name <name>, install a stub module in the\n  // /node_modules/meteor directory called <name>.js, so that\n  // require.resolve(\"meteor/<name>\") will always return\n  // /node_modules/meteor/<name>.js instead of something like\n  // /node_modules/meteor/<name>/index.js, in the rare but possible event\n  // that the package contains a file called index.js (#6590).\n  meteorDir[name + \".js\"] = function (r, e, module) {\n    module.exports = Package[name];\n  };\n\n  meteorInstall({\n    node_modules: {\n      meteor: meteorDir\n    }\n  });\n}\n\n// This file will be modified during computeJsOutputFilesMap to include\n// install(<name>) calls for every Meteor package.\n\ninstall(\"underscore\");\ninstall(\"meteor\");\ninstall(\"meteor-base\");\ninstall(\"mobile-experience\");\ninstall(\"npm-mongo\");\ninstall(\"babel-compiler\");\ninstall(\"ecmascript\");\ninstall(\"base64\");\ninstall(\"ejson\");\ninstall(\"id-map\");\ninstall(\"ordered-dict\");\ninstall(\"tracker\");\ninstall(\"modules-runtime\");\ninstall(\"modules\");\ninstall(\"es5-shim\");\ninstall(\"promise\");\ninstall(\"ecmascript-runtime\");\ninstall(\"babel-runtime\");\ninstall(\"random\");\ninstall(\"mongo-id\");\ninstall(\"diff-sequence\");\ninstall(\"geojson-utils\");\ninstall(\"minimongo\");\ninstall(\"check\");\ninstall(\"retry\");\ninstall(\"ddp-common\");\ninstall(\"ddp-client\");\ninstall(\"rate-limit\");\ninstall(\"ddp-rate-limiter\");\ninstall(\"logging\");\ninstall(\"routepolicy\");\ninstall(\"deps\");\ninstall(\"htmljs\");\ninstall(\"html-tools\");\ninstall(\"blaze-tools\");\ninstall(\"spacebars-compiler\");\ninstall(\"jquery\");\ninstall(\"observe-sequence\");\ninstall(\"reactive-var\");\ninstall(\"blaze\");\ninstall(\"spacebars\");\ninstall(\"ui\");\ninstall(\"boilerplate-generator\");\ninstall(\"webapp-hashing\");\ninstall(\"webapp\");\ninstall(\"autopublish\");\ninstall(\"callback-hook\");\ninstall(\"ddp-server\");\ninstall(\"ddp\");\ninstall(\"allow-deny\");\ninstall(\"binary-heap\");\ninstall(\"insecure\");\ninstall(\"mongo\");\ninstall(\"blaze-html-templates\");\ninstall(\"standard-minifier-css\");\ninstall(\"standard-minifier-js\");\ninstall(\"reactive-dict\");\ninstall(\"kadira:flow-router\");\ninstall(\"templating\");\ninstall(\"kadira:blaze-layout\");\ninstall(\"erasaur:meteor-lodash\");\ninstall(\"stolinski:stylus-multi\");\ninstall(\"fortawesome:fontawesome\");\ninstall(\"spiderable\");\ninstall(\"fastclick\");\ninstall(\"raix:handlebar-helpers\");\ninstall(\"aldeed:simple-schema\");\ninstall(\"raix:eventemitter\");\ninstall(\"aldeed:collection2-core\");\ninstall(\"aldeed:schema-index\");\ninstall(\"aldeed:schema-deny\");\ninstall(\"aldeed:collection2\");\ninstall(\"aldeed:autoform\");\ninstall(\"accounts-ui\");\ninstall(\"npm-bcrypt\");\ninstall(\"accounts-base\");\ninstall(\"sha\");\ninstall(\"srp\");\ninstall(\"email\");\ninstall(\"accounts-password\");\ninstall(\"matb33:bootstrap-glyphicons\");\ninstall(\"coffeescript\");\ninstall(\"zimme:active-route\");\ninstall(\"gwendall:auth-client-callbacks\");\ninstall(\"meteortoys:toykit\");\ninstall(\"msavin:mongol\");\ninstall(\"msavin:jetsetter\");\ninstall(\"meteortoys:blueprint\");\ninstall(\"meteortoys:authenticate\");\ninstall(\"meteortoys:shell\");\ninstall(\"meteortoys:method\");\ninstall(\"meteortoys:result\");\ninstall(\"meteortoys:autopub\");\ninstall(\"meteortoys:pub\");\ninstall(\"meteortoys:sub\");\ninstall(\"meteortoys:email\");\ninstall(\"meteortoys:listen\");\ninstall(\"meteortoys:throttle\");\ninstall(\"meteortoys:status\");\ninstall(\"meteortoys:hotreload\");\ninstall(\"meteortoys:allthings\");\ninstall(\"less\");\ninstall(\"notorii:array\");\ninstall(\"lukemadera:autoform-autocomplete\");\ninstall(\"meteorhacks:picker\");\ninstall(\"meteorhacks:search-source\");\ninstall(\"mpowaga:autoform-autocomplete\");\ninstall(\"comerc:bs-typeahead\");\ninstall(\"comerc:autoform-typeahead\");\ninstall(\"sergeyt:typeahead\");\ninstall(\"jeremy:selectize\");\ninstall(\"jamiecollinson:selectize-bootstrap\");\ninstall(\"comerc:autoform-selectize\");\ninstall(\"easysearch:core\");\ninstall(\"peerlibrary:assert\");\ninstall(\"peerlibrary:reactive-field\");\ninstall(\"peerlibrary:computed-field\");\ninstall(\"peerlibrary:base-component\");\ninstall(\"peerlibrary:data-lookup\");\ninstall(\"peerlibrary:blaze-components\");\ninstall(\"easysearch:components\");\ninstall(\"easy:search\");\ninstall(\"easysearch:autosuggest\");\ninstall(\"momentjs:moment\");\ninstall(\"mrt:googlemaps\");\ninstall(\"amplify\");\ninstall(\"session\");\ninstall(\"u2622:persistent-session\");\ninstall(\"aldeed:geocoder\");\ninstall(\"url\");\ninstall(\"http\");\ninstall(\"muriloventuroso:get-coordinates\");\ninstall(\"mdg:geolocation\");\ninstall(\"matb33:collection-hooks\");\ninstall(\"gfk:notifications\");\ninstall(\"useraccounts:core\");\ninstall(\"softwarerero:accounts-t9n\");\ninstall(\"useraccounts:materialize\");\ninstall(\"livedata\");\ninstall(\"hot-code-push\");\ninstall(\"launch-screen\");\ninstall(\"autoupdate\");\ninstall(\"reload\");\ninstall(\"mdg:validation-error\");\ninstall(\"service-configuration\");\n\n////////////////////////////////////////////////////////////////////////////\n\n},\"process.js\":[\"process\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/modules/process.js                                            //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\ntry {\n  // The application can run `npm install process` to provide its own\n  // process stub; otherwise this module will provide a partial stub.\n  process = global.process || require(\"process\");\n} catch (noProcess) {\n  process = {};\n}\n\nif (Meteor.isServer) {\n  // Make require(\"process\") work on the server in all versions of Node.\n  meteorInstall({\n    node_modules: {\n      \"process.js\": function (r, e, module) {\n        module.exports = process;\n      }\n    }\n  });\n} else {\n  process.platform = \"browser\";\n  process.nextTick = process.nextTick || Meteor._setImmediate;\n}\n\nif (typeof process.env !== \"object\") {\n  process.env = {};\n}\n\n_.extend(process.env, meteorEnv);\n\n////////////////////////////////////////////////////////////////////////////\n\n}]}}}},{\"extensions\":[\".js\",\".json\"]});\nvar exports = require(\"./node_modules/meteor/modules/server.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package.modules = exports, {\n  meteorInstall: meteorInstall,\n  Buffer: Buffer,\n  process: process\n});\n\n})();\n","servePath":"/packages/modules.js","sourceMap":{"version":3,"sources":["/packages/modules/server.js","/packages/modules/buffer.js","/packages/modules/install-packages.js","/packages/modules/process.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/packages/modules.js","sourcesContent":["require(\"./install-packages.js\");\nrequire(\"./buffer.js\");\nrequire(\"./process.js\");\n","try {\n  Buffer = global.Buffer || require(\"buffer\").Buffer;\n} catch (noBuffer) {}\n","function install(name) {\n  var meteorDir = {};\n\n  // Given a package name <name>, install a stub module in the\n  // /node_modules/meteor directory called <name>.js, so that\n  // require.resolve(\"meteor/<name>\") will always return\n  // /node_modules/meteor/<name>.js instead of something like\n  // /node_modules/meteor/<name>/index.js, in the rare but possible event\n  // that the package contains a file called index.js (#6590).\n  meteorDir[name + \".js\"] = function (r, e, module) {\n    module.exports = Package[name];\n  };\n\n  meteorInstall({\n    node_modules: {\n      meteor: meteorDir\n    }\n  });\n}\n\n// This file will be modified during computeJsOutputFilesMap to include\n// install(<name>) calls for every Meteor package.\n\ninstall(\"underscore\");\ninstall(\"meteor\");\ninstall(\"meteor-base\");\ninstall(\"mobile-experience\");\ninstall(\"npm-mongo\");\ninstall(\"babel-compiler\");\ninstall(\"ecmascript\");\ninstall(\"base64\");\ninstall(\"ejson\");\ninstall(\"id-map\");\ninstall(\"ordered-dict\");\ninstall(\"tracker\");\ninstall(\"modules-runtime\");\ninstall(\"modules\");\ninstall(\"es5-shim\");\ninstall(\"promise\");\ninstall(\"ecmascript-runtime\");\ninstall(\"babel-runtime\");\ninstall(\"random\");\ninstall(\"mongo-id\");\ninstall(\"diff-sequence\");\ninstall(\"geojson-utils\");\ninstall(\"minimongo\");\ninstall(\"check\");\ninstall(\"retry\");\ninstall(\"ddp-common\");\ninstall(\"ddp-client\");\ninstall(\"rate-limit\");\ninstall(\"ddp-rate-limiter\");\ninstall(\"logging\");\ninstall(\"routepolicy\");\ninstall(\"deps\");\ninstall(\"htmljs\");\ninstall(\"html-tools\");\ninstall(\"blaze-tools\");\ninstall(\"spacebars-compiler\");\ninstall(\"jquery\");\ninstall(\"observe-sequence\");\ninstall(\"reactive-var\");\ninstall(\"blaze\");\ninstall(\"spacebars\");\ninstall(\"ui\");\ninstall(\"boilerplate-generator\");\ninstall(\"webapp-hashing\");\ninstall(\"webapp\");\ninstall(\"autopublish\");\ninstall(\"callback-hook\");\ninstall(\"ddp-server\");\ninstall(\"ddp\");\ninstall(\"allow-deny\");\ninstall(\"binary-heap\");\ninstall(\"insecure\");\ninstall(\"mongo\");\ninstall(\"blaze-html-templates\");\ninstall(\"standard-minifier-css\");\ninstall(\"standard-minifier-js\");\ninstall(\"reactive-dict\");\ninstall(\"kadira:flow-router\");\ninstall(\"templating\");\ninstall(\"kadira:blaze-layout\");\ninstall(\"erasaur:meteor-lodash\");\ninstall(\"stolinski:stylus-multi\");\ninstall(\"fortawesome:fontawesome\");\ninstall(\"spiderable\");\ninstall(\"fastclick\");\ninstall(\"raix:handlebar-helpers\");\ninstall(\"aldeed:simple-schema\");\ninstall(\"raix:eventemitter\");\ninstall(\"aldeed:collection2-core\");\ninstall(\"aldeed:schema-index\");\ninstall(\"aldeed:schema-deny\");\ninstall(\"aldeed:collection2\");\ninstall(\"aldeed:autoform\");\ninstall(\"accounts-ui\");\ninstall(\"npm-bcrypt\");\ninstall(\"accounts-base\");\ninstall(\"sha\");\ninstall(\"srp\");\ninstall(\"email\");\ninstall(\"accounts-password\");\ninstall(\"matb33:bootstrap-glyphicons\");\ninstall(\"coffeescript\");\ninstall(\"zimme:active-route\");\ninstall(\"gwendall:auth-client-callbacks\");\ninstall(\"meteortoys:toykit\");\ninstall(\"msavin:mongol\");\ninstall(\"msavin:jetsetter\");\ninstall(\"meteortoys:blueprint\");\ninstall(\"meteortoys:authenticate\");\ninstall(\"meteortoys:shell\");\ninstall(\"meteortoys:method\");\ninstall(\"meteortoys:result\");\ninstall(\"meteortoys:autopub\");\ninstall(\"meteortoys:pub\");\ninstall(\"meteortoys:sub\");\ninstall(\"meteortoys:email\");\ninstall(\"meteortoys:listen\");\ninstall(\"meteortoys:throttle\");\ninstall(\"meteortoys:status\");\ninstall(\"meteortoys:hotreload\");\ninstall(\"meteortoys:allthings\");\ninstall(\"less\");\ninstall(\"notorii:array\");\ninstall(\"lukemadera:autoform-autocomplete\");\ninstall(\"meteorhacks:picker\");\ninstall(\"meteorhacks:search-source\");\ninstall(\"mpowaga:autoform-autocomplete\");\ninstall(\"comerc:bs-typeahead\");\ninstall(\"comerc:autoform-typeahead\");\ninstall(\"sergeyt:typeahead\");\ninstall(\"jeremy:selectize\");\ninstall(\"jamiecollinson:selectize-bootstrap\");\ninstall(\"comerc:autoform-selectize\");\ninstall(\"easysearch:core\");\ninstall(\"peerlibrary:assert\");\ninstall(\"peerlibrary:reactive-field\");\ninstall(\"peerlibrary:computed-field\");\ninstall(\"peerlibrary:base-component\");\ninstall(\"peerlibrary:data-lookup\");\ninstall(\"peerlibrary:blaze-components\");\ninstall(\"easysearch:components\");\ninstall(\"easy:search\");\ninstall(\"easysearch:autosuggest\");\ninstall(\"momentjs:moment\");\ninstall(\"mrt:googlemaps\");\ninstall(\"amplify\");\ninstall(\"session\");\ninstall(\"u2622:persistent-session\");\ninstall(\"aldeed:geocoder\");\ninstall(\"url\");\ninstall(\"http\");\ninstall(\"muriloventuroso:get-coordinates\");\ninstall(\"mdg:geolocation\");\ninstall(\"matb33:collection-hooks\");\ninstall(\"gfk:notifications\");\ninstall(\"useraccounts:core\");\ninstall(\"softwarerero:accounts-t9n\");\ninstall(\"useraccounts:materialize\");\ninstall(\"livedata\");\ninstall(\"hot-code-push\");\ninstall(\"launch-screen\");\ninstall(\"autoupdate\");\ninstall(\"reload\");\ninstall(\"mdg:validation-error\");\ninstall(\"service-configuration\");\n","try {\n  // The application can run `npm install process` to provide its own\n  // process stub; otherwise this module will provide a partial stub.\n  process = global.process || require(\"process\");\n} catch (noProcess) {\n  process = {};\n}\n\nif (Meteor.isServer) {\n  // Make require(\"process\") work on the server in all versions of Node.\n  meteorInstall({\n    node_modules: {\n      \"process.js\": function (r, e, module) {\n        module.exports = process;\n      }\n    }\n  });\n} else {\n  process.platform = \"browser\";\n  process.nextTick = process.nextTick || Meteor._setImmediate;\n}\n\nif (typeof process.env !== \"object\") {\n  process.env = {};\n}\n\n_.extend(process.env, meteorEnv);\n"]}}]