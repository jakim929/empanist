[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar HTTP = Package.http.HTTP;\nvar HTTPInternals = Package.http.HTTPInternals;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar Coordinates;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"muriloventuroso:get-coordinates\":{\"get-coordinates.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////\n//                                                                                //\n// packages/muriloventuroso_get-coordinates/get-coordinates.js                    //\n//                                                                                //\n////////////////////////////////////////////////////////////////////////////////////\n                                                                                  //\nCoordinates = {                                                                   // 1\n    key: '',                                                                      // 2\n    url: 'https://maps.googleapis.com/maps/api/geocode/json?address=',            // 3\n    getFromAdress: function getFromAdress(address) {                              // 4\n        var apiUrl = this.url + encodeURIComponent(address) + '&key=' + this.key;\n        var res = HTTP.get(apiUrl).data;                                          // 6\n        if (res['status'] == 'OK') {                                              // 7\n            var response = {                                                      // 8\n                'status': res['status'],                                          // 9\n                'location': res['results'][0]['geometry']['location']             // 10\n            };                                                                    // 8\n        } else {                                                                  // 12\n            var response = { 'status': res['status'] };                           // 13\n        }                                                                         // 14\n        return response;                                                          // 15\n    }                                                                             // 16\n};                                                                                // 1\n////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./node_modules/meteor/muriloventuroso:get-coordinates/get-coordinates.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['muriloventuroso:get-coordinates'] = {}, {\n  Coordinates: Coordinates\n});\n\n})();\n","servePath":"/packages/muriloventuroso_get-coordinates.js","sourceMap":{"version":3,"sources":["/packages/muriloventuroso:get-coordinates/get-coordinates.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,cAAc;AACV,SAAK,EADK;AAEV,SAAK,4DAFK;AAGV,mBAAe,uBAAS,OAAT,EAAiB;AAC5B,YAAI,SAAS,KAAK,GAAL,GAAW,mBAAmB,OAAnB,CAAX,GAAyC,OAAzC,GAAmD,KAAK,GAArE;AACA,YAAI,MAAM,KAAK,GAAL,CAAS,MAAT,EAAiB,IAA3B;AACA,YAAG,IAAI,QAAJ,KAAe,IAAlB,EAAuB;AACnB,gBAAI,WAAW;AACX,0BAAU,IAAI,QAAJ,CADC;AAEX,4BAAY,IAAI,SAAJ,EAAe,CAAf,EAAkB,UAAlB,EAA8B,UAA9B;AAFD,aAAf;AAIH,SALD,MAKK;AACD,gBAAI,WAAW,EAAC,UAAU,IAAI,QAAJ,CAAX,EAAf;AACH;AACD,eAAO,QAAP;AACH;AAfS,CAAd,qF","file":"/packages/muriloventuroso_get-coordinates.js","sourcesContent":["Coordinates = {\n    key: '',\n    url: 'https://maps.googleapis.com/maps/api/geocode/json?address=',\n    getFromAdress: function(address){\n        var apiUrl = this.url + encodeURIComponent(address) + '&key=' + this.key;\n        var res = HTTP.get(apiUrl).data;\n        if(res['status']=='OK'){\n            var response = {\n                'status': res['status'],\n                'location': res['results'][0]['geometry']['location']\n            };\n        }else{\n            var response = {'status': res['status']};\n        }\n        return response\n    }\n}\n"]}}]