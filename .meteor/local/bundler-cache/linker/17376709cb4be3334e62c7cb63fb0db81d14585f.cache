[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package.underscore._;\nSpiderable = Package.spiderable.Spiderable;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"collections\":{\"accompanistProfile.js\":[\"meteor/mongo\",function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// collections/accompanistProfile.js                                                                     //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nexports.__esModule = true;                                                                               //\nexports.AccompanistProfile = undefined;                                                                  //\n                                                                                                         //\nvar _mongo = require('meteor/mongo');                                                                    // 1\n                                                                                                         //\nvar AccompanistProfile = exports.AccompanistProfile = new _mongo.Mongo.Collection('accompanistProfile');\n                                                                                                         //\nAccompanistProfileSchema = new SimpleSchema({                                                            // 5\n                                                                                                         //\n  repertoire: {                                                                                          // 7\n    type: [String],                                                                                      // 8\n    label: \"Repertoire\"                                                                                  // 9\n  },                                                                                                     //\n                                                                                                         //\n  charge: {                                                                                              // 12\n    type: Number,                                                                                        // 13\n    label: \"Hourly Charge\",                                                                              // 14\n    autoform: {                                                                                          // 15\n      options: [{ label: \"$20\", value: 20 }, { label: \"$40\", value: 40 }, { label: \"$60\", value: 60 }]   // 16\n    }                                                                                                    //\n  },                                                                                                     //\n                                                                                                         //\n  working_hours: {                                                                                       // 24\n    type: [select - checkbox],                                                                           // 25\n    noselect: true,                                                                                      // 26\n    label: \"What times do you prefer working in?\",                                                       // 27\n    autoform: {                                                                                          // 28\n      afFieldInput: {                                                                                    // 29\n        label: \"Morning (8am - 12pm)\",                                                                   // 30\n        value: \"morning\"                                                                                 // 31\n      },                                                                                                 //\n      afFieldInput: {                                                                                    // 33\n        label: \"Afternoon (12pm - 6pm)\",                                                                 // 34\n        value: \"afternoon\"                                                                               // 35\n      },                                                                                                 //\n      afFieldInput: {                                                                                    // 37\n        label: \"Night (6pm - 11pm)\",                                                                     // 38\n        value: \"night\"                                                                                   // 39\n      }                                                                                                  //\n    }                                                                                                    //\n  },                                                                                                     //\n                                                                                                         //\n  location: {                                                                                            // 44\n    type: String,                                                                                        // 45\n    label: \"Session's Location\",                                                                         // 46\n    autoform: {                                                                                          // 47\n      options: [{ label: \"My Place\", value: \"My Place\" }, { label: \"Student's Place\", value: \"Student's Place\" }, { label: \"Doesn't matter\", value: \"Doesn't matter\" }]\n    }                                                                                                    //\n  },                                                                                                     //\n                                                                                                         //\n  one_liner: {                                                                                           // 56\n    type: String,                                                                                        // 57\n    label: \"Describe yourself in one sentence\"                                                           // 58\n  }                                                                                                      //\n                                                                                                         //\n});                                                                                                      //\n                                                                                                         //\nAccompanistProfile.attachSchema(AccompanistProfileSchema);                                               // 64\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"account.js\":[\"meteor/mongo\",\"./accompanistProfile.js\",function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// collections/account.js                                                                                //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nexports.__esModule = true;                                                                               //\nexports.Accounts = undefined;                                                                            //\n                                                                                                         //\nvar _mongo = require('meteor/mongo');                                                                    // 1\n                                                                                                         //\nvar _accompanistProfile = require('./accompanistProfile.js');                                            // 2\n                                                                                                         //\nvar Accounts = exports.Accounts = new _mongo.Mongo.Collection('accounts');                               // 4\n                                                                                                         //\nPaymentMethodSchema = new SimpleSchema({                                                                 // 6\n  paymentType: {                                                                                         // 7\n    type: String,                                                                                        // 8\n    label: \"Payment Type\"                                                                                // 9\n  }                                                                                                      //\n});                                                                                                      //\n                                                                                                         //\nAccountSchema = new SimpleSchema({                                                                       // 13\n  name: {                                                                                                // 14\n    type: String,                                                                                        // 15\n    label: \"Name\"                                                                                        // 16\n  },                                                                                                     //\n                                                                                                         //\n  birthDate: {                                                                                           // 19\n    type: Date,                                                                                          // 20\n    label: \"Date of Birth\"                                                                               // 21\n  },                                                                                                     //\n                                                                                                         //\n  phone: {                                                                                               // 24\n    type: String,                                                                                        // 25\n    label: \"Phone Number\"                                                                                // 26\n  },                                                                                                     //\n                                                                                                         //\n  affiliation: {                                                                                         // 29\n    type: String,                                                                                        // 30\n    label: \"Affiliation\"                                                                                 // 31\n  },                                                                                                     //\n                                                                                                         //\n  accompanistProfile: {                                                                                  // 34\n    type: [_accompanistProfile.AccompanistProfileSchema],                                                // 35\n    label: \"Accompanist Profile\",                                                                        // 36\n    optional: true                                                                                       // 37\n  }                                                                                                      //\n                                                                                                         //\n});                                                                                                      //\n                                                                                                         //\nAccounts.attachSchema(AccountSchema);                                                                    // 42\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"musicProfile.js\":[\"meteor/mongo\",function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// collections/musicProfile.js                                                                           //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nexports.__esModule = true;                                                                               //\nexports.Temp = exports.MusicProfiles = undefined;                                                        //\n                                                                                                         //\nvar _mongo = require('meteor/mongo');                                                                    // 1\n                                                                                                         //\nvar MusicProfiles = exports.MusicProfiles = new _mongo.Mongo.Collection('musicProfiles');                // 3\n                                                                                                         //\nvar Temp = exports.Temp = new _mongo.Mongo.Collection('temp');                                           // 5\n                                                                                                         //\nTempSchema = new SimpleSchema({                                                                          // 7\n  name: {                                                                                                // 8\n    type: String,                                                                                        // 9\n    label: \"NAME\"                                                                                        // 10\n  }                                                                                                      //\n});                                                                                                      //\nTemp.attachSchema(TempSchema);                                                                           // 13\n                                                                                                         //\nOrchestraSchema = new SimpleSchema({                                                                     // 15\n  name: {                                                                                                // 16\n    type: String,                                                                                        // 17\n    label: \"Orchestra Name\"                                                                              // 18\n  },                                                                                                     //\n                                                                                                         //\n  position: {                                                                                            // 21\n    type: String,                                                                                        // 22\n    label: \"Position in Orchestra\"                                                                       // 23\n  },                                                                                                     //\n                                                                                                         //\n  startDate: {                                                                                           // 26\n    type: Date,                                                                                          // 27\n    label: \"Beginning Date\"                                                                              // 28\n  },                                                                                                     //\n                                                                                                         //\n  endDate: {                                                                                             // 31\n    type: Date,                                                                                          // 32\n    label: \"Ending Date\"                                                                                 // 33\n  }                                                                                                      //\n});                                                                                                      //\n                                                                                                         //\nAwardSchema = new SimpleSchema({                                                                         // 37\n  name: {                                                                                                // 38\n    type: String,                                                                                        // 39\n    label: \"Award Name\"                                                                                  // 40\n  },                                                                                                     //\n  date: {                                                                                                // 42\n    type: Date,                                                                                          // 43\n    label: \"Date Received\"                                                                               // 44\n  }                                                                                                      //\n});                                                                                                      //\n                                                                                                         //\nCompetitionSchema = new SimpleSchema({                                                                   // 48\n  name: {                                                                                                // 49\n    type: String,                                                                                        // 50\n    label: \"Competition Name\"                                                                            // 51\n  },                                                                                                     //\n  date: {                                                                                                // 53\n    type: Date,                                                                                          // 54\n    label: \"Competition Date\"                                                                            // 55\n  },                                                                                                     //\n  award: {                                                                                               // 57\n    type: String,                                                                                        // 58\n    label: \"Award Type\"                                                                                  // 59\n  }                                                                                                      //\n});                                                                                                      //\n                                                                                                         //\nMusicProgramSchema = new SimpleSchema({                                                                  // 63\n  instName: {                                                                                            // 64\n    type: String,                                                                                        // 65\n    label: \"Institution Name\"                                                                            // 66\n  },                                                                                                     //\n                                                                                                         //\n  programName: {                                                                                         // 69\n    type: String,                                                                                        // 70\n    label: \"Program Name\"                                                                                // 71\n  },                                                                                                     //\n                                                                                                         //\n  startDate: {                                                                                           // 74\n    type: Date,                                                                                          // 75\n    label: \"Start Date\"                                                                                  // 76\n  },                                                                                                     //\n                                                                                                         //\n  endDate: {                                                                                             // 79\n    type: Date,                                                                                          // 80\n    label: \"End Date\"                                                                                    // 81\n  }                                                                                                      //\n});                                                                                                      //\n                                                                                                         //\nMusicProfileSchema = new SimpleSchema({                                                                  // 87\n  userId: {                                                                                              // 88\n    type: String,                                                                                        // 89\n    label: \"User ID\",                                                                                    // 90\n    autoform: {                                                                                          // 91\n      type: \"hidden\"                                                                                     // 92\n    },                                                                                                   //\n    autoValue: function () {                                                                             // 94\n      function autoValue() {                                                                             // 94\n        return this.userId;                                                                              // 95\n      }                                                                                                  //\n                                                                                                         //\n      return autoValue;                                                                                  //\n    }()                                                                                                  //\n  },                                                                                                     //\n                                                                                                         //\n  instrument: {                                                                                          // 99\n    type: String,                                                                                        // 100\n    label: \"Instrument Played\"                                                                           // 101\n  },                                                                                                     //\n                                                                                                         //\n  yearsPlayed: {                                                                                         // 104\n    type: String,                                                                                        // 105\n    label: \"Years Played\"                                                                                // 106\n  },                                                                                                     //\n                                                                                                         //\n  awards: {                                                                                              // 109\n    type: [AwardSchema],                                                                                 // 110\n    label: \"Awards Won\",                                                                                 // 111\n    optional: true                                                                                       // 112\n  },                                                                                                     //\n                                                                                                         //\n  competitions: {                                                                                        // 115\n    type: [CompetitionSchema],                                                                           // 116\n    label: \"Competitions Participated in\",                                                               // 117\n    optional: true                                                                                       // 118\n  },                                                                                                     //\n                                                                                                         //\n  musicPrograms: {                                                                                       // 121\n    type: [MusicProgramSchema],                                                                          // 122\n    label: \"Music Programs Participated in\",                                                             // 123\n    optional: true                                                                                       // 124\n  },                                                                                                     //\n                                                                                                         //\n  orchestras: {                                                                                          // 127\n    type: [OrchestraSchema],                                                                             // 128\n    label: \"Orchestras Played At\",                                                                       // 129\n    optional: true                                                                                       // 130\n  }                                                                                                      //\n                                                                                                         //\n});                                                                                                      //\n                                                                                                         //\nMusicProfiles.attachSchema(MusicProfileSchema);                                                          // 137\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"libs\":{\"routes.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// libs/routes.js                                                                                        //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nFlowRouter.route('/', {                                                                                  // 1\n    name: 'home',                                                                                        // 2\n    action: function () {                                                                                // 3\n        function action() {                                                                              //\n            BlazeLayout.render('MainLayout', { main: 'HomeLayout' });                                    // 4\n        }                                                                                                //\n                                                                                                         //\n        return action;                                                                                   //\n    }()                                                                                                  //\n});                                                                                                      //\n                                                                                                         //\nFlowRouter.route('/addinfo', {                                                                           // 8\n    name: 'addInfo',                                                                                     // 9\n    action: function () {                                                                                // 10\n        function action() {                                                                              //\n            BlazeLayout.render('MainLayout', { main: 'AddInfoLayout' });                                 // 11\n        }                                                                                                //\n                                                                                                         //\n        return action;                                                                                   //\n    }()                                                                                                  //\n});                                                                                                      //\n                                                                                                         //\nFlowRouter.route('/newaccomp', {                                                                         // 15\n    name: 'NewAccompLayout',                                                                             // 16\n    action: function () {                                                                                // 17\n        function action() {                                                                              //\n            BlazeLayout.render('MainLayout', { main: 'NewAccompLayout' });                               // 18\n        }                                                                                                //\n                                                                                                         //\n        return action;                                                                                   //\n    }()                                                                                                  //\n});                                                                                                      //\n                                                                                                         //\nFlowRouter.route('/results', {                                                                           // 22\n    name: 'results',                                                                                     // 23\n    action: function () {                                                                                // 24\n        function action() {                                                                              //\n            BlazeLayout.render('MainLayout', { main: 'ResultsLayout' });                                 // 25\n        }                                                                                                //\n                                                                                                         //\n        return action;                                                                                   //\n    }()                                                                                                  //\n});                                                                                                      //\n                                                                                                         //\nFlowRouter.route('/accompprofile', {                                                                     // 29\n    name: 'accompprofile',                                                                               // 30\n    action: function () {                                                                                // 31\n        function action() {                                                                              //\n            BlazeLayout.render('MainLayout', { main: 'AccompProfileLayout' });                           // 32\n        }                                                                                                //\n                                                                                                         //\n        return action;                                                                                   //\n    }()                                                                                                  //\n});                                                                                                      //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"main.js\":[\"meteor/meteor\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// server/main.js                                                                                        //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nvar _meteor = require('meteor/meteor');                                                                  // 1\n                                                                                                         //\n_meteor.Meteor.startup(function () {                                                                     // 3\n  // code to run on server at startup                                                                    //\n});                                                                                                      //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./collections/accompanistProfile.js\");\nrequire(\"./collections/account.js\");\nrequire(\"./collections/musicProfile.js\");\nrequire(\"./libs/routes.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/collections/accompanistProfile.js","/collections/account.js","/collections/musicProfile.js","/libs/routes.js","/server/main.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AAEO,IAAM,kDAAqB,IAAI,aAAM,UAAN,CAAiB,oBAArB,CAArB;;AAEb,2BAA2B,IAAI,YAAJ,CAAiB;;AAE3C,cAAY;AACR,UAAM,CAAC,MAAD,CAAN;AACA,WAAO,YAAP;GAFJ;;AAKE,UAAQ;AACP,UAAM,MAAN;AACA,WAAO,eAAP;AACA,cAAU;AACN,eAAS,CACR,EAAC,OAAO,KAAP,EAAc,OAAO,EAAP,EADP,EAER,EAAC,OAAO,KAAP,EAAc,OAAO,EAAP,EAFP,EAGR,EAAC,OAAO,KAAP,EAAc,OAAO,EAAP,EAHP,CAAT;KADJ;GAHD;;AAYA,iBAAe;AACd,UAAM,CAAC,SAAO,QAAP,CAAP;AACA,cAAS,IAAT;AACA,WAAO,sCAAP;AACA,cAAU;AACT,oBAAc;AACT,eAAO,sBAAP;AACA,eAAO,SAAP;OAFL;AAIG,oBAAc;AACZ,eAAO,wBAAP;AACA,eAAO,WAAP;OAFF;AAIA,oBAAc;AACZ,eAAO,oBAAP;AACA,eAAO,OAAP;OAFF;KATJ;GAJD;;AAoBA,YAAU;AACT,UAAM,MAAN;AACA,WAAO,oBAAP;AACA,cAAU;AACT,eAAS,CACL,EAAC,OAAO,UAAP,EAAmB,OAAO,UAAP,EADf,EAEL,EAAC,OAAO,iBAAP,EAA0B,OAAO,iBAAP,EAFtB,EAGL,EAAC,OAAO,gBAAP,EAAyB,OAAO,gBAAP,EAHrB,CAAT;KADD;GAHD;;AAYA,aAAW;AACV,UAAM,MAAN;AACA,WAAO,mCAAP;GAFD;;CAnDwB,CAA3B;;AA2DA,mBAAmB,YAAnB,CAAgC,wBAAhC,sD;;;;;;;;;;;;;;AC/DA;;AACA;;AAEO,IAAM,8BAAW,IAAI,aAAM,UAAN,CAAiB,UAArB,CAAX;;AAEb,sBAAsB,IAAI,YAAJ,CAAiB;AACrC,eAAa;AACX,UAAM,MAAN;AACA,WAAO,cAAP;GAFF;CADoB,CAAtB;;AAOA,gBAAgB,IAAI,YAAJ,CAAiB;AAC/B,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,MAAP;GAFF;;AAKA,aAAY;AACV,UAAM,IAAN;AACA,WAAO,eAAP;GAFF;;AAKA,SAAO;AACL,UAAM,MAAN;AACA,WAAO,cAAP;GAFF;;AAKA,eAAa;AACX,UAAM,MAAN;AACA,WAAO,aAAP;GAFF;;AAKA,sBAAqB;AACnB,UAAM,8CAAN;AACA,WAAO,qBAAP;AACA,cAAU,IAAV;GAHF;;CArBc,CAAhB;;AA6BA,SAAS,YAAT,CAAsB,aAAtB,2E;;;;;;;;;;;;;;ACzCA;;AAEO,IAAM,wCAAgB,IAAI,aAAM,UAAN,CAAiB,eAArB,CAAhB;;AAEN,IAAM,sBAAO,IAAI,aAAM,UAAN,CAAiB,MAArB,CAAP;;AAEb,aAAa,IAAI,YAAJ,CAAiB;AAC5B,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,MAAP;GAFF;CADW,CAAb;AAMA,KAAK,YAAL,CAAkB,UAAlB;;AAEA,kBAAkB,IAAI,YAAJ,CAAiB;AACjC,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,gBAAP;GAFF;;AAKA,YAAU;AACR,UAAM,MAAN;AACA,WAAO,uBAAP;GAFF;;AAKA,aAAW;AACT,UAAM,IAAN;AACA,WAAO,gBAAP;GAFF;;AAKA,WAAS;AACP,UAAM,IAAN;AACA,WAAO,aAAP;GAFF;CAhBgB,CAAlB;;AAsBA,cAAc,IAAI,YAAJ,CAAiB;AAC7B,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,YAAP;GAFF;AAIA,QAAM;AACJ,UAAM,IAAN;AACA,WAAO,eAAP;GAFF;CALY,CAAd;;AAWA,oBAAoB,IAAI,YAAJ,CAAiB;AACnC,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,kBAAP;GAFF;AAIA,QAAM;AACJ,UAAM,IAAN;AACA,WAAO,kBAAP;GAFF;AAIA,SAAO;AACL,UAAM,MAAN;AACA,WAAO,YAAP;GAFF;CATkB,CAApB;;AAeA,qBAAqB,IAAI,YAAJ,CAAiB;AACpC,YAAU;AACR,UAAM,MAAN;AACA,WAAO,kBAAP;GAFF;;AAKA,eAAc;AACZ,UAAM,MAAN;AACA,WAAO,cAAP;GAFF;;AAKA,aAAW;AACT,UAAM,IAAN;AACA,WAAO,YAAP;GAFF;;AAKA,WAAS;AACP,UAAM,IAAN;AACA,WAAO,UAAP;GAFF;CAhBmB,CAArB;;AAwBA,qBAAqB,IAAI,YAAJ,CAAiB;AACpC,UAAQ;AACN,UAAM,MAAN;AACA,WAAO,SAAP;AACA,cAAU;AACR,YAAM,QAAN;KADF;AAGA;AAAW,2BAAW;AACpB,eAAO,KAAK,MAAL,CADa;OAAX;;;OAAX;GANF;;AAWA,cAAY;AACV,UAAM,MAAN;AACA,WAAO,mBAAP;GAFF;;AAKA,eAAa;AACX,UAAM,MAAN;AACA,WAAO,cAAP;GAFF;;AAKA,UAAQ;AACN,UAAM,CAAC,WAAD,CAAN;AACA,WAAO,YAAP;AACA,cAAU,IAAV;GAHF;;AAMA,gBAAc;AACZ,UAAM,CAAC,iBAAD,CAAN;AACA,WAAO,8BAAP;AACA,cAAU,IAAV;GAHF;;AAMA,iBAAe;AACb,UAAM,CAAC,kBAAD,CAAN;AACA,WAAO,gCAAP;AACA,cAAU,IAAV;GAHF;;AAMA,cAAY;AACV,UAAM,CAAC,eAAD,CAAN;AACA,WAAO,sBAAP;AACA,cAAU,IAAV;GAHF;;CAxCmB,CAArB;;AAkDA,cAAc,YAAd,CAA2B,kBAA3B,kE;;;;;;;;;;;ACxIA,WAAW,KAAX,CAAiB,GAAjB,EAAsB;AAClB,UAAM,MAAN;AACA;0BAAS;AACL,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,YAAN,EAAlC,EADK;;;;OAFS;CAAtB;;AAOA,WAAW,KAAX,CAAiB,UAAjB,EAA6B;AACzB,UAAM,SAAN;AACA;0BAAS;AACR,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,eAAN,EAAlC,EADQ;;;;OAFgB;CAA7B;;AAOA,WAAW,KAAX,CAAiB,YAAjB,EAA+B;AAC3B,UAAM,iBAAN;AACA;0BAAS;AACR,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,iBAAN,EAAlC,EADQ;;;;OAFkB;CAA/B;;AAOA,WAAW,KAAX,CAAiB,UAAjB,EAA6B;AACzB,UAAM,SAAN;AACA;0BAAS;AACR,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,eAAN,EAAlC,EADQ;;;;OAFgB;CAA7B;;AAOA,WAAW,KAAX,CAAiB,gBAAjB,EAAmC;AAC/B,UAAM,eAAN;AACA;0BAAS;AACR,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,qBAAN,EAAlC,EADQ;;;;OAFsB;CAAnC,0G;;;;;;;;;;;AC5BA;;AAEA,eAAO,OAAP,CAAe,YAAM;;CAAN,CAAf,yG","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const AccompanistProfile = new Mongo.Collection('accompanistProfile');\n\nAccompanistProfileSchema = new SimpleSchema({\n\t\n\trepertoire: {\n    \ttype: [String],\n    \tlabel: \"Repertoire\"\n  \t},\n  \t\n  \tcharge: {\n  \t\ttype: Number,\n  \t\tlabel: \"Hourly Charge\",\n  \t\tautoform: {\n      \t\toptions: [\n        \t{label: \"$20\", value: 20},\n        \t{label: \"$40\", value: 40},\n        \t{label: \"$60\", value: 60}\n      \t\t]\n   \t\t}\n  \t},\n\n  \tworking_hours: {\n  \t\ttype: [select-checkbox],\n  \t\tnoselect:true,\n  \t\tlabel: \"What times do you prefer working in?\",\n  \t\tautoform: {\n  \t\t\tafFieldInput: {\n        \t\tlabel: \"Morning (8am - 12pm)\",\n        \t\tvalue: \"morning\"\n      \t\t},\n      \t\tafFieldInput: {\n        \t\tlabel: \"Afternoon (12pm - 6pm)\",\n        \t\tvalue: \"afternoon\"\n      \t\t},\n      \t\tafFieldInput: {\n        \t\tlabel: \"Night (6pm - 11pm)\",\n        \t\tvalue: \"night\"\n      \t\t}\n   \t\t}\n  \t},\n\n  \tlocation: {\n  \t\ttype: String,\n  \t\tlabel: \"Session's Location\",\n  \t\tautoform: {\n  \t\t\toptions: [\n        \t{label: \"My Place\", value: \"My Place\"},\n        \t{label: \"Student's Place\", value: \"Student's Place\"},\n        \t{label: \"Doesn't matter\", value: \"Doesn't matter\"}\n      \t\t]\n  \t\t}\n  \t},\n\n  \tone_liner: {\n  \t\ttype: String,\n  \t\tlabel: \"Describe yourself in one sentence\",\n  \t},\n\n});\n\n\nAccompanistProfile.attachSchema(AccompanistProfileSchema)\n","import { Mongo } from 'meteor/mongo';\nimport { AccompanistProfileSchema } from './accompanistProfile.js'\n\nexport const Accounts = new Mongo.Collection('accounts');\n\nPaymentMethodSchema = new SimpleSchema({\n  paymentType: {\n    type: String,\n    label: \"Payment Type\"\n  }\n});\n\nAccountSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n\n  birthDate : {\n    type: Date,\n    label: \"Date of Birth\"\n  },\n\n  phone: {\n    type: String,\n    label: \"Phone Number\"\n  },\n\n  affiliation: {\n    type: String,\n    label: \"Affiliation\"\n  },\n\n  accompanistProfile : {\n    type: [AccompanistProfileSchema],\n    label: \"Accompanist Profile\",\n    optional: true\n  }\n\n});\n\nAccounts.attachSchema(AccountSchema)\n","import { Mongo } from 'meteor/mongo';\n\nexport const MusicProfiles = new Mongo.Collection('musicProfiles');\n\nexport const Temp = new Mongo.Collection('temp');\n\nTempSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"NAME\"\n  }\n})\nTemp.attachSchema(TempSchema)\n\nOrchestraSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Orchestra Name\"\n  },\n\n  position: {\n    type: String,\n    label: \"Position in Orchestra\"\n  },\n\n  startDate: {\n    type: Date,\n    label: \"Beginning Date\"\n  },\n\n  endDate: {\n    type: Date,\n    label: \"Ending Date\"\n  }\n});\n\nAwardSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Award Name\"\n  },\n  date: {\n    type: Date,\n    label: \"Date Received\"\n  }\n});\n\nCompetitionSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Competition Name\"\n  },\n  date: {\n    type: Date,\n    label: \"Competition Date\"\n  },\n  award: {\n    type: String,\n    label: \"Award Type\"\n  }\n});\n\nMusicProgramSchema = new SimpleSchema({\n  instName: {\n    type: String,\n    label: \"Institution Name\"\n  },\n\n  programName : {\n    type: String,\n    label: \"Program Name\"\n  },\n\n  startDate: {\n    type: Date,\n    label: \"Start Date\"\n  },\n\n  endDate: {\n    type: Date,\n    label: \"End Date\"\n  }\n})\n\n\n\nMusicProfileSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    label: \"User ID\",\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function() {\n      return this.userId;\n    }\n  },\n\n  instrument: {\n    type: String,\n    label: \"Instrument Played\"\n  },\n\n  yearsPlayed: {\n    type: String,\n    label: \"Years Played\"\n  },\n\n  awards: {\n    type: [AwardSchema],\n    label: \"Awards Won\",\n    optional: true\n  },\n\n  competitions: {\n    type: [CompetitionSchema],\n    label: \"Competitions Participated in\",\n    optional: true\n  },\n\n  musicPrograms: {\n    type: [MusicProgramSchema],\n    label: \"Music Programs Participated in\",\n    optional: true\n  },\n\n  orchestras: {\n    type: [OrchestraSchema],\n    label: \"Orchestras Played At\",\n    optional: true\n  }\n\n\n\n});\n\nMusicProfiles.attachSchema(MusicProfileSchema)\n","FlowRouter.route('/', {\n    name: 'home',\n    action() {\n        BlazeLayout.render('MainLayout', {main: 'HomeLayout'});\n    }\n});\n\nFlowRouter.route('/addinfo', {\n    name: 'addInfo',\n    action() {\n    \tBlazeLayout.render('MainLayout', {main: 'AddInfoLayout'});\n    }\n});\n\nFlowRouter.route('/newaccomp', {\n    name: 'NewAccompLayout',\n    action() {\n    \tBlazeLayout.render('MainLayout', {main: 'NewAccompLayout'});\n    }\n});\n\nFlowRouter.route('/results', {\n    name: 'results',\n    action() {\n    \tBlazeLayout.render('MainLayout', {main: 'ResultsLayout'});\n    }\n});\n\nFlowRouter.route('/accompprofile', {\n    name: 'accompprofile',\n    action() {\n    \tBlazeLayout.render('MainLayout', {main: 'AccompProfileLayout'});\n    }\n});\n\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]