[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\n\n/* Package-scope variables */\nvar wrapAsync;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// packages/meteorhacks_aggregate/packages/meteorhacks_aggregate.js         //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\n(function () {\n\n////////////////////////////////////////////////////////////////////////\n//                                                                    //\n// packages/meteorhacks:aggregate/index.js                            //\n//                                                                    //\n////////////////////////////////////////////////////////////////////////\n                                                                      //\nwrapAsync = (Meteor.wrapAsync)? Meteor.wrapAsync : Meteor._wrapAsync; // 1\nMongo.Collection.prototype.aggregate = function(pipelines, options) { // 2\n  var coll;                                                           // 3\n  if (this.rawCollection) {                                           // 4\n    // >= Meteor 1.0.4                                                // 5\n    coll = this.rawCollection();                                      // 6\n  } else {                                                            // 7\n\t// < Meteor 1.0.4                                                    // 8\n    coll = this._getCollection();                                     // 9\n  }                                                                   // 10\n  return wrapAsync(coll.aggregate.bind(coll))(pipelines, options);    // 11\n}                                                                     // 12\n                                                                      // 13\n////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n//////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['meteorhacks:aggregate'] = {};\n\n})();\n","servePath":"/packages/meteorhacks_aggregate.js","sourceMap":{"version":3,"sources":["/packages/meteorhacks_aggregate/packages/meteorhacks_aggregate.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/packages/meteorhacks_aggregate.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////\n//                                                                    //\n// packages/meteorhacks:aggregate/index.js                            //\n//                                                                    //\n////////////////////////////////////////////////////////////////////////\n                                                                      //\nwrapAsync = (Meteor.wrapAsync)? Meteor.wrapAsync : Meteor._wrapAsync; // 1\nMongo.Collection.prototype.aggregate = function(pipelines, options) { // 2\n  var coll;                                                           // 3\n  if (this.rawCollection) {                                           // 4\n    // >= Meteor 1.0.4                                                // 5\n    coll = this.rawCollection();                                      // 6\n  } else {                                                            // 7\n\t// < Meteor 1.0.4                                                    // 8\n    coll = this._getCollection();                                     // 9\n  }                                                                   // 10\n  return wrapAsync(coll.aggregate.bind(coll))(pipelines, options);    // 11\n}                                                                     // 12\n                                                                      // 13\n////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]