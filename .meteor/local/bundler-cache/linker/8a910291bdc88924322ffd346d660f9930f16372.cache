[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package.underscore._;\nSpiderable = Package.spiderable.Spiderable;\nFastClick = Package.fastclick.FastClick;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nAutoForm = Package['aldeed:autoform'].AutoForm;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nEasySearch = Package['easy:search'].EasySearch;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"layouts\":{\"template.AddInfoLayout.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// client/layouts/template.AddInfoLayout.js                                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"AddInfoLayout\");                                                                               // 2\nTemplate[\"AddInfoLayout\"] = new Template(\"Template.AddInfoLayout\", (function() {                                     // 3\n  var view = this;                                                                                                   // 4\n  return [ HTML.HEADER(\"\\n      \", Blaze.If(function() {                                                             // 5\n    return Spacebars.call(view.lookup(\"profileDoc\"));                                                                // 6\n  }, function() {                                                                                                    // 7\n    return [ \"\\n        \", HTML.H1(\"Edit Profile\"), \"\\n      \" ];                                                    // 8\n  }, function() {                                                                                                    // 9\n    return [ \"\\n        \", HTML.H1(\"Create a Profile\"), \"\\n      \" ];                                                // 10\n  }), \"\\n    \"), \"\\n    \", HTML.MAIN(\"\\n      \", Spacebars.include(view.lookupTemplate(\"makeUpdateAccountForm\")), \"\\n      \", Spacebars.include(view.lookupTemplate(\"makeUpdateProfileForm\")), \"\\n    \") ];\n}));                                                                                                                 // 12\n                                                                                                                     // 13\nTemplate.__checkName(\"makeUpdateAccountForm\");                                                                       // 14\nTemplate[\"makeUpdateAccountForm\"] = new Template(\"Template.makeUpdateAccountForm\", (function() {                     // 15\n  var view = this;                                                                                                   // 16\n  return Blaze.If(function() {                                                                                       // 17\n    return Spacebars.call(view.lookup(\"accountDoc\"));                                                                // 18\n  }, function() {                                                                                                    // 19\n    return [ \"\\n    \", Blaze._TemplateWith(function() {                                                              // 20\n      return {                                                                                                       // 21\n        collection: Spacebars.call(\"Accounts\"),                                                                      // 22\n        doc: Spacebars.call(view.lookup(\"accountDoc\")),                                                              // 23\n        id: Spacebars.call(\"makeUpdateProfileForm\"),                                                                 // 24\n        type: Spacebars.call(\"update\")                                                                               // 25\n      };                                                                                                             // 26\n    }, function() {                                                                                                  // 27\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                    // 28\n    }), \"\\n  \" ];                                                                                                    // 29\n  }, function() {                                                                                                    // 30\n    return [ \"\\n    \", Blaze._TemplateWith(function() {                                                              // 31\n      return {                                                                                                       // 32\n        collection: Spacebars.call(\"Accounts\"),                                                                      // 33\n        id: Spacebars.call(\"makeUpdateProfileForm\"),                                                                 // 34\n        type: Spacebars.call(\"insert\")                                                                               // 35\n      };                                                                                                             // 36\n    }, function() {                                                                                                  // 37\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                    // 38\n    }), \"\\n  \" ];                                                                                                    // 39\n  });                                                                                                                // 40\n}));                                                                                                                 // 41\n                                                                                                                     // 42\nTemplate.__checkName(\"makeUpdateProfileForm\");                                                                       // 43\nTemplate[\"makeUpdateProfileForm\"] = new Template(\"Template.makeUpdateProfileForm\", (function() {                     // 44\n  var view = this;                                                                                                   // 45\n  return Blaze.If(function() {                                                                                       // 46\n    return Spacebars.call(view.lookup(\"profileDoc\"));                                                                // 47\n  }, function() {                                                                                                    // 48\n    return [ \"\\n    \", Blaze._TemplateWith(function() {                                                              // 49\n      return {                                                                                                       // 50\n        collection: Spacebars.call(\"MusicProfiles\"),                                                                 // 51\n        doc: Spacebars.call(view.lookup(\"profileDoc\")),                                                              // 52\n        id: Spacebars.call(\"makeUpdateProfileForm\"),                                                                 // 53\n        type: Spacebars.call(\"update\")                                                                               // 54\n      };                                                                                                             // 55\n    }, function() {                                                                                                  // 56\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                    // 57\n    }), \"\\n  \" ];                                                                                                    // 58\n  }, function() {                                                                                                    // 59\n    return [ \"\\n    \", Blaze._TemplateWith(function() {                                                              // 60\n      return {                                                                                                       // 61\n        collection: Spacebars.call(\"MusicProfiles\"),                                                                 // 62\n        id: Spacebars.call(\"makeUpdateProfileForm\"),                                                                 // 63\n        type: Spacebars.call(\"insert\")                                                                               // 64\n      };                                                                                                             // 65\n    }, function() {                                                                                                  // 66\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                    // 67\n    }), \"\\n  \" ];                                                                                                    // 68\n  });                                                                                                                // 69\n}));                                                                                                                 // 70\n                                                                                                                     // 71\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.HomeLayout.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// client/layouts/template.HomeLayout.js                                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"HomeLayout\");                                                                                  // 2\nTemplate[\"HomeLayout\"] = new Template(\"Template.HomeLayout\", (function() {                                           // 3\n  var view = this;                                                                                                   // 4\n  return [ HTML.Raw(\"<header>\\n        <h1> Home </h1>\\n    </header>\\n    \"), HTML.MAIN(\"\\n    \t\", Spacebars.include(view.lookupTemplate(\"search\")), \"\\n\\n    \") ];\n}));                                                                                                                 // 6\n                                                                                                                     // 7\nTemplate.__checkName(\"search\");                                                                                      // 8\nTemplate[\"search\"] = new Template(\"Template.search\", (function() {                                                   // 9\n  var view = this;                                                                                                   // 10\n  return [ Blaze._TemplateWith(function() {                                                                          // 11\n    return {                                                                                                         // 12\n      index: Spacebars.call(view.lookup(\"accountsIndex\"))                                                            // 13\n    };                                                                                                               // 14\n  }, function() {                                                                                                    // 15\n    return Spacebars.include(function() {                                                                            // 16\n      return Spacebars.call(Spacebars.dot(view.lookup(\"EasySearch\"), \"Input\"));                                      // 17\n    });                                                                                                              // 18\n  }), \"\\n\\n  \", HTML.UL(\"\\n    \", Blaze._TemplateWith(function() {                                                   // 19\n    return {                                                                                                         // 20\n      index: Spacebars.call(view.lookup(\"accountsIndex\"))                                                            // 21\n    };                                                                                                               // 22\n  }, function() {                                                                                                    // 23\n    return Spacebars.include(function() {                                                                            // 24\n      return Spacebars.call(Spacebars.dot(view.lookup(\"EasySearch\"), \"Each\"));                                       // 25\n    }, function() {                                                                                                  // 26\n      return [ \"\\n      \", HTML.LI(\"Accompanist Name: \", Blaze.View(\"lookup:name\", function() {                      // 27\n        return Spacebars.mustache(view.lookup(\"name\"));                                                              // 28\n      })), \"\\n    \" ];                                                                                               // 29\n    });                                                                                                              // 30\n  }), \"\\n  \"), \"\\n\\n  \", Blaze._TemplateWith(function() {                                                            // 31\n    return {                                                                                                         // 32\n      index: Spacebars.call(view.lookup(\"accountsIndex\"))                                                            // 33\n    };                                                                                                               // 34\n  }, function() {                                                                                                    // 35\n    return Spacebars.include(function() {                                                                            // 36\n      return Spacebars.call(Spacebars.dot(view.lookup(\"EasySearch\"), \"LoadMore\"));                                   // 37\n    });                                                                                                              // 38\n  }), \"\\n\\n  \", Blaze._TemplateWith(function() {                                                                     // 39\n    return {                                                                                                         // 40\n      index: Spacebars.call(view.lookup(\"accountsIndex\"))                                                            // 41\n    };                                                                                                               // 42\n  }, function() {                                                                                                    // 43\n    return Spacebars.include(function() {                                                                            // 44\n      return Spacebars.call(Spacebars.dot(view.lookup(\"EasySearch\"), \"IfNoResults\"));                                // 45\n    }, function() {                                                                                                  // 46\n      return [ \"\\n    \", HTML.DIV({                                                                                  // 47\n        \"class\": \"no-results\"                                                                                        // 48\n      }, \"No results found!\"), \"\\n  \" ];                                                                             // 49\n    });                                                                                                              // 50\n  }) ];                                                                                                              // 51\n}));                                                                                                                 // 52\n                                                                                                                     // 53\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.MainLayout.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// client/layouts/template.MainLayout.js                                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"MainLayout\");                                                                                  // 2\nTemplate[\"MainLayout\"] = new Template(\"Template.MainLayout\", (function() {                                           // 3\n  var view = this;                                                                                                   // 4\n  return [ HTML.Raw('<!-- Latest compiled and minified CSS -->\\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\" crossorigin=\"anonymous\">\\n\\n<!-- Optional theme -->\\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css\" integrity=\"sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r\" crossorigin=\"anonymous\">\\n\\n<!-- Latest compiled and minified JavaScript -->\\n'), HTML.SCRIPT({\n    src: \"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\",                                      // 6\n    integrity: \"sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS\",                            // 7\n    crossorigin: \"anonymous\"                                                                                         // 8\n  }), HTML.Raw('\\n\\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\\n\\n\t'), HTML.MAIN(\"\\n    \t\", HTML.NAV({\n    \"class\": \"navbar navbar-default\"                                                                                 // 10\n  }, \"\\n\t\t  \", HTML.DIV({                                                                                            // 11\n    \"class\": \"container-fluid\"                                                                                       // 12\n  }, \"\\n\t\t  \t\", HTML.Raw('<div class=\"navbar-header\">\\n\t\t      <a class=\"navbar-brand\" href=\"/\">Empanist</a>\\n\t\t    </div>'), \"\\n\t\t    \", HTML.Raw(\"<!-- Collect the nav links, forms, and other content for toggling -->\"), \"\\n\t\t    \", HTML.DIV({\n    \"class\": \"collapse navbar-collapse\",                                                                             // 14\n    id: \"bs-example-navbar-collapse-1\"                                                                               // 15\n  }, \"\\n\\n\t\t      \", HTML.UL({                                                                                       // 16\n    \"class\": \"nav navbar-nav navbar-right\"                                                                           // 17\n  }, \"\\n\t\t        \", HTML.LI(\" \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \" \"), \"\\n\\n\t\t\t\t\t\t\", HTML.Raw(\"<!-- If the user already created a profile -->\"), \"\\n\t\t\t\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"profileDoc\"));                                                                // 19\n  }, function() {                                                                                                    // 20\n    return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                           // 21\n      href: \"/profile\"                                                                                               // 22\n    }, \"View Profile\")), \"\\n\t\t\t\t\t\t\" ];                                                                               // 23\n  }, function() {                                                                                                    // 24\n    return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                           // 25\n      href: \"/addinfo\"                                                                                               // 26\n    }, \"Add Profile\")), \"\\n\t\t\t\t\t\t\" ];                                                                                // 27\n  }), \"\\n\t\t\t\t\t\t\", Blaze.If(function() {                                                                              // 28\n    return Spacebars.call(view.lookup(\"accompanistProfileDoc\"));                                                     // 29\n  }, function() {                                                                                                    // 30\n    return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                           // 31\n      href: \"/newaccomp\"                                                                                             // 32\n    }, \"Edit Accompanist Profile\")), \"\\n\t\t\t\t\t\t\", HTML.Comment(\" FILL THIS \"), \"\\n\t\t\t\t\t\t\" ];                          // 33\n  }, function() {                                                                                                    // 34\n    return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                           // 35\n      href: \"/newaccomp\"                                                                                             // 36\n    }, \"Become an Accompanist\")), \"\\n\t\t\t\t\t\t\" ];                                                                      // 37\n  }), \"\\n\t\t      \"), \"\\n\t\t    \"), HTML.Raw(\"<!-- /.navbar-collapse -->\"), \"\\n\t\t  \"), HTML.Raw(\"<!-- /.container-fluid -->\"), \"\\n\t\t\"), \"\\n    \", HTML.DIV({\n    \"class\": \"main_margin\"                                                                                           // 39\n  }, \"\\n   \t\t\", Blaze._TemplateWith(function() {                                                                     // 40\n    return {                                                                                                         // 41\n      template: Spacebars.call(view.lookup(\"main\"))                                                                  // 42\n    };                                                                                                               // 43\n  }, function() {                                                                                                    // 44\n    return Spacebars.include(function() {                                                                            // 45\n      return Spacebars.call(Template.__dynamic);                                                                     // 46\n    });                                                                                                              // 47\n  }), \"\\n   \t\"), \"\\n  \") ];                                                                                          // 48\n}));                                                                                                                 // 49\n                                                                                                                     // 50\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.NewAccompLayout.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// client/layouts/template.NewAccompLayout.js                                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"NewAccompLayout\");                                                                             // 2\nTemplate[\"NewAccompLayout\"] = new Template(\"Template.NewAccompLayout\", (function() {                                 // 3\n  var view = this;                                                                                                   // 4\n  return [ HTML.Raw(\"<header>\\n        <h1> Signup to Become an Accompanist </h1>\\n    </header>\\n    \"), HTML.MAIN(\"\\n      \", Spacebars.include(view.lookupTemplate(\"makeUpdateAccompForm\")), \"\\n    \") ];\n}));                                                                                                                 // 6\n                                                                                                                     // 7\nTemplate.__checkName(\"makeUpdateAccompForm\");                                                                        // 8\nTemplate[\"makeUpdateAccompForm\"] = new Template(\"Template.makeUpdateAccompForm\", (function() {                       // 9\n  var view = this;                                                                                                   // 10\n  return Blaze.If(function() {                                                                                       // 11\n    return Spacebars.call(view.lookup(\"accompanistProfileDoc\"));                                                     // 12\n  }, function() {                                                                                                    // 13\n    return [ \"\\n    \", Blaze._TemplateWith(function() {                                                              // 14\n      return {                                                                                                       // 15\n        collection: Spacebars.call(\"AccompanistProfile\"),                                                            // 16\n        doc: Spacebars.call(view.lookup(\"accompanistProfileDoc\")),                                                   // 17\n        id: Spacebars.call(\"insertAccompProfileForm\"),                                                               // 18\n        type: Spacebars.call(\"update\")                                                                               // 19\n      };                                                                                                             // 20\n    }, function() {                                                                                                  // 21\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                    // 22\n    }), \"\\n  \" ];                                                                                                    // 23\n  }, function() {                                                                                                    // 24\n    return [ \"\\n    \", Blaze._TemplateWith(function() {                                                              // 25\n      return {                                                                                                       // 26\n        collection: Spacebars.call(\"AccompanistProfile\"),                                                            // 27\n        id: Spacebars.call(\"insertAccompProfileForm\"),                                                               // 28\n        type: Spacebars.call(\"insert\")                                                                               // 29\n      };                                                                                                             // 30\n    }, function() {                                                                                                  // 31\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                    // 32\n    }), \"\\n  \" ];                                                                                                    // 33\n  });                                                                                                                // 34\n}));                                                                                                                 // 35\n                                                                                                                     // 36\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.ProfileLayout.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// client/layouts/template.ProfileLayout.js                                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"ProfileLayout\");                                                                               // 2\nTemplate[\"ProfileLayout\"] = new Template(\"Template.ProfileLayout\", (function() {                                     // 3\n  var view = this;                                                                                                   // 4\n  return [ HTML.Raw(\"<header>\\n        <h1> Profile </h1>\\n    </header>\\n    \"), HTML.MAIN(\"\\n      \", HTML.Raw(\"<br>\"), \"\\n      \", HTML.Raw('<button><a href=\"/addinfo\">Edit Profile</a></button>'), \"\\n      \", HTML.Raw(\"<br>\"), HTML.Raw(\"<br>\"), \"\\n    \t\", HTML.SECTION({\n    \"class\": \"myprofile\"                                                                                             // 6\n  }, \"\\n\t\t\t\", HTML.Raw(\"<!-- List all user's accounts -->\"), \"\\n\t\t\t\", Blaze.Each(function() {                        // 7\n    return Spacebars.call(view.lookup(\"myprofile\"));                                                                 // 8\n  }, function() {                                                                                                    // 9\n    return [ \"\\n\t\t\t\t\", HTML.H5(\"Instruments Mastered: \", Blaze.View(\"lookup:instrument\", function() {                // 10\n      return Spacebars.mustache(view.lookup(\"instrument\"));                                                          // 11\n    })), \"\\n\t\t\t\t\", HTML.H5(\"Years Played: \", Blaze.View(\"lookup:yearsPlayed\", function() {                           // 12\n      return Spacebars.mustache(view.lookup(\"yearsPlayed\"));                                                         // 13\n    })), \"\\n\t\t\t\t\", HTML.HR(), \"\\n\t\t\t\t\", HTML.H5(\"Awards: \"), \"\\n\t\t\t\t\t\", Blaze.Each(function() {                      // 14\n      return Spacebars.call(view.lookup(\"awards\"));                                                                  // 15\n    }, function() {                                                                                                  // 16\n      return [ \"\\n\t\t\t\t\t\tName: \", Blaze.View(\"lookup:name\", function() {                                              // 17\n        return Spacebars.mustache(view.lookup(\"name\"));                                                              // 18\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tDate: \", Blaze.View(\"lookup:date\", function() {                                        // 19\n        return Spacebars.mustache(view.lookup(\"date\"));                                                              // 20\n      }), HTML.BR(), HTML.BR(), \"\\n\t\t\t\t\t\" ];                                                                         // 21\n    }), \"\\n\t\t\t\t\", HTML.HR(), \"\\n\t\t\t\t\", HTML.H5(\"Competitions: \"), \"\\n\t\t\t\t\t\", Blaze.Each(function() {                 // 22\n      return Spacebars.call(view.lookup(\"competitions\"));                                                            // 23\n    }, function() {                                                                                                  // 24\n      return [ \"\\n\t\t\t\t\t\tName: \", Blaze.View(\"lookup:name\", function() {                                              // 25\n        return Spacebars.mustache(view.lookup(\"name\"));                                                              // 26\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tDate: \", Blaze.View(\"lookup:date\", function() {                                        // 27\n        return Spacebars.mustache(view.lookup(\"date\"));                                                              // 28\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tAward: \", Blaze.View(\"lookup:award\", function() {                                      // 29\n        return Spacebars.mustache(view.lookup(\"award\"));                                                             // 30\n      }), HTML.BR(), HTML.BR(), \"\\n\t\t\t\t\t\" ];                                                                         // 31\n    }), \"\\n\t\t\t\t\", HTML.HR(), \"\\n\t\t\t\t\", HTML.H5(\"Music Programs: \"), \"\\n\t\t\t\t\t\", Blaze.Each(function() {               // 32\n      return Spacebars.call(view.lookup(\"musicPrograms\"));                                                           // 33\n    }, function() {                                                                                                  // 34\n      return [ \"\\n\t\t\t\t\t\tInstitution Name: \", Blaze.View(\"lookup:instName\", function() {                              // 35\n        return Spacebars.mustache(view.lookup(\"instName\"));                                                          // 36\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tProgram Name: \", Blaze.View(\"lookup:programName\", function() {                         // 37\n        return Spacebars.mustache(view.lookup(\"programName\"));                                                       // 38\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tStart Date: \", Blaze.View(\"lookup:startDate\", function() {                             // 39\n        return Spacebars.mustache(view.lookup(\"startDate\"));                                                         // 40\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tEnd Date: \", Blaze.View(\"lookup:endDate\", function() {                                 // 41\n        return Spacebars.mustache(view.lookup(\"endDate\"));                                                           // 42\n      }), HTML.BR(), HTML.BR(), \"\\n\t\t\t\t\t\" ];                                                                         // 43\n    }), \"\\n\t\t\t\t\", HTML.HR(), \"\\n\t\t\t\t\", HTML.H5(\"Orchestra's Participated in: \"), \"\\n\t\t\t\t\t\", Blaze.Each(function() {  // 44\n      return Spacebars.call(view.lookup(\"orchestras\"));                                                              // 45\n    }, function() {                                                                                                  // 46\n      return [ \"\\n\t\t\t\t\t\tName: \", Blaze.View(\"lookup:name\", function() {                                              // 47\n        return Spacebars.mustache(view.lookup(\"name\"));                                                              // 48\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tPosition: \", Blaze.View(\"lookup:position\", function() {                                // 49\n        return Spacebars.mustache(view.lookup(\"position\"));                                                          // 50\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tStart Date: \", Blaze.View(\"lookup:startDate\", function() {                             // 51\n        return Spacebars.mustache(view.lookup(\"startDate\"));                                                         // 52\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tEnd Date: \", Blaze.View(\"lookup:endDate\", function() {                                 // 53\n        return Spacebars.mustache(view.lookup(\"endDate\"));                                                           // 54\n      }), HTML.BR(), HTML.BR(), \"\\n\t\t\t\t\t\" ];                                                                         // 55\n    }), \"\\n\t\t\t\" ];                                                                                                   // 56\n  }), \"\\n\t\t\"), \"\\n\\n    \") ];                                                                                        // 57\n}));                                                                                                                 // 58\n                                                                                                                     // 59\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.ResultsLayout.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// client/layouts/template.ResultsLayout.js                                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"ResultsLayout\");                                                                               // 2\nTemplate[\"ResultsLayout\"] = new Template(\"Template.ResultsLayout\", (function() {                                     // 3\n  var view = this;                                                                                                   // 4\n  return HTML.Raw(\"<header>\\n        <h1> Search Results </h1>\\n    </header>\\n    <main>\\n\\n    </main>\");          // 5\n}));                                                                                                                 // 6\n                                                                                                                     // 7\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"main.js\":[\"../collections/musicProfile.js\",\"../collections/accompanistProfile.js\",\"../collections/account.js\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// client/main.js                                                                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _musicProfile = require('../collections/musicProfile.js');                                                       // 1\n                                                                                                                     //\nvar _accompanistProfile = require('../collections/accompanistProfile.js');                                           // 2\n                                                                                                                     //\nvar _account = require('../collections/account.js');                                                                 // 3\n                                                                                                                     //\nwindow.MusicProfiles = _musicProfile.MusicProfiles;                                                                  // 5\nwindow.AccompanistProfile = _accompanistProfile.AccompanistProfile;                                                  // 6\nwindow.Accounts = _account.Accounts;                                                                                 // 7\n                                                                                                                     //\n// Global Template Helpers                                                                                           //\n                                                                                                                     //\nTemplate.registerHelper('profileDoc', function () {                                                                  // 11\n  event.preventDefault();                                                                                            // 12\n  return _musicProfile.MusicProfiles.findOne({ userId: Meteor.userId() });                                           // 13\n});                                                                                                                  //\n                                                                                                                     //\nTemplate.registerHelper('accountDoc', function () {                                                                  // 16\n  event.preventDefault();                                                                                            // 17\n  return _account.Accounts.findOne({ _id: Meteor.userId() });                                                        // 18\n});                                                                                                                  //\n                                                                                                                     //\nTemplate.registerHelper('accompanistProfileDoc', function () {                                                       // 21\n  event.preventDefault();                                                                                            // 22\n  return _accompanistProfile.AccompanistProfile.findOne({ userId: Meteor.userId() });                                // 23\n});                                                                                                                  //\n                                                                                                                     //\n// Local Template Helpers                                                                                            //\n                                                                                                                     //\nTemplate.makeUpdateAccompForm.helpers({                                                                              // 28\n  NewAccompSchema: function () {                                                                                     // 29\n    function NewAccompSchema() {                                                                                     // 29\n      event.preventDefault();                                                                                        // 30\n      return Schema.AccompanistProfileSchema;                                                                        // 31\n    }                                                                                                                //\n                                                                                                                     //\n    return NewAccompSchema;                                                                                          //\n  }()                                                                                                                //\n});                                                                                                                  //\n                                                                                                                     //\n// add info from account.js and make it work for accompanist search results as well                                  //\nTemplate.ProfileLayout.helpers({                                                                                     // 36\n  myprofile: function () {                                                                                           // 37\n    function myprofile() {                                                                                           // 37\n      return _musicProfile.MusicProfiles.find({ userId: Meteor.userId() });                                          // 38\n    }                                                                                                                //\n                                                                                                                     //\n    return myprofile;                                                                                                //\n  }()                                                                                                                //\n});                                                                                                                  //\n                                                                                                                     //\n// Event Listeners                                                                                                   //\n// Template.HomeLayout.events({                                                                                      //\n//     'click submit': function () {                                                                                 //\n//       event.preventDefault();                                                                                     //\n                                                                                                                     //\n//      // const account_number = event.target;                                                                      //\n//       // const text = target.text.value;                                                                          //\n//     // deposit money                                                                                              //\n//      // accounts.update(account_number: account_number, {$inc: {balance: amount}});                               //\n                                                                                                                     //\n//       //const city =;                                                                                             //\n//       //const time_pref =;                                                                                        //\n//       //const session_location=;                                                                                  //\n                                                                                                                     //\n//       results: ()=> {                                                                                             //\n//     \treturn AccompanistProfile.find({});                                                                          //\n//   }                                                                                                               //\n//     }                                                                                                             //\n//   });                                                                                                             //\n                                                                                                                     //\n// Trial search                                                                                                      //\n                                                                                                                     //\n// Template.HomeLayout.helpers({                                                                                     //\n//   accountsIndex: function () {                                                                                    //\n//   \treturn Accounts.find();                                                                                        //\n//   }                                                                                                               //\n// });                                                                                                               //\n                                                                                                                     //\nTemplate.search.helpers({                                                                                            // 70\n  accompanistIndex: function () {                                                                                    // 71\n    function accompanistIndex() {                                                                                    // 71\n      return AccompanistIndex;                                                                                       //\n    }                                                                                                                //\n                                                                                                                     //\n    return accompanistIndex;                                                                                         //\n  }() // instanceof EasySearch.Index                                                                                 //\n});                                                                                                                  // 70\n                                                                                                                     //\n// On Client                                                                                                         //\nTracker.autorun(function () {                                                                                        // 75\n  var cursor = AccompanistIndex.search('Marie'); // search all docs that contain \"Marie\" in the name or score field  // 76\n                                                                                                                     //\n  //console.log(cursor.fetch()); // log found documents with default search limit                                    //\n  //console.log(cursor.count()); // log count of all found documents                                                 //\n});                                                                                                                  // 75\n                                                                                                                     //\n// For Debugging                                                                                                     //\nSimpleSchema.debug = true;                                                                                           // 84\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"collections\":{\"accompanistProfile.js\":[\"meteor/mongo\",function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// collections/accompanistProfile.js                                                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.__esModule = true;                                                                                           //\nexports.AccompanistProfile = undefined;                                                                              //\n                                                                                                                     //\nvar _mongo = require('meteor/mongo');                                                                                // 1\n                                                                                                                     //\nvar AccompanistProfile = exports.AccompanistProfile = new _mongo.Mongo.Collection('accompanistProfile');             // 3\n                                                                                                                     //\n// Searching                                                                                                         //\nAccompanistIndex = new EasySearch.Index({                                                                            // 6\n  collection: AccompanistProfile,                                                                                    // 7\n  fields: ['charge'],                                                                                                // 8\n  engine: new EasySearch.Minimongo()                                                                                 // 9\n});                                                                                                                  //\n                                                                                                                     //\nAccompanistProfileSchema = new SimpleSchema({                                                                        // 12\n  userId: {                                                                                                          // 13\n    type: String,                                                                                                    // 14\n    label: \"User ID\",                                                                                                // 15\n    autoform: {                                                                                                      // 16\n      type: \"hidden\"                                                                                                 // 17\n    },                                                                                                               //\n    autoValue: function () {                                                                                         // 19\n      function autoValue() {                                                                                         // 19\n        return this.userId;                                                                                          // 20\n      }                                                                                                              //\n                                                                                                                     //\n      return autoValue;                                                                                              //\n    }()                                                                                                              //\n  },                                                                                                                 //\n                                                                                                                     //\n  repertoire: {                                                                                                      // 24\n    type: [String],                                                                                                  // 25\n    label: \"Repertoire\"                                                                                              // 26\n  },                                                                                                                 //\n                                                                                                                     //\n  charge: {                                                                                                          // 29\n    type: Number,                                                                                                    // 30\n    label: \"Hourly Charge\",                                                                                          // 31\n    autoform: {                                                                                                      // 32\n      options: [{ label: \"$20\", value: 20 }, { label: \"$40\", value: 40 }, { label: \"$60\", value: 60 }]               // 33\n    }                                                                                                                //\n  },                                                                                                                 //\n                                                                                                                     //\n  working_hours: {                                                                                                   // 41\n    type: [String],                                                                                                  // 42\n    //noselect:true,                                                                                                 //\n    label: \"Times you prefer working\",                                                                               // 44\n    autoform: {                                                                                                      // 45\n      type: \"select-checkbox-inline\",                                                                                // 46\n      options: [{ label: \"Morning (8am - 12pm)\", value: \"morning\" }, { label: \"Afternoon (12pm - 6pm)\", value: \"afternoon\" }, { label: \"Night (6pm - 11pm)\", value: \"night\" }]\n    }                                                                                                                //\n  },                                                                                                                 //\n                                                                                                                     //\n  working_days: {                                                                                                    // 55\n    type: [String],                                                                                                  // 56\n    //noselect:true,                                                                                                 //\n    label: \"Days you want to accompany\",                                                                             // 58\n    autoform: {                                                                                                      // 59\n      type: \"select-checkbox-inline\",                                                                                // 60\n      options: [{ label: \"Monday\", value: \"monday\" }, { label: \"Tuesday\", value: \"tuesday\" }, { label: \"Wednesday\", value: \"wednesday\" }, { label: \"Thursday\", value: \"thursday\" }, { label: \"Friday\", value: \"friday\" }, { label: \"Saturday\", value: \"saturday\" }, { label: \"Sunday\", value: \"sunday\" }]\n    }                                                                                                                //\n  },                                                                                                                 //\n                                                                                                                     //\n  session_location: {                                                                                                // 73\n    type: String,                                                                                                    // 74\n    label: \"Session's Location\",                                                                                     // 75\n    autoform: {                                                                                                      // 76\n      options: [{ label: \"My Place\", value: \"My Place\" }, { label: \"Student's Place\", value: \"Student's Place\" }, { label: \"Doesn't matter\", value: \"Doesn't matter\" }]\n    }                                                                                                                //\n  },                                                                                                                 //\n                                                                                                                     //\n  // make this show up only if the accomp said he's willing to give sessoins in his place                            //\n  mylocation: {                                                                                                      // 86\n    type: String,                                                                                                    // 87\n    label: \"My location\",                                                                                            // 88\n    optional: true                                                                                                   // 89\n  },                                                                                                                 //\n                                                                                                                     //\n  one_liner: {                                                                                                       // 92\n    type: String,                                                                                                    // 93\n    label: \"Describe yourself in one sentence\"                                                                       // 94\n  }                                                                                                                  //\n                                                                                                                     //\n});                                                                                                                  //\n                                                                                                                     //\nAccompanistProfile.attachSchema(AccompanistProfileSchema);                                                           // 100\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"account.js\":[\"meteor/mongo\",\"./accompanistProfile.js\",function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// collections/account.js                                                                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.__esModule = true;                                                                                           //\nexports.Accounts = undefined;                                                                                        //\n                                                                                                                     //\nvar _mongo = require('meteor/mongo');                                                                                // 1\n                                                                                                                     //\nvar _accompanistProfile = require('./accompanistProfile.js');                                                        // 2\n                                                                                                                     //\nvar Accounts = exports.Accounts = new _mongo.Mongo.Collection('accounts');                                           // 4\n                                                                                                                     //\nAccounts.insert({ name: \"David\" });                                                                                  // 6\n                                                                                                                     //\n// Searching                                                                                                         //\nAccountsIndex = new EasySearch.Index({                                                                               // 9\n  collection: Accounts,                                                                                              // 10\n  fields: ['name'],                                                                                                  // 11\n  engine: new EasySearch.Minimongo()                                                                                 // 12\n});                                                                                                                  //\n                                                                                                                     //\nPaymentMethodSchema = new SimpleSchema({                                                                             // 15\n  paymentType: {                                                                                                     // 16\n    type: String,                                                                                                    // 17\n    label: \"Payment Type\"                                                                                            // 18\n  }                                                                                                                  //\n});                                                                                                                  //\n                                                                                                                     //\nAccountSchema = new SimpleSchema({                                                                                   // 22\n  name: {                                                                                                            // 23\n    type: String,                                                                                                    // 24\n    label: \"Name\"                                                                                                    // 25\n  },                                                                                                                 //\n                                                                                                                     //\n  birthDate: {                                                                                                       // 28\n    type: Date,                                                                                                      // 29\n    label: \"Date of Birth\"                                                                                           // 30\n  },                                                                                                                 //\n                                                                                                                     //\n  phone: {                                                                                                           // 33\n    type: String,                                                                                                    // 34\n    label: \"Phone Number\"                                                                                            // 35\n  },                                                                                                                 //\n                                                                                                                     //\n  affiliation: {                                                                                                     // 38\n    type: String,                                                                                                    // 39\n    label: \"Affiliation\"                                                                                             // 40\n  },                                                                                                                 //\n                                                                                                                     //\n  accompanistProfile: {                                                                                              // 43\n    type: [_accompanistProfile.AccompanistProfileSchema],                                                            // 44\n    label: \"Accompanist Profile\",                                                                                    // 45\n    optional: true                                                                                                   // 46\n  }                                                                                                                  //\n                                                                                                                     //\n});                                                                                                                  //\n                                                                                                                     //\nAccounts.attachSchema(AccountSchema);                                                                                // 51\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"musicProfile.js\":[\"meteor/mongo\",function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// collections/musicProfile.js                                                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.__esModule = true;                                                                                           //\nexports.MusicProfiles = undefined;                                                                                   //\n                                                                                                                     //\nvar _mongo = require('meteor/mongo');                                                                                // 1\n                                                                                                                     //\nvar MusicProfiles = exports.MusicProfiles = new _mongo.Mongo.Collection('musicProfiles');                            // 3\n                                                                                                                     //\nOrchestraSchema = new SimpleSchema({                                                                                 // 5\n  name: {                                                                                                            // 6\n    type: String,                                                                                                    // 7\n    label: \"Orchestra Name\"                                                                                          // 8\n  },                                                                                                                 //\n                                                                                                                     //\n  position: {                                                                                                        // 11\n    type: String,                                                                                                    // 12\n    label: \"Position in Orchestra\"                                                                                   // 13\n  },                                                                                                                 //\n                                                                                                                     //\n  startDate: {                                                                                                       // 16\n    type: Date,                                                                                                      // 17\n    label: \"Beginning Date\"                                                                                          // 18\n  },                                                                                                                 //\n                                                                                                                     //\n  endDate: {                                                                                                         // 21\n    type: Date,                                                                                                      // 22\n    label: \"Ending Date\"                                                                                             // 23\n  }                                                                                                                  //\n});                                                                                                                  //\n                                                                                                                     //\nAwardSchema = new SimpleSchema({                                                                                     // 27\n  name: {                                                                                                            // 28\n    type: String,                                                                                                    // 29\n    label: \"Award Name\"                                                                                              // 30\n  },                                                                                                                 //\n  date: {                                                                                                            // 32\n    type: Date,                                                                                                      // 33\n    label: \"Date Received\"                                                                                           // 34\n  }                                                                                                                  //\n});                                                                                                                  //\n                                                                                                                     //\nCompetitionSchema = new SimpleSchema({                                                                               // 38\n  name: {                                                                                                            // 39\n    type: String,                                                                                                    // 40\n    label: \"Competition Name\"                                                                                        // 41\n  },                                                                                                                 //\n  date: {                                                                                                            // 43\n    type: Date,                                                                                                      // 44\n    label: \"Competition Date\"                                                                                        // 45\n  },                                                                                                                 //\n  award: {                                                                                                           // 47\n    type: String,                                                                                                    // 48\n    label: \"Award Type\"                                                                                              // 49\n  }                                                                                                                  //\n});                                                                                                                  //\n                                                                                                                     //\nMusicProgramSchema = new SimpleSchema({                                                                              // 53\n  instName: {                                                                                                        // 54\n    type: String,                                                                                                    // 55\n    label: \"Institution Name\"                                                                                        // 56\n  },                                                                                                                 //\n                                                                                                                     //\n  programName: {                                                                                                     // 59\n    type: String,                                                                                                    // 60\n    label: \"Program Name\"                                                                                            // 61\n  },                                                                                                                 //\n                                                                                                                     //\n  startDate: {                                                                                                       // 64\n    type: Date,                                                                                                      // 65\n    label: \"Start Date\"                                                                                              // 66\n  },                                                                                                                 //\n                                                                                                                     //\n  endDate: {                                                                                                         // 69\n    type: Date,                                                                                                      // 70\n    label: \"End Date\"                                                                                                // 71\n  }                                                                                                                  //\n});                                                                                                                  //\n                                                                                                                     //\nMusicProfileSchema = new SimpleSchema({                                                                              // 77\n  userId: {                                                                                                          // 78\n    type: String,                                                                                                    // 79\n    label: \"User ID\",                                                                                                // 80\n    autoform: {                                                                                                      // 81\n      type: \"hidden\"                                                                                                 // 82\n    },                                                                                                               //\n    autoValue: function () {                                                                                         // 84\n      function autoValue() {                                                                                         // 84\n        return this.userId;                                                                                          // 85\n      }                                                                                                              //\n                                                                                                                     //\n      return autoValue;                                                                                              //\n    }()                                                                                                              //\n  },                                                                                                                 //\n                                                                                                                     //\n  instrument: {                                                                                                      // 89\n    type: String,                                                                                                    // 90\n    label: \"Instrument Played\"                                                                                       // 91\n  },                                                                                                                 //\n                                                                                                                     //\n  yearsPlayed: {                                                                                                     // 94\n    type: String,                                                                                                    // 95\n    label: \"Years Played\"                                                                                            // 96\n  },                                                                                                                 //\n                                                                                                                     //\n  awards: {                                                                                                          // 99\n    type: [AwardSchema],                                                                                             // 100\n    label: \"Awards Won\",                                                                                             // 101\n    optional: true                                                                                                   // 102\n  },                                                                                                                 //\n                                                                                                                     //\n  competitions: {                                                                                                    // 105\n    type: [CompetitionSchema],                                                                                       // 106\n    label: \"Competitions Participated in\",                                                                           // 107\n    optional: true                                                                                                   // 108\n  },                                                                                                                 //\n                                                                                                                     //\n  musicPrograms: {                                                                                                   // 111\n    type: [MusicProgramSchema],                                                                                      // 112\n    label: \"Music Programs Participated in\",                                                                         // 113\n    optional: true                                                                                                   // 114\n  },                                                                                                                 //\n                                                                                                                     //\n  orchestras: {                                                                                                      // 117\n    type: [OrchestraSchema],                                                                                         // 118\n    label: \"Orchestras Played At\",                                                                                   // 119\n    optional: true                                                                                                   // 120\n  }                                                                                                                  //\n                                                                                                                     //\n});                                                                                                                  //\n                                                                                                                     //\nMusicProfiles.attachSchema(MusicProfileSchema);                                                                      // 127\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"libs\":{\"routes.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// libs/routes.js                                                                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nFlowRouter.route('/', {                                                                                              // 1\n    name: 'home',                                                                                                    // 2\n    action: function () {                                                                                            // 3\n        function action() {                                                                                          //\n            BlazeLayout.render('MainLayout', { main: 'HomeLayout' });                                                // 4\n        }                                                                                                            //\n                                                                                                                     //\n        return action;                                                                                               //\n    }()                                                                                                              //\n});                                                                                                                  //\n                                                                                                                     //\nFlowRouter.route('/addinfo', {                                                                                       // 8\n    name: 'addInfo',                                                                                                 // 9\n    action: function () {                                                                                            // 10\n        function action() {                                                                                          //\n            BlazeLayout.render('MainLayout', { main: 'AddInfoLayout' });                                             // 11\n        }                                                                                                            //\n                                                                                                                     //\n        return action;                                                                                               //\n    }()                                                                                                              //\n});                                                                                                                  //\n                                                                                                                     //\nFlowRouter.route('/newaccomp', {                                                                                     // 15\n    name: 'NewAccompLayout',                                                                                         // 16\n    action: function () {                                                                                            // 17\n        function action() {                                                                                          //\n            BlazeLayout.render('MainLayout', { main: 'NewAccompLayout' });                                           // 18\n        }                                                                                                            //\n                                                                                                                     //\n        return action;                                                                                               //\n    }()                                                                                                              //\n});                                                                                                                  //\n                                                                                                                     //\nFlowRouter.route('/results', {                                                                                       // 22\n    name: 'results',                                                                                                 // 23\n    action: function () {                                                                                            // 24\n        function action() {                                                                                          //\n            BlazeLayout.render('MainLayout', { main: 'ResultsLayout' });                                             // 25\n        }                                                                                                            //\n                                                                                                                     //\n        return action;                                                                                               //\n    }()                                                                                                              //\n});                                                                                                                  //\n                                                                                                                     //\nFlowRouter.route('/profile', {                                                                                       // 29\n    name: 'profile',                                                                                                 // 30\n    action: function () {                                                                                            // 31\n        function action() {                                                                                          //\n            BlazeLayout.render('MainLayout', { main: 'ProfileLayout' });                                             // 32\n        }                                                                                                            //\n                                                                                                                     //\n        return action;                                                                                               //\n    }()                                                                                                              //\n});                                                                                                                  //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/layouts/template.AddInfoLayout.js\");\nrequire(\"./client/layouts/template.HomeLayout.js\");\nrequire(\"./client/layouts/template.MainLayout.js\");\nrequire(\"./client/layouts/template.NewAccompLayout.js\");\nrequire(\"./client/layouts/template.ProfileLayout.js\");\nrequire(\"./client/layouts/template.ResultsLayout.js\");\nrequire(\"./collections/accompanistProfile.js\");\nrequire(\"./collections/account.js\");\nrequire(\"./collections/musicProfile.js\");\nrequire(\"./libs/routes.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/layouts/template.AddInfoLayout.js","/client/layouts/template.HomeLayout.js","/client/layouts/template.MainLayout.js","/client/layouts/template.NewAccompLayout.js","/client/layouts/template.ProfileLayout.js","/client/layouts/template.ResultsLayout.js","/client/main.js","/collections/accompanistProfile.js","/collections/account.js","/collections/musicProfile.js","/libs/routes.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0H;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0H;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0H;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0H;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0H;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA,yH;;;;;;;;;;;ACNA;;AACA;;AACA;;AAEA,OAAO,aAAP;AACA,OAAO,kBAAP;AACA,OAAO,QAAP;;;;AAIA,SAAS,cAAT,CAAyB,YAAzB,EAAuC,YAAM;AACzC,QAAM,cAAN,GADyC;AAEzC,SAAO,4BAAc,OAAd,CAAsB,EAAE,QAAQ,OAAO,MAAP,EAAR,EAAxB,CAAP,CAFyC;CAAN,CAAvC;;AAKA,SAAS,cAAT,CAAyB,YAAzB,EAAuC,YAAM;AAC1C,QAAM,cAAN,GAD0C;AAEzC,SAAO,kBAAS,OAAT,CAAiB,EAAE,KAAK,OAAO,MAAP,EAAL,EAAnB,CAAP,CAFyC;CAAN,CAAvC;;AAKA,SAAS,cAAT,CAAyB,uBAAzB,EAAkD,YAAM;AACpD,QAAM,cAAN,GADoD;AAEpD,SAAO,uCAAmB,OAAnB,CAA2B,EAAE,QAAQ,OAAO,MAAP,EAAR,EAA7B,CAAP,CAFoD;CAAN,CAAlD;;;;AAOA,SAAS,oBAAT,CAA8B,OAA9B,CAAuC;AACrC;AAAiB,+BAAY;AAC5B,YAAM,cAAN,GAD4B;AAE5B,aAAO,OAAO,wBAAP,CAFqB;KAAZ;;;KAAjB;CADF;;;AAQA,SAAS,aAAT,CAAuB,OAAvB,CAA+B;AAC7B;AAAW,yBAAK;AACd,aAAO,4BAAc,IAAd,CAAmB,EAAC,QAAQ,OAAO,MAAP,EAAR,EAApB,CAAP,CADc;KAAL;;;KAAX;CADF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAS,MAAT,CAAgB,OAAhB,CAAwB;AACtB;AAAkB;aAAM;KAAN;;;KAAlB;AADsB,CAAxB;;;AAKA,QAAQ,OAAR,CAAgB,YAAY;AAC1B,MAAI,SAAS,iBAAiB,MAAjB,CAAwB,OAAxB,CAAT;;;;AADsB,CAAZ,CAAhB;;;AASE,aAAa,KAAb,GAAqB,IAArB,iG;;;;;;;;;;;;;;ACnFF;;AAEO,IAAM,kDAAqB,IAAI,aAAM,UAAN,CAAiB,oBAArB,CAArB;;;AAGX,mBAAmB,IAAI,WAAW,KAAX,CAAiB;AACtC,cAAY,kBAAZ;AACA,UAAQ,CAAC,QAAD,CAAR;AACA,UAAQ,IAAI,WAAW,SAAX,EAAZ;CAHiB,CAAnB;;AAMF,2BAA2B,IAAI,YAAJ,CAAiB;AAC1C,UAAQ;AACP,UAAM,MAAN;AACA,WAAO,SAAP;AACA,cAAU;AACT,YAAM,QAAN;KADD;AAGA;AAAW,2BAAU;AACpB,eAAO,KAAK,MAAL,CADa;OAAV;;;OAAX;GAND;;AAWA,cAAY;AACT,UAAM,CAAC,MAAD,CAAN;AACA,WAAO,YAAP;GAFH;;AAKC,UAAQ;AACP,UAAM,MAAN;AACA,WAAO,eAAP;AACA,cAAU;AACN,eAAS,CACP,EAAC,OAAO,KAAP,EAAc,OAAO,EAAP,EADR,EAEP,EAAC,OAAO,KAAP,EAAc,OAAO,EAAP,EAFR,EAGP,EAAC,OAAO,KAAP,EAAc,OAAO,EAAP,EAHR,CAAT;KADJ;GAHD;;AAYA,iBAAe;AACd,UAAM,CAAC,MAAD,CAAN;;AAEA,WAAO,0BAAP;AACA,cAAU;AACT,YAAM,wBAAN;AACA,eAAS,CACL,EAAC,OAAO,sBAAP,EAA+B,OAAO,SAAP,EAD3B,EAEL,EAAC,OAAO,wBAAP,EAAiC,OAAO,WAAP,EAF7B,EAGL,EAAC,OAAO,oBAAP,EAA6B,OAAO,OAAP,EAHzB,CAAT;KAFD;GAJD;;AAcC,gBAAc;AACd,UAAM,CAAC,MAAD,CAAN;;AAEA,WAAO,4BAAP;AACA,cAAU;AACT,YAAM,wBAAN;AACA,eAAS,CACL,EAAC,OAAO,QAAP,EAAiB,OAAO,QAAP,EADb,EAEL,EAAC,OAAO,SAAP,EAAkB,OAAO,SAAP,EAFd,EAGL,EAAC,OAAO,WAAP,EAAoB,OAAO,WAAP,EAHhB,EAIL,EAAC,OAAO,UAAP,EAAmB,OAAO,UAAP,EAJf,EAKL,EAAC,OAAO,QAAP,EAAiB,OAAO,QAAP,EALb,EAML,EAAC,OAAO,UAAP,EAAmB,OAAO,UAAP,EANf,EAOL,EAAC,OAAO,QAAP,EAAiB,OAAO,QAAP,EAPb,CAAT;KAFD;GAJA;;AAkBD,oBAAkB;AACjB,UAAM,MAAN;AACA,WAAO,oBAAP;AACA,cAAU;AACT,eAAS,CACL,EAAC,OAAO,UAAP,EAAmB,OAAO,UAAP,EADf,EAEL,EAAC,OAAO,iBAAP,EAA0B,OAAO,iBAAP,EAFtB,EAGL,EAAC,OAAO,gBAAP,EAAyB,OAAO,gBAAP,EAHrB,CAAT;KADD;GAHD;;;AAaC,cAAY;AACV,UAAM,MAAN;AACA,WAAO,aAAP;AACA,cAAU,IAAV;GAHF;;AAMD,aAAW;AACV,UAAM,MAAN;AACA,WAAO,mCAAP;GAFD;;CAhFwB,CAA3B;;AAwFA,mBAAmB,YAAnB,CAAgC,wBAAhC,mE;;;;;;;;;;;;;;ACnGA;;AACA;;AAEO,IAAM,8BAAW,IAAI,aAAM,UAAN,CAAiB,UAArB,CAAX;;AAEb,SAAS,MAAT,CAAgB,EAAE,MAAM,OAAN,EAAlB;;;AAGE,gBAAgB,IAAI,WAAW,KAAX,CAAiB;AACnC,cAAY,QAAZ;AACA,UAAQ,CAAC,MAAD,CAAR;AACA,UAAQ,IAAI,WAAW,SAAX,EAAZ;CAHc,CAAhB;;AAMF,sBAAsB,IAAI,YAAJ,CAAiB;AACrC,eAAa;AACX,UAAM,MAAN;AACA,WAAO,cAAP;GAFF;CADoB,CAAtB;;AAOA,gBAAgB,IAAI,YAAJ,CAAiB;AAC/B,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,MAAP;GAFF;;AAKA,aAAY;AACV,UAAM,IAAN;AACA,WAAO,eAAP;GAFF;;AAKA,SAAO;AACL,UAAM,MAAN;AACA,WAAO,cAAP;GAFF;;AAKA,eAAa;AACX,UAAM,MAAN;AACA,WAAO,aAAP;GAFF;;AAKA,sBAAqB;AACnB,UAAM,8CAAN;AACA,WAAO,qBAAP;AACA,cAAU,IAAV;GAHF;;CArBc,CAAhB;;AA6BA,SAAS,YAAT,CAAsB,aAAtB,uF;;;;;;;;;;;;;;AClDA;;AAEO,IAAM,wCAAgB,IAAI,aAAM,UAAN,CAAiB,eAArB,CAAhB;;AAEb,kBAAkB,IAAI,YAAJ,CAAiB;AACjC,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,gBAAP;GAFF;;AAKA,YAAU;AACR,UAAM,MAAN;AACA,WAAO,uBAAP;GAFF;;AAKA,aAAW;AACT,UAAM,IAAN;AACA,WAAO,gBAAP;GAFF;;AAKA,WAAS;AACP,UAAM,IAAN;AACA,WAAO,aAAP;GAFF;CAhBgB,CAAlB;;AAsBA,cAAc,IAAI,YAAJ,CAAiB;AAC7B,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,YAAP;GAFF;AAIA,QAAM;AACJ,UAAM,IAAN;AACA,WAAO,eAAP;GAFF;CALY,CAAd;;AAWA,oBAAoB,IAAI,YAAJ,CAAiB;AACnC,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,kBAAP;GAFF;AAIA,QAAM;AACJ,UAAM,IAAN;AACA,WAAO,kBAAP;GAFF;AAIA,SAAO;AACL,UAAM,MAAN;AACA,WAAO,YAAP;GAFF;CATkB,CAApB;;AAeA,qBAAqB,IAAI,YAAJ,CAAiB;AACpC,YAAU;AACR,UAAM,MAAN;AACA,WAAO,kBAAP;GAFF;;AAKA,eAAc;AACZ,UAAM,MAAN;AACA,WAAO,cAAP;GAFF;;AAKA,aAAW;AACT,UAAM,IAAN;AACA,WAAO,YAAP;GAFF;;AAKA,WAAS;AACP,UAAM,IAAN;AACA,WAAO,UAAP;GAFF;CAhBmB,CAArB;;AAwBA,qBAAqB,IAAI,YAAJ,CAAiB;AACpC,UAAQ;AACN,UAAM,MAAN;AACA,WAAO,SAAP;AACA,cAAU;AACR,YAAM,QAAN;KADF;AAGA;AAAW,2BAAW;AACpB,eAAO,KAAK,MAAL,CADa;OAAX;;;OAAX;GANF;;AAWA,cAAY;AACV,UAAM,MAAN;AACA,WAAO,mBAAP;GAFF;;AAKA,eAAa;AACX,UAAM,MAAN;AACA,WAAO,cAAP;GAFF;;AAKA,UAAQ;AACN,UAAM,CAAC,WAAD,CAAN;AACA,WAAO,YAAP;AACA,cAAU,IAAV;GAHF;;AAMA,gBAAc;AACZ,UAAM,CAAC,iBAAD,CAAN;AACA,WAAO,8BAAP;AACA,cAAU,IAAV;GAHF;;AAMA,iBAAe;AACb,UAAM,CAAC,kBAAD,CAAN;AACA,WAAO,gCAAP;AACA,cAAU,IAAV;GAHF;;AAMA,cAAY;AACV,UAAM,CAAC,eAAD,CAAN;AACA,WAAO,sBAAP;AACA,cAAU,IAAV;GAHF;;CAxCmB,CAArB;;AAkDA,cAAc,YAAd,CAA2B,kBAA3B,8E;;;;;;;;;;;AC9HA,WAAW,KAAX,CAAiB,GAAjB,EAAsB;AAClB,UAAM,MAAN;AACA;0BAAS;AACL,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,YAAN,EAAlC,EADK;;;;OAFS;CAAtB;;AAOA,WAAW,KAAX,CAAiB,UAAjB,EAA6B;AACzB,UAAM,SAAN;AACA;0BAAS;AACR,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,eAAN,EAAlC,EADQ;;;;OAFgB;CAA7B;;AAOA,WAAW,KAAX,CAAiB,YAAjB,EAA+B;AAC3B,UAAM,iBAAN;AACA;0BAAS;AACR,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,iBAAN,EAAlC,EADQ;;;;OAFkB;CAA/B;;AAOA,WAAW,KAAX,CAAiB,UAAjB,EAA6B;AACzB,UAAM,SAAN;AACA;0BAAS;AACR,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,eAAN,EAAlC,EADQ;;;;OAFgB;CAA7B;;AAOA,WAAW,KAAX,CAAiB,UAAjB,EAA6B;AACzB,UAAM,SAAN;AACA;0BAAS;AACR,wBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,eAAN,EAAlC,EADQ;;;;OAFgB;CAA7B,sH","file":"/app.js","sourcesContent":["\nTemplate.__checkName(\"AddInfoLayout\");\nTemplate[\"AddInfoLayout\"] = new Template(\"Template.AddInfoLayout\", (function() {\n  var view = this;\n  return [ HTML.HEADER(\"\\n      \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"profileDoc\"));\n  }, function() {\n    return [ \"\\n        \", HTML.H1(\"Edit Profile\"), \"\\n      \" ];\n  }, function() {\n    return [ \"\\n        \", HTML.H1(\"Create a Profile\"), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n    \", HTML.MAIN(\"\\n      \", Spacebars.include(view.lookupTemplate(\"makeUpdateAccountForm\")), \"\\n      \", Spacebars.include(view.lookupTemplate(\"makeUpdateProfileForm\")), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"makeUpdateAccountForm\");\nTemplate[\"makeUpdateAccountForm\"] = new Template(\"Template.makeUpdateAccountForm\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"accountDoc\"));\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        collection: Spacebars.call(\"Accounts\"),\n        doc: Spacebars.call(view.lookup(\"accountDoc\")),\n        id: Spacebars.call(\"makeUpdateProfileForm\"),\n        type: Spacebars.call(\"update\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        collection: Spacebars.call(\"Accounts\"),\n        id: Spacebars.call(\"makeUpdateProfileForm\"),\n        type: Spacebars.call(\"insert\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n  \" ];\n  });\n}));\n\nTemplate.__checkName(\"makeUpdateProfileForm\");\nTemplate[\"makeUpdateProfileForm\"] = new Template(\"Template.makeUpdateProfileForm\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"profileDoc\"));\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        collection: Spacebars.call(\"MusicProfiles\"),\n        doc: Spacebars.call(view.lookup(\"profileDoc\")),\n        id: Spacebars.call(\"makeUpdateProfileForm\"),\n        type: Spacebars.call(\"update\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        collection: Spacebars.call(\"MusicProfiles\"),\n        id: Spacebars.call(\"makeUpdateProfileForm\"),\n        type: Spacebars.call(\"insert\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n  \" ];\n  });\n}));\n","\nTemplate.__checkName(\"HomeLayout\");\nTemplate[\"HomeLayout\"] = new Template(\"Template.HomeLayout\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<header>\\n        <h1> Home </h1>\\n    </header>\\n    \"), HTML.MAIN(\"\\n    \t\", Spacebars.include(view.lookupTemplate(\"search\")), \"\\n\\n    \") ];\n}));\n\nTemplate.__checkName(\"search\");\nTemplate[\"search\"] = new Template(\"Template.search\", (function() {\n  var view = this;\n  return [ Blaze._TemplateWith(function() {\n    return {\n      index: Spacebars.call(view.lookup(\"accountsIndex\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"EasySearch\"), \"Input\"));\n    });\n  }), \"\\n\\n  \", HTML.UL(\"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      index: Spacebars.call(view.lookup(\"accountsIndex\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"EasySearch\"), \"Each\"));\n    }, function() {\n      return [ \"\\n      \", HTML.LI(\"Accompanist Name: \", Blaze.View(\"lookup:name\", function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      })), \"\\n    \" ];\n    });\n  }), \"\\n  \"), \"\\n\\n  \", Blaze._TemplateWith(function() {\n    return {\n      index: Spacebars.call(view.lookup(\"accountsIndex\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"EasySearch\"), \"LoadMore\"));\n    });\n  }), \"\\n\\n  \", Blaze._TemplateWith(function() {\n    return {\n      index: Spacebars.call(view.lookup(\"accountsIndex\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"EasySearch\"), \"IfNoResults\"));\n    }, function() {\n      return [ \"\\n    \", HTML.DIV({\n        \"class\": \"no-results\"\n      }, \"No results found!\"), \"\\n  \" ];\n    });\n  }) ];\n}));\n","\nTemplate.__checkName(\"MainLayout\");\nTemplate[\"MainLayout\"] = new Template(\"Template.MainLayout\", (function() {\n  var view = this;\n  return [ HTML.Raw('<!-- Latest compiled and minified CSS -->\\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" integrity=\"sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7\" crossorigin=\"anonymous\">\\n\\n<!-- Optional theme -->\\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css\" integrity=\"sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r\" crossorigin=\"anonymous\">\\n\\n<!-- Latest compiled and minified JavaScript -->\\n'), HTML.SCRIPT({\n    src: \"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\",\n    integrity: \"sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS\",\n    crossorigin: \"anonymous\"\n  }), HTML.Raw('\\n\\n<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\\n\\n\t'), HTML.MAIN(\"\\n    \t\", HTML.NAV({\n    \"class\": \"navbar navbar-default\"\n  }, \"\\n\t\t  \", HTML.DIV({\n    \"class\": \"container-fluid\"\n  }, \"\\n\t\t  \t\", HTML.Raw('<div class=\"navbar-header\">\\n\t\t      <a class=\"navbar-brand\" href=\"/\">Empanist</a>\\n\t\t    </div>'), \"\\n\t\t    \", HTML.Raw(\"<!-- Collect the nav links, forms, and other content for toggling -->\"), \"\\n\t\t    \", HTML.DIV({\n    \"class\": \"collapse navbar-collapse\",\n    id: \"bs-example-navbar-collapse-1\"\n  }, \"\\n\\n\t\t      \", HTML.UL({\n    \"class\": \"nav navbar-nav navbar-right\"\n  }, \"\\n\t\t        \", HTML.LI(\" \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \" \"), \"\\n\\n\t\t\t\t\t\t\", HTML.Raw(\"<!-- If the user already created a profile -->\"), \"\\n\t\t\t\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"profileDoc\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({\n      href: \"/profile\"\n    }, \"View Profile\")), \"\\n\t\t\t\t\t\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({\n      href: \"/addinfo\"\n    }, \"Add Profile\")), \"\\n\t\t\t\t\t\t\" ];\n  }), \"\\n\t\t\t\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"accompanistProfileDoc\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({\n      href: \"/newaccomp\"\n    }, \"Edit Accompanist Profile\")), \"\\n\t\t\t\t\t\t\", HTML.Comment(\" FILL THIS \"), \"\\n\t\t\t\t\t\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({\n      href: \"/newaccomp\"\n    }, \"Become an Accompanist\")), \"\\n\t\t\t\t\t\t\" ];\n  }), \"\\n\t\t      \"), \"\\n\t\t    \"), HTML.Raw(\"<!-- /.navbar-collapse -->\"), \"\\n\t\t  \"), HTML.Raw(\"<!-- /.container-fluid -->\"), \"\\n\t\t\"), \"\\n    \", HTML.DIV({\n    \"class\": \"main_margin\"\n  }, \"\\n   \t\t\", Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"main\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  }), \"\\n   \t\"), \"\\n  \") ];\n}));\n","\nTemplate.__checkName(\"NewAccompLayout\");\nTemplate[\"NewAccompLayout\"] = new Template(\"Template.NewAccompLayout\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<header>\\n        <h1> Signup to Become an Accompanist </h1>\\n    </header>\\n    \"), HTML.MAIN(\"\\n      \", Spacebars.include(view.lookupTemplate(\"makeUpdateAccompForm\")), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"makeUpdateAccompForm\");\nTemplate[\"makeUpdateAccompForm\"] = new Template(\"Template.makeUpdateAccompForm\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"accompanistProfileDoc\"));\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        collection: Spacebars.call(\"AccompanistProfile\"),\n        doc: Spacebars.call(view.lookup(\"accompanistProfileDoc\")),\n        id: Spacebars.call(\"insertAccompProfileForm\"),\n        type: Spacebars.call(\"update\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return {\n        collection: Spacebars.call(\"AccompanistProfile\"),\n        id: Spacebars.call(\"insertAccompProfileForm\"),\n        type: Spacebars.call(\"insert\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n  \" ];\n  });\n}));\n","\nTemplate.__checkName(\"ProfileLayout\");\nTemplate[\"ProfileLayout\"] = new Template(\"Template.ProfileLayout\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<header>\\n        <h1> Profile </h1>\\n    </header>\\n    \"), HTML.MAIN(\"\\n      \", HTML.Raw(\"<br>\"), \"\\n      \", HTML.Raw('<button><a href=\"/addinfo\">Edit Profile</a></button>'), \"\\n      \", HTML.Raw(\"<br>\"), HTML.Raw(\"<br>\"), \"\\n    \t\", HTML.SECTION({\n    \"class\": \"myprofile\"\n  }, \"\\n\t\t\t\", HTML.Raw(\"<!-- List all user's accounts -->\"), \"\\n\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"myprofile\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", HTML.H5(\"Instruments Mastered: \", Blaze.View(\"lookup:instrument\", function() {\n      return Spacebars.mustache(view.lookup(\"instrument\"));\n    })), \"\\n\t\t\t\t\", HTML.H5(\"Years Played: \", Blaze.View(\"lookup:yearsPlayed\", function() {\n      return Spacebars.mustache(view.lookup(\"yearsPlayed\"));\n    })), \"\\n\t\t\t\t\", HTML.HR(), \"\\n\t\t\t\t\", HTML.H5(\"Awards: \"), \"\\n\t\t\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"awards\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\tName: \", Blaze.View(\"lookup:name\", function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tDate: \", Blaze.View(\"lookup:date\", function() {\n        return Spacebars.mustache(view.lookup(\"date\"));\n      }), HTML.BR(), HTML.BR(), \"\\n\t\t\t\t\t\" ];\n    }), \"\\n\t\t\t\t\", HTML.HR(), \"\\n\t\t\t\t\", HTML.H5(\"Competitions: \"), \"\\n\t\t\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"competitions\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\tName: \", Blaze.View(\"lookup:name\", function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tDate: \", Blaze.View(\"lookup:date\", function() {\n        return Spacebars.mustache(view.lookup(\"date\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tAward: \", Blaze.View(\"lookup:award\", function() {\n        return Spacebars.mustache(view.lookup(\"award\"));\n      }), HTML.BR(), HTML.BR(), \"\\n\t\t\t\t\t\" ];\n    }), \"\\n\t\t\t\t\", HTML.HR(), \"\\n\t\t\t\t\", HTML.H5(\"Music Programs: \"), \"\\n\t\t\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"musicPrograms\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\tInstitution Name: \", Blaze.View(\"lookup:instName\", function() {\n        return Spacebars.mustache(view.lookup(\"instName\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tProgram Name: \", Blaze.View(\"lookup:programName\", function() {\n        return Spacebars.mustache(view.lookup(\"programName\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tStart Date: \", Blaze.View(\"lookup:startDate\", function() {\n        return Spacebars.mustache(view.lookup(\"startDate\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tEnd Date: \", Blaze.View(\"lookup:endDate\", function() {\n        return Spacebars.mustache(view.lookup(\"endDate\"));\n      }), HTML.BR(), HTML.BR(), \"\\n\t\t\t\t\t\" ];\n    }), \"\\n\t\t\t\t\", HTML.HR(), \"\\n\t\t\t\t\", HTML.H5(\"Orchestra's Participated in: \"), \"\\n\t\t\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"orchestras\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\tName: \", Blaze.View(\"lookup:name\", function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tPosition: \", Blaze.View(\"lookup:position\", function() {\n        return Spacebars.mustache(view.lookup(\"position\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tStart Date: \", Blaze.View(\"lookup:startDate\", function() {\n        return Spacebars.mustache(view.lookup(\"startDate\"));\n      }), HTML.BR(), \"\\n\t\t\t\t\t\tEnd Date: \", Blaze.View(\"lookup:endDate\", function() {\n        return Spacebars.mustache(view.lookup(\"endDate\"));\n      }), HTML.BR(), HTML.BR(), \"\\n\t\t\t\t\t\" ];\n    }), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\"), \"\\n\\n    \") ];\n}));\n","\nTemplate.__checkName(\"ResultsLayout\");\nTemplate[\"ResultsLayout\"] = new Template(\"Template.ResultsLayout\", (function() {\n  var view = this;\n  return HTML.Raw(\"<header>\\n        <h1> Search Results </h1>\\n    </header>\\n    <main>\\n\\n    </main>\");\n}));\n","import { MusicProfiles } from '../collections/musicProfile.js'\nimport { AccompanistProfile } from '../collections/accompanistProfile.js'\nimport { Accounts } from '../collections/account.js'\n\nwindow.MusicProfiles = MusicProfiles\nwindow.AccompanistProfile = AccompanistProfile\nwindow.Accounts = Accounts\n\n// Global Template Helpers\n\nTemplate.registerHelper( 'profileDoc', () => {\n    event.preventDefault();\n    return MusicProfiles.findOne({ userId: Meteor.userId()});\n});\n\nTemplate.registerHelper( 'accountDoc', () => {\n  \tevent.preventDefault();\n    return Accounts.findOne({ _id: Meteor.userId()});\n  });\n\nTemplate.registerHelper( 'accompanistProfileDoc', () => {\n    event.preventDefault();\n    return AccompanistProfile.findOne({ userId: Meteor.userId()});\n});\n\n// Local Template Helpers\n\nTemplate.makeUpdateAccompForm.helpers ({\n  NewAccompSchema: function () {\n  \tevent.preventDefault();\n  \treturn Schema.AccompanistProfileSchema;\n  }\n});\n\n// add info from account.js and make it work for accompanist search results as well\nTemplate.ProfileLayout.helpers({  \n  myprofile: ()=> {\n    return MusicProfiles.find({userId: Meteor.userId()});\n  }\n});\n\n// Event Listeners\n// Template.HomeLayout.events({\n//     'click submit': function () {\n//       event.preventDefault();\n\n//      // const account_number = event.target;\n//       // const text = target.text.value;\n//     // deposit money\n//      // accounts.update(account_number: account_number, {$inc: {balance: amount}});\n      \n//       //const city =;\n//       //const time_pref =;\n//       //const session_location=;\n\n//       results: ()=> {\n//     \treturn AccompanistProfile.find({});\n//   }\n//     }\n//   });\n\n// Trial search\n\n// Template.HomeLayout.helpers({\n//   accountsIndex: function () {\n//   \treturn Accounts.find();\n//   } \n// });\n\nTemplate.search.helpers({\n  accompanistIndex: () => AccompanistIndex // instanceof EasySearch.Index\n});\n\n// On Client\nTracker.autorun(function () {\n  let cursor = AccompanistIndex.search('Marie'); // search all docs that contain \"Marie\" in the name or score field\n\n\n  //console.log(cursor.fetch()); // log found documents with default search limit\n  //console.log(cursor.count()); // log count of all found documents\n});\n\n// For Debugging\n  SimpleSchema.debug = true;\n\n\n\n\n\n\n\n\n\n","import { Mongo } from 'meteor/mongo';\n\nexport const AccompanistProfile = new Mongo.Collection('accompanistProfile');\n\n // Searching\n  AccompanistIndex = new EasySearch.Index({\n    collection: AccompanistProfile,\n    fields: ['charge'],\n    engine: new EasySearch.Minimongo()\n  });\n\nAccompanistProfileSchema = new SimpleSchema({\n\t\tuserId: {\n\t\t\ttype: String,\n\t\t\tlabel: \"User ID\",\n\t\t\tautoform: {\n\t\t\t\ttype: \"hidden\"\n\t\t\t},\n\t\t\tautoValue: function(){\n\t\t\t\treturn this.userId\n\t\t\t}\n\t\t},\n\n\t\trepertoire: {\n    \ttype: [String],\n    \tlabel: \"Repertoire\"\n  \t},\n\n  \tcharge: {\n  \t\ttype: Number,\n  \t\tlabel: \"Hourly Charge\",\n  \t\tautoform: {\n      \t\toptions: [\n\t        \t{label: \"$20\", value: 20},\n\t        \t{label: \"$40\", value: 40},\n\t        \t{label: \"$60\", value: 60}\n      \t\t]\n   \t\t}\n  \t},\n\n  \tworking_hours: {\n  \t\ttype: [String],\n  \t\t//noselect:true,\n  \t\tlabel: \"Times you prefer working\",\n  \t\tautoform: {\n  \t\t\ttype: \"select-checkbox-inline\",\n  \t\t\toptions: [\n        \t{label: \"Morning (8am - 12pm)\", value: \"morning\"},\n        \t{label: \"Afternoon (12pm - 6pm)\", value: \"afternoon\"},\n        \t{label: \"Night (6pm - 11pm)\", value: \"night\"}\n      \t\t]\n   \t\t}\n  \t},\n\n   \tworking_days: {\n  \t\ttype: [String],\n  \t\t//noselect:true,\n  \t\tlabel: \"Days you want to accompany\",\n  \t\tautoform: {\n  \t\t\ttype: \"select-checkbox-inline\",\n  \t\t\toptions: [\n        \t{label: \"Monday\", value: \"monday\"},\n        \t{label: \"Tuesday\", value: \"tuesday\"},\n        \t{label: \"Wednesday\", value: \"wednesday\"},\n        \t{label: \"Thursday\", value: \"thursday\"},\n        \t{label: \"Friday\", value: \"friday\"},\n        \t{label: \"Saturday\", value: \"saturday\"},\n        \t{label: \"Sunday\", value: \"sunday\"},\n      \t\t]\n   \t\t}\n  \t},\n\n  \tsession_location: {\n  \t\ttype: String,\n  \t\tlabel: \"Session's Location\",\n  \t\tautoform: {\n  \t\t\toptions: [\n        \t{label: \"My Place\", value: \"My Place\"},\n        \t{label: \"Student's Place\", value: \"Student's Place\"},\n        \t{label: \"Doesn't matter\", value: \"Doesn't matter\"}\n      \t\t]\n  \t\t}\n  \t},\n\n    // make this show up only if the accomp said he's willing to give sessoins in his place\n    mylocation: {\n      type: String,\n      label: \"My location\",\n      optional: true\n    },\n\n  \tone_liner: {\n  \t\ttype: String,\n  \t\tlabel: \"Describe yourself in one sentence\",\n  \t},\n\n});\n\n\nAccompanistProfile.attachSchema(AccompanistProfileSchema)\n","import { Mongo } from 'meteor/mongo';\nimport { AccompanistProfileSchema } from './accompanistProfile.js'\n\nexport const Accounts = new Mongo.Collection('accounts');\n\nAccounts.insert({ name: \"David\" });\n\n  // Searching\n  AccountsIndex = new EasySearch.Index({\n    collection: Accounts,\n    fields: ['name'],\n    engine: new EasySearch.Minimongo()\n  });\n\nPaymentMethodSchema = new SimpleSchema({\n  paymentType: {\n    type: String,\n    label: \"Payment Type\"\n  }\n});\n\nAccountSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n\n  birthDate : {\n    type: Date,\n    label: \"Date of Birth\"\n  },\n\n  phone: {\n    type: String,\n    label: \"Phone Number\"\n  },\n\n  affiliation: {\n    type: String,\n    label: \"Affiliation\"\n  },\n\n  accompanistProfile : {\n    type: [AccompanistProfileSchema],\n    label: \"Accompanist Profile\",\n    optional: true\n  }\n\n});\n\nAccounts.attachSchema(AccountSchema)\n","import { Mongo } from 'meteor/mongo';\n\nexport const MusicProfiles = new Mongo.Collection('musicProfiles');\n\nOrchestraSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Orchestra Name\"\n  },\n\n  position: {\n    type: String,\n    label: \"Position in Orchestra\"\n  },\n\n  startDate: {\n    type: Date,\n    label: \"Beginning Date\"\n  },\n\n  endDate: {\n    type: Date,\n    label: \"Ending Date\"\n  }\n});\n\nAwardSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Award Name\"\n  },\n  date: {\n    type: Date,\n    label: \"Date Received\"\n  }\n});\n\nCompetitionSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Competition Name\"\n  },\n  date: {\n    type: Date,\n    label: \"Competition Date\"\n  },\n  award: {\n    type: String,\n    label: \"Award Type\"\n  }\n});\n\nMusicProgramSchema = new SimpleSchema({\n  instName: {\n    type: String,\n    label: \"Institution Name\"\n  },\n\n  programName : {\n    type: String,\n    label: \"Program Name\"\n  },\n\n  startDate: {\n    type: Date,\n    label: \"Start Date\"\n  },\n\n  endDate: {\n    type: Date,\n    label: \"End Date\"\n  }\n})\n\n\n\nMusicProfileSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    label: \"User ID\",\n    autoform: {\n      type: \"hidden\"\n    },\n    autoValue: function() {\n      return this.userId;\n    }\n  },\n\n  instrument: {\n    type: String,\n    label: \"Instrument Played\"\n  },\n\n  yearsPlayed: {\n    type: String,\n    label: \"Years Played\"\n  },\n\n  awards: {\n    type: [AwardSchema],\n    label: \"Awards Won\",\n    optional: true\n  },\n\n  competitions: {\n    type: [CompetitionSchema],\n    label: \"Competitions Participated in\",\n    optional: true\n  },\n\n  musicPrograms: {\n    type: [MusicProgramSchema],\n    label: \"Music Programs Participated in\",\n    optional: true\n  },\n\n  orchestras: {\n    type: [OrchestraSchema],\n    label: \"Orchestras Played At\",\n    optional: true\n  }\n\n\n\n});\n\nMusicProfiles.attachSchema(MusicProfileSchema)\n","FlowRouter.route('/', {\n    name: 'home',\n    action() {\n        BlazeLayout.render('MainLayout', {main: 'HomeLayout'});\n    }\n});\n\nFlowRouter.route('/addinfo', {\n    name: 'addInfo',\n    action() {\n    \tBlazeLayout.render('MainLayout', {main: 'AddInfoLayout'});\n    }\n});\n\nFlowRouter.route('/newaccomp', {\n    name: 'NewAccompLayout',\n    action() {\n    \tBlazeLayout.render('MainLayout', {main: 'NewAccompLayout'});\n    }\n});\n\nFlowRouter.route('/results', {\n    name: 'results',\n    action() {\n    \tBlazeLayout.render('MainLayout', {main: 'ResultsLayout'});\n    }\n});\n\nFlowRouter.route('/profile', {\n    name: 'profile',\n    action() {\n    \tBlazeLayout.render('MainLayout', {main: 'ProfileLayout'});\n    }\n});\n"]}}]