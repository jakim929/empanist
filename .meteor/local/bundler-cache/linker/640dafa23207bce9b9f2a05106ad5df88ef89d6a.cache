[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar AutoForm = Package['aldeed:autoform'].AutoForm;\nvar _ = Package.underscore._;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/comerc_autoform-selectize/template.autoform-selectize.js                                         //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"afSelectize\");                                                                         // 2\nTemplate[\"afSelectize\"] = new Template(\"Template.afSelectize\", (function() {                                 // 3\n  var view = this;                                                                                           // 4\n  return HTML.SELECT(HTML.Attrs(function() {                                                                 // 5\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                      // 6\n  }), \"\\n    \", Blaze.Unless(function() {                                                                    // 7\n    return Spacebars.call(view.lookup(\"isReactiveOptions\"));                                                 // 8\n  }, function() {                                                                                            // 9\n    return [ \"\\n      \", Blaze.Each(function() {                                                             // 10\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                       // 11\n    }, function() {                                                                                          // 12\n      return [ \"\\n        \", Blaze.If(function() {                                                           // 13\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));                                  // 14\n      }, function() {                                                                                        // 15\n        return [ \"\\n          \", HTML.OPTGROUP({                                                             // 16\n          label: function() {                                                                                // 17\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));                          // 18\n          }                                                                                                  // 19\n        }, \"\\n          \", Blaze.Each(function() {                                                           // 20\n          return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                   // 21\n        }, function() {                                                                                      // 22\n          return [ \"\\n          \", HTML.OPTION(HTML.Attrs(function() {                                       // 23\n            return Spacebars.attrMustache(view.lookup(\"optionAtts\"));                                        // 24\n          }), Blaze.View(\"lookup:..label\", function() {                                                      // 25\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                             // 26\n          })), \"\\n          \" ];                                                                             // 27\n        }), \"\\n          \"), \"\\n        \" ];                                                                 // 28\n      }, function() {                                                                                        // 29\n        return [ \"\\n          \", HTML.OPTION(HTML.Attrs(function() {                                         // 30\n          return Spacebars.attrMustache(view.lookup(\"optionAtts\"));                                          // 31\n        }), Blaze.View(\"lookup:..label\", function() {                                                        // 32\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                               // 33\n        })), \"\\n        \" ];                                                                                 // 34\n      }), \"\\n      \" ];                                                                                      // 35\n    }), \"\\n    \" ];                                                                                          // 36\n  }), \"\\n  \");                                                                                               // 37\n}));                                                                                                         // 38\n                                                                                                             // 39\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/comerc_autoform-selectize/autoform-selectize.js                                                  //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nAutoForm.addInputType(\"selectize\", {                                                                         // 1\n  template: \"afSelectize\",                                                                                   // 2\n  valueOut: function () {                                                                                    // 3\n    // FIXME: may be related https://github.com/aldeed/meteor-autoform/issues/569                            // 4\n    if (this[0].selectize) {                                                                                 // 5\n      return this[0].selectize.getValue();                                                                   // 6\n    }                                                                                                        // 7\n  },                                                                                                         // 8\n  valueConverters: {                                                                                         // 9\n    \"stringArray\": function (val) {                                                                          // 10\n      if (_.isArray(val)) {                                                                                  // 11\n        return _.map(val, function (item) {                                                                  // 12\n          return $.trim(item);                                                                               // 13\n        });                                                                                                  // 14\n      }                                                                                                      // 15\n      return val;                                                                                            // 16\n    },                                                                                                       // 17\n    \"number\": AutoForm.Utility.stringToNumber,                                                               // 18\n    \"numberArray\": function (val) {                                                                          // 19\n      if (_.isArray(val)) {                                                                                  // 20\n        return _.map(val, function (item) {                                                                  // 21\n          item = $.trim(item);                                                                               // 22\n          return AutoForm.Utility.stringToNumber(item);                                                      // 23\n        });                                                                                                  // 24\n      }                                                                                                      // 25\n      return val;                                                                                            // 26\n    },                                                                                                       // 27\n    \"boolean\": AutoForm.Utility.stringToBool,                                                                // 28\n    \"booleanArray\": function (val) {                                                                         // 29\n      if (_.isArray(val)) {                                                                                  // 30\n        return _.map(val, function (item) {                                                                  // 31\n          item = $.trim(item);                                                                               // 32\n          return AutoForm.Utility.stringToBool(item);                                                        // 33\n        });                                                                                                  // 34\n      }                                                                                                      // 35\n      return val;                                                                                            // 36\n    },                                                                                                       // 37\n    \"date\": AutoForm.Utility.stringToDate,                                                                   // 38\n    \"dateArray\": function (val) {                                                                            // 39\n      if (_.isArray(val)) {                                                                                  // 40\n        return _.map(val, function (item) {                                                                  // 41\n          item = $.trim(item);                                                                               // 42\n          return AutoForm.Utility.stringToDate(item);                                                        // 43\n        });                                                                                                  // 44\n      }                                                                                                      // 45\n      return val;                                                                                            // 46\n    }                                                                                                        // 47\n  },                                                                                                         // 48\n  contextAdjust: function (context) {                                                                        // 49\n    //can fix issues with some browsers selecting the firstOption instead of the selected option             // 50\n    context.atts.autocomplete = 'off';                                                                       // 51\n                                                                                                             // 52\n    var itemAtts = _.omit(context.atts, 'firstOption');                                                      // 53\n    var firstOption = context.atts.firstOption;                                                              // 54\n                                                                                                             // 55\n    // build items list                                                                                      // 56\n    context.items = [];                                                                                      // 57\n                                                                                                             // 58\n    // If a firstOption was provided, add that to the items list first                                       // 59\n    if (firstOption === false) {                                                                             // 60\n      // nothing                                                                                             // 61\n    } else if (typeof firstOption === 'string' || typeof _defaults.firstOption === \"string\") {               // 62\n      context.items.push({                                                                                   // 63\n        name: context.name,                                                                                  // 64\n        label: (typeof firstOption === 'string' ? firstOption : _defaults.firstOption),                      // 65\n        value: '',                                                                                           // 66\n        // _id must be included because it is a special property that                                        // 67\n        // #each uses to track unique list items when adding and removing them                               // 68\n        // See https://github.com/meteor/meteor/issues/2174                                                  // 69\n        //                                                                                                   // 70\n        // Setting this to an empty string caused problems if option with value                              // 71\n        // 1 was in the options list because Spacebars evaluates \"\" to 1 and                                 // 72\n        // considers that a duplicate.                                                                       // 73\n        // See https://github.com/aldeed/meteor-autoform/issues/656                                          // 74\n        _id: 'AUTOFORM_EMPTY_FIRST_OPTION',                                                                  // 75\n        selected: false,                                                                                     // 76\n        // atts: itemAtts                                                                                    // 77\n      });                                                                                                    // 78\n    }                                                                                                        // 79\n                                                                                                             // 80\n    var fetchOpt = function fetchOpt(opt) {                                                                  // 81\n      return {                                                                                               // 82\n        name: context.name,                                                                                  // 83\n        label: opt.label,                                                                                    // 84\n        value: opt.value,                                                                                    // 85\n        // _id must be included because it is a special property that                                        // 86\n        // #each uses to track unique list items when adding and removing them                               // 87\n        // See https://github.com/meteor/meteor/issues/2174                                                  // 88\n        _id: opt.value,                                                                                      // 89\n        selected: _.isArray(context.value) ?                                                                 // 90\n          _.include(context.value, opt.value) : (opt.value === context.value),                               // 91\n        // atts: itemAtts                                                                                    // 92\n      };                                                                                                     // 93\n    };                                                                                                       // 94\n                                                                                                             // 95\n    // Add all defined options                                                                               // 96\n    _.each(context.selectOptions, function(opt) {                                                            // 97\n      if (opt.optgroup) {                                                                                    // 98\n        context.items.push({                                                                                 // 99\n          optgroup: opt.optgroup,                                                                            // 100\n          items: _.map(opt.options, fetchOpt)                                                                // 101\n        });                                                                                                  // 102\n      } else {                                                                                               // 103\n        context.items.push(fetchOpt(opt));                                                                   // 104\n      }                                                                                                      // 105\n    });                                                                                                      // 106\n                                                                                                             // 107\n    return context;                                                                                          // 108\n  }                                                                                                          // 109\n});                                                                                                          // 110\n                                                                                                             // 111\nTemplate.afSelectize.helpers({                                                                               // 112\n  optionAtts: function () {                                                                                  // 113\n    var item = this                                                                                          // 114\n    var atts = {                                                                                             // 115\n      value: item.value                                                                                      // 116\n    };                                                                                                       // 117\n    if (item.selected) {                                                                                     // 118\n      atts.selected = '';                                                                                    // 119\n    }                                                                                                        // 120\n    return atts;                                                                                             // 121\n  },                                                                                                         // 122\n  atts: function () {                                                                                        // 123\n    var atts = _.clone(this.atts);                                                                           // 124\n    // TODO: if (style == 'bootstrap3') ...                                                                  // 125\n    // Add bootstrap class                                                                                   // 126\n    atts = AutoForm.Utility.addClass(atts, 'form-control');                                                  // 127\n    delete atts.selectizeOptions;                                                                            // 128\n    delete atts.isReactiveOptions;                                                                           // 129\n    return atts;                                                                                             // 130\n  },                                                                                                         // 131\n  isReactiveOptions: function () {                                                                           // 132\n    var isReactiveOptions;                                                                                   // 133\n    if (_.has(this.atts, 'isReactiveOptions')) {                                                             // 134\n      isReactiveOptions = this.atts.isReactiveOptions;                                                       // 135\n    } else {                                                                                                 // 136\n      isReactiveOptions = _defaults.isReactiveOptions;                                                       // 137\n    }                                                                                                        // 138\n    return isReactiveOptions;                                                                                // 139\n  }                                                                                                          // 140\n});                                                                                                          // 141\n                                                                                                             // 142\nTemplate.afSelectize.events({                                                                                // 143\n  \"click .selectized\": function (event) {                                                                    // 144\n    // TODO: https://github.com/selectize/selectize.js/issues/658                                            // 145\n    $(event.toElement).next().children(\":first-child\").children(\"input:first\").focus();                      // 146\n  }                                                                                                          // 147\n});                                                                                                          // 148\n                                                                                                             // 149\nTemplate.afSelectize.rendered = function () {                                                                // 150\n  var selectizeOptions = this.data.atts.selectizeOptions || {};                                              // 151\n  // selectize rearranges one option from the middle of the list                                             // 152\n  // https://github.com/selectize/selectize.js/issues/640#issuecomment-71788203                              // 153\n  if (!selectizeOptions.sortField) {                                                                         // 154\n    selectizeOptions.sortField = 'text';                                                                     // 155\n  }                                                                                                          // 156\n  // instanciate selectize                                                                                   // 157\n  this.$('select').selectize(selectizeOptions);                                                              // 158\n                                                                                                             // 159\n  var isReactiveOptions;                                                                                     // 160\n  if (_.has(this.data.atts, 'isReactiveOptions')) {                                                          // 161\n    isReactiveOptions = this.data.atts.isReactiveOptions;                                                    // 162\n  } else {                                                                                                   // 163\n    isReactiveOptions = _defaults.isReactiveOptions;                                                         // 164\n  }                                                                                                          // 165\n                                                                                                             // 166\n  if (isReactiveOptions) {                                                                                   // 167\n    var test = false;                                                                                        // 168\n    var selectize = this.$('select')[0].selectize;                                                           // 169\n    this.autorun(function () {                                                                               // 170\n      var items = Template.currentData().items;                                                              // 171\n      // FIXED double autorun                                                                                // 172\n      // TODO may be computation.firstRun?                                                                   // 173\n      test = !test;                                                                                          // 174\n      if (test) {                                                                                            // 175\n        _refreshSelectizeOptions(selectize, items);                                                          // 176\n      }                                                                                                      // 177\n    });                                                                                                      // 178\n  }                                                                                                          // 179\n};                                                                                                           // 180\n                                                                                                             // 181\nTemplate.afSelectize.destroyed = function () {                                                               // 182\n  this.$('select')[0].selectize.destroy();                                                                   // 183\n};                                                                                                           // 184\n                                                                                                             // 185\nvar _defaults = {                                                                                            // 186\n  firstOption: 'Select an option',                                                                           // 187\n  isReactiveOptions: false                                                                                   // 188\n};                                                                                                           // 189\n                                                                                                             // 190\nAutoForm.Selectize = {};                                                                                     // 191\nAutoForm.Selectize.setDefaults = function (o) {                                                              // 192\n  if (_.has(o, 'firstOption')) {                                                                             // 193\n    _defaults.firstOption = o.firstOption;                                                                   // 194\n  }                                                                                                          // 195\n  if (_.has(o, 'isReactiveOptions')) {                                                                       // 196\n    _defaults.isReactiveOptions = o.isReactiveOptions;                                                       // 197\n  }                                                                                                          // 198\n}                                                                                                            // 199\n                                                                                                             // 200\nvar _refreshSelectizeOptions = function (selectize, options) {                                               // 201\n  var items = selectize.items;                                                                               // 202\n                                                                                                             // 203\n  selectize.clearOptions();                                                                                  // 204\n                                                                                                             // 205\n  _.each(options, function (option) {                                                                        // 206\n    if (option.optgroup) {                                                                                   // 207\n      selectize.addOptionGroup(option.optgroup, {label: option.optgroup});                                   // 208\n      _.each(option.items, function (groupOption) {                                                          // 209\n        selectize.addOption({value: groupOption.value, text: groupOption.label, optgroup: option.optgroup});\n        if (groupOption.selected) {                                                                          // 211\n          selectize.addItem(groupOption.value, true);                                                        // 212\n        }                                                                                                    // 213\n      });                                                                                                    // 214\n    } else if (option.value) {                                                                               // 215\n      selectize.addOption({value: option.value, text: option.label});                                        // 216\n      if (option.selected) {                                                                                 // 217\n        selectize.addItem(option.value, true);                                                               // 218\n      }                                                                                                      // 219\n    }                                                                                                        // 220\n  });                                                                                                        // 221\n                                                                                                             // 222\n  _.each(items, function (item) {                                                                            // 223\n    selectize.addItem(item, true);                                                                           // 224\n  });                                                                                                        // 225\n};                                                                                                           // 226\n                                                                                                             // 227\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/comerc_autoform-selectize/template.autoform-selectize-input.js                                   //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"afSelectizeInput\");                                                                    // 2\nTemplate[\"afSelectizeInput\"] = new Template(\"Template.afSelectizeInput\", (function() {                       // 3\n  var view = this;                                                                                           // 4\n  return HTML.INPUT(HTML.Attrs({                                                                             // 5\n    type: \"text\",                                                                                            // 6\n    value: function() {                                                                                      // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                   // 8\n    }                                                                                                        // 9\n  }, function() {                                                                                            // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                      // 11\n  }));                                                                                                       // 12\n}));                                                                                                         // 13\n                                                                                                             // 14\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/comerc_autoform-selectize/autoform-selectize-input.js                                            //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nAutoForm.addInputType(\"selectize-input\", {                                                                   // 1\n  template: \"afSelectizeInput\",                                                                              // 2\n  valueOut: function () {                                                                                    // 3\n    if (this[0].selectize) {                                                                                 // 4\n      return this[0].selectize.getValue();                                                                   // 5\n    }                                                                                                        // 6\n  },                                                                                                         // 7\n  valueConverters: {                                                                                         // 8\n    \"stringArray\": function (val) {                                                                          // 9\n      if (_.isArray(val)) {                                                                                  // 10\n        return _.map(val, function (item) {                                                                  // 11\n          return $.trim(item);                                                                               // 12\n        });                                                                                                  // 13\n      }                                                                                                      // 14\n      return val;                                                                                            // 15\n    },                                                                                                       // 16\n    \"number\": AutoForm.Utility.stringToNumber,                                                               // 17\n    \"numberArray\": function (val) {                                                                          // 18\n      if (_.isArray(val)) {                                                                                  // 19\n        return _.map(val, function (item) {                                                                  // 20\n          item = $.trim(item);                                                                               // 21\n          return AutoForm.Utility.stringToNumber(item);                                                      // 22\n        });                                                                                                  // 23\n      }                                                                                                      // 24\n      return val;                                                                                            // 25\n    },                                                                                                       // 26\n    \"boolean\": AutoForm.Utility.stringToBool,                                                                // 27\n    \"booleanArray\": function (val) {                                                                         // 28\n      if (_.isArray(val)) {                                                                                  // 29\n        return _.map(val, function (item) {                                                                  // 30\n          item = $.trim(item);                                                                               // 31\n          return AutoForm.Utility.stringToBool(item);                                                        // 32\n        });                                                                                                  // 33\n      }                                                                                                      // 34\n      return val;                                                                                            // 35\n    },                                                                                                       // 36\n    \"date\": AutoForm.Utility.stringToDate,                                                                   // 37\n    \"dateArray\": function (val) {                                                                            // 38\n      if (_.isArray(val)) {                                                                                  // 39\n        return _.map(val, function (item) {                                                                  // 40\n          item = $.trim(item);                                                                               // 41\n          return AutoForm.Utility.stringToDate(item);                                                        // 42\n        });                                                                                                  // 43\n      }                                                                                                      // 44\n      return val;                                                                                            // 45\n    }                                                                                                        // 46\n  }                                                                                                          // 47\n});                                                                                                          // 48\n                                                                                                             // 49\nTemplate.afSelectizeInput.helpers({                                                                          // 50\n  atts: function afSelectAtts() {                                                                            // 51\n    var atts = _.clone(this.atts);                                                                           // 52\n    // TODO: if (style == 'bootstrap3') ...                                                                  // 53\n    // Add bootstrap class                                                                                   // 54\n    atts = AutoForm.Utility.addClass(atts, \"form-control\");                                                  // 55\n    delete atts.selectizeOptions;                                                                            // 56\n    return atts;                                                                                             // 57\n  }                                                                                                          // 58\n});                                                                                                          // 59\n                                                                                                             // 60\nTemplate.afSelectizeInput.events({                                                                           // 61\n  \"click .selectized\": function (event) {                                                                    // 62\n    // TODO: https://github.com/selectize/selectize.js/issues/658                                            // 63\n    $(event.toElement).next().children(\":first-child\").children(\"input:first\").focus();                      // 64\n  }                                                                                                          // 65\n});                                                                                                          // 66\n                                                                                                             // 67\nTemplate.afSelectizeInput.rendered = function () {                                                           // 68\n  var selectizeOptions = this.data.atts.selectizeOptions || {};                                              // 69\n  // selectize rearranges one option from the middle of the list                                             // 70\n  // https://github.com/selectize/selectize.js/issues/640#issuecomment-71788203                              // 71\n  if (!selectizeOptions.sortField) {                                                                         // 72\n    selectizeOptions.sortField = 'text';                                                                     // 73\n  }                                                                                                          // 74\n  // instanciate selectize                                                                                   // 75\n  this.$('input').selectize(selectizeOptions);                                                               // 76\n};                                                                                                           // 77\n                                                                                                             // 78\nTemplate.afSelectizeInput.destroyed = function () {                                                          // 79\n  this.$('input')[0].selectize.destroy();                                                                    // 80\n};                                                                                                           // 81\n                                                                                                             // 82\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['comerc:autoform-selectize'] = {};\n\n})();\n","servePath":"/packages/comerc_autoform-selectize.js","sourceMap":{"version":3,"sources":["/packages/comerc_autoform-selectize/template.autoform-selectize.js","/packages/comerc_autoform-selectize/autoform-selectize.js","/packages/comerc_autoform-selectize/template.autoform-selectize-input.js","/packages/comerc_autoform-selectize/autoform-selectize-input.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kH;;;;;;;;;;;;;;;;;;ACtmH;;;;;;;;;;;;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kH;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kH","file":"/packages/comerc_autoform-selectize.js","sourcesContent":["\nTemplate.__checkName(\"afSelectize\");\nTemplate[\"afSelectize\"] = new Template(\"Template.afSelectize\", (function() {\n  var view = this;\n  return HTML.SELECT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"isReactiveOptions\"));\n  }, function() {\n    return [ \"\\n      \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n    }, function() {\n      return [ \"\\n        \", Blaze.If(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n      }, function() {\n        return [ \"\\n          \", HTML.OPTGROUP({\n          label: function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n          }\n        }, \"\\n          \", Blaze.Each(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n        }, function() {\n          return [ \"\\n          \", HTML.OPTION(HTML.Attrs(function() {\n            return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n          }), Blaze.View(\"lookup:..label\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n          })), \"\\n          \" ];\n        }), \"\\n          \"), \"\\n        \" ];\n      }, function() {\n        return [ \"\\n          \", HTML.OPTION(HTML.Attrs(function() {\n          return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n        }), Blaze.View(\"lookup:..label\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n        })), \"\\n        \" ];\n      }), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","AutoForm.addInputType(\"selectize\", {\n  template: \"afSelectize\",\n  valueOut: function () {\n    // FIXME: may be related https://github.com/aldeed/meteor-autoform/issues/569\n    if (this[0].selectize) {\n      return this[0].selectize.getValue();\n    }\n  },\n  valueConverters: {\n    \"stringArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          return $.trim(item);\n        });\n      }\n      return val;\n    },\n    \"number\": AutoForm.Utility.stringToNumber,\n    \"numberArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToNumber(item);\n        });\n      }\n      return val;\n    },\n    \"boolean\": AutoForm.Utility.stringToBool,\n    \"booleanArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToBool(item);\n        });\n      }\n      return val;\n    },\n    \"date\": AutoForm.Utility.stringToDate,\n    \"dateArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToDate(item);\n        });\n      }\n      return val;\n    }\n  },\n  contextAdjust: function (context) {\n    //can fix issues with some browsers selecting the firstOption instead of the selected option\n    context.atts.autocomplete = 'off';\n\n    var itemAtts = _.omit(context.atts, 'firstOption');\n    var firstOption = context.atts.firstOption;\n\n    // build items list\n    context.items = [];\n\n    // If a firstOption was provided, add that to the items list first\n    if (firstOption === false) {\n      // nothing\n    } else if (typeof firstOption === 'string' || typeof _defaults.firstOption === \"string\") {\n      context.items.push({\n        name: context.name,\n        label: (typeof firstOption === 'string' ? firstOption : _defaults.firstOption),\n        value: '',\n        // _id must be included because it is a special property that\n        // #each uses to track unique list items when adding and removing them\n        // See https://github.com/meteor/meteor/issues/2174\n        //\n        // Setting this to an empty string caused problems if option with value\n        // 1 was in the options list because Spacebars evaluates \"\" to 1 and\n        // considers that a duplicate.\n        // See https://github.com/aldeed/meteor-autoform/issues/656\n        _id: 'AUTOFORM_EMPTY_FIRST_OPTION',\n        selected: false,\n        // atts: itemAtts\n      });\n    }\n\n    var fetchOpt = function fetchOpt(opt) {\n      return {\n        name: context.name,\n        label: opt.label,\n        value: opt.value,\n        // _id must be included because it is a special property that\n        // #each uses to track unique list items when adding and removing them\n        // See https://github.com/meteor/meteor/issues/2174\n        _id: opt.value,\n        selected: _.isArray(context.value) ?\n          _.include(context.value, opt.value) : (opt.value === context.value),\n        // atts: itemAtts\n      };\n    };\n\n    // Add all defined options\n    _.each(context.selectOptions, function(opt) {\n      if (opt.optgroup) {\n        context.items.push({\n          optgroup: opt.optgroup,\n          items: _.map(opt.options, fetchOpt)\n        });\n      } else {\n        context.items.push(fetchOpt(opt));\n      }\n    });\n\n    return context;\n  }\n});\n\nTemplate.afSelectize.helpers({\n  optionAtts: function () {\n    var item = this\n    var atts = {\n      value: item.value\n    };\n    if (item.selected) {\n      atts.selected = '';\n    }\n    return atts;\n  },\n  atts: function () {\n    var atts = _.clone(this.atts);\n    // TODO: if (style == 'bootstrap3') ...\n    // Add bootstrap class\n    atts = AutoForm.Utility.addClass(atts, 'form-control');\n    delete atts.selectizeOptions;\n    delete atts.isReactiveOptions;\n    return atts;\n  },\n  isReactiveOptions: function () {\n    var isReactiveOptions;\n    if (_.has(this.atts, 'isReactiveOptions')) {\n      isReactiveOptions = this.atts.isReactiveOptions;\n    } else {\n      isReactiveOptions = _defaults.isReactiveOptions;\n    }\n    return isReactiveOptions;\n  }\n});\n\nTemplate.afSelectize.events({\n  \"click .selectized\": function (event) {\n    // TODO: https://github.com/selectize/selectize.js/issues/658\n    $(event.toElement).next().children(\":first-child\").children(\"input:first\").focus();\n  }\n});\n\nTemplate.afSelectize.rendered = function () {\n  var selectizeOptions = this.data.atts.selectizeOptions || {};\n  // selectize rearranges one option from the middle of the list\n  // https://github.com/selectize/selectize.js/issues/640#issuecomment-71788203\n  if (!selectizeOptions.sortField) {\n    selectizeOptions.sortField = 'text';\n  }\n  // instanciate selectize\n  this.$('select').selectize(selectizeOptions);\n\n  var isReactiveOptions;\n  if (_.has(this.data.atts, 'isReactiveOptions')) {\n    isReactiveOptions = this.data.atts.isReactiveOptions;\n  } else {\n    isReactiveOptions = _defaults.isReactiveOptions;\n  }\n\n  if (isReactiveOptions) {\n    var test = false;\n    var selectize = this.$('select')[0].selectize;\n    this.autorun(function () {\n      var items = Template.currentData().items;\n      // FIXED double autorun\n      // TODO may be computation.firstRun?\n      test = !test;\n      if (test) {\n        _refreshSelectizeOptions(selectize, items);\n      }\n    });\n  }\n};\n\nTemplate.afSelectize.destroyed = function () {\n  this.$('select')[0].selectize.destroy();\n};\n\nvar _defaults = {\n  firstOption: 'Select an option',\n  isReactiveOptions: false\n};\n\nAutoForm.Selectize = {};\nAutoForm.Selectize.setDefaults = function (o) {\n  if (_.has(o, 'firstOption')) {\n    _defaults.firstOption = o.firstOption;\n  }\n  if (_.has(o, 'isReactiveOptions')) {\n    _defaults.isReactiveOptions = o.isReactiveOptions;\n  }\n}\n\nvar _refreshSelectizeOptions = function (selectize, options) {\n  var items = selectize.items;\n\n  selectize.clearOptions();\n\n  _.each(options, function (option) {\n    if (option.optgroup) {\n      selectize.addOptionGroup(option.optgroup, {label: option.optgroup});\n      _.each(option.items, function (groupOption) {\n        selectize.addOption({value: groupOption.value, text: groupOption.label, optgroup: option.optgroup});\n        if (groupOption.selected) {\n          selectize.addItem(groupOption.value, true);\n        }\n      });\n    } else if (option.value) {\n      selectize.addOption({value: option.value, text: option.label});\n      if (option.selected) {\n        selectize.addItem(option.value, true);\n      }\n    }\n  });\n\n  _.each(items, function (item) {\n    selectize.addItem(item, true);\n  });\n};\n","\nTemplate.__checkName(\"afSelectizeInput\");\nTemplate[\"afSelectizeInput\"] = new Template(\"Template.afSelectizeInput\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","AutoForm.addInputType(\"selectize-input\", {\n  template: \"afSelectizeInput\",\n  valueOut: function () {\n    if (this[0].selectize) {\n      return this[0].selectize.getValue();\n    }\n  },\n  valueConverters: {\n    \"stringArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          return $.trim(item);\n        });\n      }\n      return val;\n    },\n    \"number\": AutoForm.Utility.stringToNumber,\n    \"numberArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToNumber(item);\n        });\n      }\n      return val;\n    },\n    \"boolean\": AutoForm.Utility.stringToBool,\n    \"booleanArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToBool(item);\n        });\n      }\n      return val;\n    },\n    \"date\": AutoForm.Utility.stringToDate,\n    \"dateArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToDate(item);\n        });\n      }\n      return val;\n    }\n  }\n});\n\nTemplate.afSelectizeInput.helpers({\n  atts: function afSelectAtts() {\n    var atts = _.clone(this.atts);\n    // TODO: if (style == 'bootstrap3') ...\n    // Add bootstrap class\n    atts = AutoForm.Utility.addClass(atts, \"form-control\");\n    delete atts.selectizeOptions;\n    return atts;\n  }\n});\n\nTemplate.afSelectizeInput.events({\n  \"click .selectized\": function (event) {\n    // TODO: https://github.com/selectize/selectize.js/issues/658\n    $(event.toElement).next().children(\":first-child\").children(\"input:first\").focus();\n  }\n});\n\nTemplate.afSelectizeInput.rendered = function () {\n  var selectizeOptions = this.data.atts.selectizeOptions || {};\n  // selectize rearranges one option from the middle of the list\n  // https://github.com/selectize/selectize.js/issues/640#issuecomment-71788203\n  if (!selectizeOptions.sortField) {\n    selectizeOptions.sortField = 'text';\n  }\n  // instanciate selectize\n  this.$('input').selectize(selectizeOptions);\n};\n\nTemplate.afSelectizeInput.destroyed = function () {\n  this.$('input')[0].selectize.destroy();\n};\n"]}}]