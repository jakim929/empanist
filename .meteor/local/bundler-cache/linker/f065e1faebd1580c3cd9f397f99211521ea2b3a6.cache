[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar AutoForm = Package['aldeed:autoform'].AutoForm;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////\n//                                                                            //\n// packages/comerc_autoform-typeahead/template.autoform-typeahead.js          //\n//                                                                            //\n////////////////////////////////////////////////////////////////////////////////\n                                                                              //\n                                                                              // 1\nTemplate.__checkName(\"afTypeahead\");                                          // 2\nTemplate[\"afTypeahead\"] = new Template(\"Template.afTypeahead\", (function() {  // 3\n  var view = this;                                                            // 4\n  return HTML.INPUT(HTML.Attrs({                                              // 5\n    type: \"text\",                                                             // 6\n    value: function() {                                                       // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));    // 8\n    }                                                                         // 9\n  }, function() {                                                             // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                       // 11\n  }));                                                                        // 12\n}));                                                                          // 13\n                                                                              // 14\n////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////\n//                                                                            //\n// packages/comerc_autoform-typeahead/autoform-typeahead.js                   //\n//                                                                            //\n////////////////////////////////////////////////////////////////////////////////\n                                                                              //\nAutoForm.addInputType(\"typeahead\", {                                          // 1\n  template: \"afTypeahead\",                                                    // 2\n  valueOut: function () {                                                     // 3\n    return this.typeahead('val');                                             // 4\n  },                                                                          // 5\n  valueConverters: {                                                          // 6\n    \"number\": AutoForm.Utility.stringToNumber,                                // 7\n    \"numberArray\": function (val) {                                           // 8\n      if (_.isArray(val)) {                                                   // 9\n        return _.map(val, function (item) {                                   // 10\n          item = $.trim(item);                                                // 11\n          return AutoForm.Utility.stringToNumber(item);                       // 12\n        });                                                                   // 13\n      }                                                                       // 14\n      return val;                                                             // 15\n    },                                                                        // 16\n    \"boolean\": AutoForm.Utility.stringToBool,                                 // 17\n    \"booleanArray\": function (val) {                                          // 18\n      if (_.isArray(val)) {                                                   // 19\n        return _.map(val, function (item) {                                   // 20\n          item = $.trim(item);                                                // 21\n          return AutoForm.Utility.stringToBool(item);                         // 22\n        });                                                                   // 23\n      }                                                                       // 24\n      return val;                                                             // 25\n    },                                                                        // 26\n    \"date\": AutoForm.Utility.stringToDate,                                    // 27\n    \"dateArray\": function (val) {                                             // 28\n      if (_.isArray(val)) {                                                   // 29\n        return _.map(val, function (item) {                                   // 30\n          item = $.trim(item);                                                // 31\n          return AutoForm.Utility.stringToDate(item);                         // 32\n        });                                                                   // 33\n      }                                                                       // 34\n      return val;                                                             // 35\n    }                                                                         // 36\n  }                                                                           // 37\n});                                                                           // 38\n                                                                              // 39\nTemplate.afTypeahead.helpers({                                                // 40\n  atts: function () {                                                         // 41\n    var atts = _.clone(this.atts);                                            // 42\n    atts = AutoForm.Utility.addClass(atts, \"twitter-typeahead form-control\");\n    delete atts.typeaheadOptions;                                             // 44\n    delete atts.typeaheadDatasets;                                            // 45\n    return atts;                                                              // 46\n  }                                                                           // 47\n});                                                                           // 48\n                                                                              // 49\nTemplate.afTypeahead.rendered = function () {                                 // 50\n  // instanciate typeahead                                                    // 51\n  var substringMatcher = function(strs) {                                     // 52\n    return function findMatches(q, cb) {                                      // 53\n      var matches, substrRegex;                                               // 54\n      // an array that will be populated with substring matches               // 55\n      matches = [];                                                           // 56\n      // regex used to determine if a string contains the substring `q`       // 57\n      substrRegex = new RegExp(q, 'i');                                       // 58\n      // iterate through the pool of strings and for any string that          // 59\n      // contains the substring `q`, add it to the `matches` array            // 60\n      $.each(strs, function(i, str) {                                         // 61\n        if (substrRegex.test(str.label)) {                                    // 62\n          // the typeahead jQuery plugin expects suggestions to a             // 63\n          // JavaScript object, refer to typeahead docs for more info         // 64\n          matches.push({ value: str.label });                                 // 65\n        }                                                                     // 66\n      });                                                                     // 67\n      cb(matches);                                                            // 68\n    };                                                                        // 69\n  };                                                                          // 70\n  var options = {                                                             // 71\n    highlight: true                                                           // 72\n  };                                                                          // 73\n  if (this.data.atts.typeaheadOptions) {                                      // 74\n    _.extend(options, this.data.atts.typeaheadOptions);                       // 75\n  }                                                                           // 76\n  var datasets = {                                                            // 77\n    source: substringMatcher(this.data.selectOptions)                         // 78\n  };                                                                          // 79\n  if (this.data.atts.typeaheadDatasets) {                                     // 80\n    _.extend(datasets, this.data.atts.typeaheadDatasets);                     // 81\n  }                                                                           // 82\n  this.$('.twitter-typeahead').typeahead(options, datasets);                  // 83\n};                                                                            // 84\n                                                                              // 85\nTemplate.afTypeahead.destroyed = function () {                                // 86\n  this.$('.twitter-typeahead').typeahead('destroy');                          // 87\n};                                                                            // 88\n                                                                              // 89\n////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['comerc:autoform-typeahead'] = {};\n\n})();\n","servePath":"/packages/comerc_autoform-typeahead.js","sourceMap":{"version":3,"sources":["/packages/comerc_autoform-typeahead/template.autoform-typeahead.js","/packages/comerc_autoform-typeahead/autoform-typeahead.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mF;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mF","file":"/packages/comerc_autoform-typeahead.js","sourcesContent":["\nTemplate.__checkName(\"afTypeahead\");\nTemplate[\"afTypeahead\"] = new Template(\"Template.afTypeahead\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","AutoForm.addInputType(\"typeahead\", {\n  template: \"afTypeahead\",\n  valueOut: function () {\n    return this.typeahead('val');\n  },\n  valueConverters: {\n    \"number\": AutoForm.Utility.stringToNumber,\n    \"numberArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToNumber(item);\n        });\n      }\n      return val;\n    },\n    \"boolean\": AutoForm.Utility.stringToBool,\n    \"booleanArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToBool(item);\n        });\n      }\n      return val;\n    },\n    \"date\": AutoForm.Utility.stringToDate,\n    \"dateArray\": function (val) {\n      if (_.isArray(val)) {\n        return _.map(val, function (item) {\n          item = $.trim(item);\n          return AutoForm.Utility.stringToDate(item);\n        });\n      }\n      return val;\n    }\n  }\n});\n\nTemplate.afTypeahead.helpers({\n  atts: function () {\n    var atts = _.clone(this.atts);\n    atts = AutoForm.Utility.addClass(atts, \"twitter-typeahead form-control\");\n    delete atts.typeaheadOptions;\n    delete atts.typeaheadDatasets;\n    return atts;\n  }\n});\n\nTemplate.afTypeahead.rendered = function () {\n  // instanciate typeahead\n  var substringMatcher = function(strs) {\n    return function findMatches(q, cb) {\n      var matches, substrRegex;\n      // an array that will be populated with substring matches\n      matches = [];\n      // regex used to determine if a string contains the substring `q`\n      substrRegex = new RegExp(q, 'i');\n      // iterate through the pool of strings and for any string that\n      // contains the substring `q`, add it to the `matches` array\n      $.each(strs, function(i, str) {\n        if (substrRegex.test(str.label)) {\n          // the typeahead jQuery plugin expects suggestions to a\n          // JavaScript object, refer to typeahead docs for more info\n          matches.push({ value: str.label });\n        }\n      });\n      cb(matches);\n    };\n  };\n  var options = {\n    highlight: true\n  };\n  if (this.data.atts.typeaheadOptions) {\n    _.extend(options, this.data.atts.typeaheadOptions);\n  }\n  var datasets = {\n    source: substringMatcher(this.data.selectOptions)\n  };\n  if (this.data.atts.typeaheadDatasets) {\n    _.extend(datasets, this.data.atts.typeaheadDatasets);\n  }\n  this.$('.twitter-typeahead').typeahead(options, datasets);\n};\n\nTemplate.afTypeahead.destroyed = function () {\n  this.$('.twitter-typeahead').typeahead('destroy');\n};\n"]}}]