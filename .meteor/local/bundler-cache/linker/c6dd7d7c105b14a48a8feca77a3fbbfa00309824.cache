[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar _ = Package.underscore._;\nvar moment = Package['momentjs:moment'].moment;\nvar AutoForm = Package['aldeed:autoform'].AutoForm;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar Utility;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/utilities/utility.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nUtility = {}                                                                                                           // 1\n                                                                                                                       // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/utilities/initialize-select.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nUtility.initializeSelect = function() {                                                                                // 1\n  var template = this                                                                                                  // 2\n  var select = template.$('select')                                                                                    // 3\n  select.material_select()                                                                                             // 4\n                                                                                                                       // 5\n  var initialize = _.debounce(function () {                                                                            // 6\n    select.material_select()                                                                                           // 7\n  }, 500)                                                                                                              // 8\n                                                                                                                       // 9\n  template.autorun(function () {                                                                                       // 10\n    // reinitialize select when data changes                                                                           // 11\n    Template.currentData()                                                                                             // 12\n    initialize()                                                                                                       // 13\n  })                                                                                                                   // 14\n}                                                                                                                      // 15\n                                                                                                                       // 16\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/utilities/dsk.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nUtility.dsk = function() {                                                                                             // 1\n  return {                                                                                                             // 2\n    'data-schema-key': this.atts['data-schema-key']                                                                    // 3\n  };                                                                                                                   // 4\n};                                                                                                                     // 5\n                                                                                                                       // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/utilities/selected-atts-adjust.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nUtility.selectedAttsAdjust = function() {                                                                              // 1\n  var atts = _.clone(this.atts)                                                                                        // 2\n                                                                                                                       // 3\n  if (this.selected) {                                                                                                 // 4\n    atts.checked = \"\"                                                                                                  // 5\n  }                                                                                                                    // 6\n                                                                                                                       // 7\n  atts.id = atts.id + \"_\" + this._id                                                                                   // 8\n  delete atts['data-schema-key']                                                                                       // 9\n  return atts                                                                                                          // 10\n}                                                                                                                      // 11\n                                                                                                                       // 12\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/utilities/atts-toggle-invalid-class.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nUtility.attsToggleInvalidClass = function() {                                                                          // 1\n  var atts    = _.clone(this.atts);                                                                                    // 2\n  var context = AutoForm.getFormSchema().namedContext(AutoForm.getFormId());                                           // 3\n                                                                                                                       // 4\n  if (context.keyIsInvalid(atts.name)) {                                                                               // 5\n    atts = AutoForm.Utility.addClass(atts, 'invalid');                                                                 // 6\n  }                                                                                                                    // 7\n                                                                                                                       // 8\n  return atts;                                                                                                         // 9\n}                                                                                                                      // 10\n                                                                                                                       // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/utilities/atts-check-selected.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nUtility.attsCheckSelected = function() {                                                                               // 1\n  var atts = Utility.attsToggleInvalidClass.call(this);                                                                // 2\n  if (this.selected) {                                                                                                 // 3\n    atts.checked = '';                                                                                                 // 4\n  }                                                                                                                    // 5\n  return atts;                                                                                                         // 6\n};                                                                                                                     // 7\n                                                                                                                       // 8\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/utilities/option-atts.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nUtility.optionAtts = function() {                                                                                      // 1\n  var atts, item;                                                                                                      // 2\n  item = this;                                                                                                         // 3\n  atts = {                                                                                                             // 4\n    value: item.value                                                                                                  // 5\n  };                                                                                                                   // 6\n  if (item.selected) {                                                                                                 // 7\n    atts.selected = '';                                                                                                // 8\n  }                                                                                                                    // 9\n  return atts;                                                                                                         // 10\n};                                                                                                                     // 11\n                                                                                                                       // 12\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/boolean-checkbox/template.boolean-checkbox.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afCheckbox_materialize\");                                                                        // 2\nTemplate[\"afCheckbox_materialize\"] = new Template(\"Template.afCheckbox_materialize\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.P(\"\\n    \", HTML.INPUT(HTML.Attrs({                                                                      // 5\n    type: \"checkbox\",                                                                                                  // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  })), \"\\n    \", HTML.LABEL({                                                                                          // 12\n    \"for\": function() {                                                                                                // 13\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));                                             // 14\n    }                                                                                                                  // 15\n  }, Blaze.View(\"lookup:afFieldLabelText\", function() {                                                                // 16\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                          // 17\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 18\n    }));                                                                                                               // 19\n  })), \"\\n  \");                                                                                                        // 20\n}));                                                                                                                   // 21\n                                                                                                                       // 22\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/boolean-checkbox/boolean-checkbox.js                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afCheckbox_materialize.helpers({                                                                              // 1\n atts: Utility.attsToggleInvalidClass                                                                                  // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/boolean-radios/template.boolean-radios.js                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afBooleanRadioGroup_materialize\");                                                               // 2\nTemplate[\"afBooleanRadioGroup_materialize\"] = new Template(\"Template.afBooleanRadioGroup_materialize\", (function() {   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    \"class\": function() {                                                                                              // 6\n      return [ \"af-radio-group \", Spacebars.mustache(view.lookup(\"rowColumnAtts\")) ];                                  // 7\n    }                                                                                                                  // 8\n  }, function() {                                                                                                      // 9\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 10\n  }), \"\\n    \", HTML.P({                                                                                               // 11\n    \"class\": function() {                                                                                              // 12\n      return Spacebars.mustache(view.lookup(\"falseColumnAtts\"));                                                       // 13\n    }                                                                                                                  // 14\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({                                                                               // 15\n    id: function() {                                                                                                   // 16\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_false\" ];                               // 17\n    },                                                                                                                 // 18\n    type: \"radio\",                                                                                                     // 19\n    value: \"false\"                                                                                                     // 20\n  }, function() {                                                                                                      // 21\n    return Spacebars.attrMustache(view.lookup(\"falseAtts\"));                                                           // 22\n  })), \"\\n      \", HTML.LABEL({                                                                                        // 23\n    \"for\": function() {                                                                                                // 24\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_false\" ];                               // 25\n    }                                                                                                                  // 26\n  }, Spacebars.With(function() {                                                                                       // 27\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"falseLabel\"));                                           // 28\n  }, function() {                                                                                                      // 29\n    return Blaze.View(\"lookup:.\", function() {                                                                         // 30\n      return Spacebars.mustache(view.lookup(\".\"));                                                                     // 31\n    });                                                                                                                // 32\n  }, function() {                                                                                                      // 33\n    return \"False\";                                                                                                    // 34\n  })), \"\\n    \"), \"\\n    \", HTML.P({                                                                                   // 35\n    \"class\": function() {                                                                                              // 36\n      return Spacebars.mustache(view.lookup(\"trueColumnAtts\"));                                                        // 37\n    }                                                                                                                  // 38\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({                                                                               // 39\n    id: function() {                                                                                                   // 40\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_true\" ];                                // 41\n    },                                                                                                                 // 42\n    type: \"radio\",                                                                                                     // 43\n    value: \"true\"                                                                                                      // 44\n  }, function() {                                                                                                      // 45\n    return Spacebars.attrMustache(view.lookup(\"trueAtts\"));                                                            // 46\n  })), \"\\n      \", HTML.LABEL({                                                                                        // 47\n    \"for\": function() {                                                                                                // 48\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_true\" ];                                // 49\n    }                                                                                                                  // 50\n  }, Spacebars.With(function() {                                                                                       // 51\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"trueLabel\"));                                            // 52\n  }, function() {                                                                                                      // 53\n    return Blaze.View(\"lookup:.\", function() {                                                                         // 54\n      return Spacebars.mustache(view.lookup(\".\"));                                                                     // 55\n    });                                                                                                                // 56\n  }, function() {                                                                                                      // 57\n    return \"True\";                                                                                                     // 58\n  })), \"\\n    \"), \"\\n  \");                                                                                             // 59\n}));                                                                                                                   // 60\n                                                                                                                       // 61\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/boolean-radios/boolean-radios.js                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afBooleanRadioGroup_materialize.helpers({                                                                     // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\nTemplate.afBooleanRadioGroup_materialize.helpers({                                                                     // 5\n  falseAtts: function() {                                                                                              // 6\n    var atts;                                                                                                          // 7\n    atts = _.omit(this.atts, 'id', 'trueLabel', 'falseLabel', 'data-schema-key');                                      // 8\n    if (this.value === false) {                                                                                        // 9\n      atts.checked = '';                                                                                               // 10\n    }                                                                                                                  // 11\n    return atts;                                                                                                       // 12\n  },                                                                                                                   // 13\n  trueAtts: function() {                                                                                               // 14\n    var atts;                                                                                                          // 15\n    atts = _.omit(this.atts, 'id', 'trueLabel', 'falseLabel', 'data-schema-key');                                      // 16\n    if (this.value === true) {                                                                                         // 17\n      atts.checked = '';                                                                                               // 18\n    }                                                                                                                  // 19\n    return atts;                                                                                                       // 20\n  },                                                                                                                   // 21\n  dsk: function() {                                                                                                    // 22\n    return {                                                                                                           // 23\n      'data-schema-key': this.atts['data-schema-key']                                                                  // 24\n    };                                                                                                                 // 25\n  }                                                                                                                    // 26\n});                                                                                                                    // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/boolean-select/template.boolean-select.js                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afBooleanSelect_materialize\");                                                                   // 2\nTemplate[\"afBooleanSelect_materialize\"] = new Template(\"Template.afBooleanSelect_materialize\", (function() {           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.SELECT(HTML.Attrs(function() {                                                                           // 5\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 6\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 7\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n      \", HTML.OPTION(HTML.Attrs(function() {                                                           // 10\n      return Spacebars.attrMustache(view.lookup(\"optionAtts\"));                                                        // 11\n    }), Blaze.View(\"lookup:..label\", function() {                                                                      // 12\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                             // 13\n    })), \"\\n    \" ];                                                                                                   // 14\n  }), \"\\n  \");                                                                                                         // 15\n}));                                                                                                                   // 16\n                                                                                                                       // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/boolean-select/boolean-select.js                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afBooleanSelect_materialize.helpers({                                                                         // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\nTemplate.afBooleanSelect_materialize.helpers({                                                                         // 5\n  optionAtts: Utility.optionAtts                                                                                       // 6\n});                                                                                                                    // 7\n                                                                                                                       // 8\nTemplate.afBooleanSelect_materialize.onRendered(Utility.initializeSelect);                                             // 9\n                                                                                                                       // 10\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/button/template.button.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputButton_materialize\");                                                                     // 2\nTemplate[\"afInputButton_materialize\"] = new Template(\"Template.afInputButton_materialize\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"button\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"attsPlusBtnClassMaterializeCss\"), view.lookup(\"atts\"));                 // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/color/template.color.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputColor_materialize\");                                                                      // 2\nTemplate[\"afInputColor_materialize\"] = new Template(\"Template.afInputColor_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"color\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/color/color.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputColor_materialize.helpers({                                                                            // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/contenteditable/template.contenteditable.js                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afContenteditable_materialize\");                                                                 // 2\nTemplate[\"afContenteditable_materialize\"] = new Template(\"Template.afContenteditable_materialize\", (function() {       // 3\n  var view = this;                                                                                                     // 4\n  return [ Blaze.View(\"lookup:getValue\", function() {                                                                  // 5\n    return Spacebars.mustache(view.lookup(\"getValue\"), Spacebars.dot(view.lookup(\".\"), \"value\"));                      // 6\n  }), \"\\n  \", HTML.DIV(HTML.Attrs({                                                                                    // 7\n    contenteditable: \"true\"                                                                                            // 8\n  }, function() {                                                                                                      // 9\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 10\n  })) ];                                                                                                               // 11\n}));                                                                                                                   // 12\n                                                                                                                       // 13\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/date/template.date.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputDate_materialize\");                                                                       // 2\nTemplate[\"afInputDate_materialize\"] = new Template(\"Template.afInputDate_materialize\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"date\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/date/date.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputDate_materialize.helpers({                                                                             // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/datetime/template.datetime.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputDateTime_materialize\");                                                                   // 2\nTemplate[\"afInputDateTime_materialize\"] = new Template(\"Template.afInputDateTime_materialize\", (function() {           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"datetime\",                                                                                                  // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/datetime/datetime.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputDateTime_materialize.helpers({                                                                         // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/datetime-local/template.datetime-local.js                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputDateTimeLocal_materialize\");                                                              // 2\nTemplate[\"afInputDateTimeLocal_materialize\"] = new Template(\"Template.afInputDateTimeLocal_materialize\", (function() {\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"datetime-local\",                                                                                            // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/datetime-local/datetime-local.js                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputDateTimeLocal_materialize.helpers({                                                                    // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/email/template.email.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputEmail_materialize\");                                                                      // 2\nTemplate[\"afInputEmail_materialize\"] = new Template(\"Template.afInputEmail_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"email\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/email/email.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputEmail_materialize.helpers({                                                                            // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/file/template.file.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputFile_materialize\");                                                                       // 2\nTemplate[\"afInputFile_materialize\"] = new Template(\"Template.afInputFile_materialize\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"file\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/hidden/template.hidden.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputHidden_materialize\");                                                                     // 2\nTemplate[\"afInputHidden_materialize\"] = new Template(\"Template.afInputHidden_materialize\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"hidden\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/icon/template.icon.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afIcon_materialize\");                                                                            // 2\nTemplate[\"afIcon_materialize\"] = new Template(\"Template.afIcon_materialize\", (function() {                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.I({                                                                                                      // 5\n    \"class\": \"material-icons prefix\"                                                                                   // 6\n  }, Blaze.View(\"lookup:..icon\", function() {                                                                          // 7\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"icon\"));                                                // 8\n  }));                                                                                                                 // 9\n}));                                                                                                                   // 10\n                                                                                                                       // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/image/template.image.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputImage_materialize\");                                                                      // 2\nTemplate[\"afInputImage_materialize\"] = new Template(\"Template.afInputImage_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"image\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/month/template.month.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputMonth_materialize\");                                                                      // 2\nTemplate[\"afInputMonth_materialize\"] = new Template(\"Template.afInputMonth_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"month\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/month/month.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputMonth_materialize.helpers({                                                                            // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/number/template.number.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputNumber_materialize\");                                                                     // 2\nTemplate[\"afInputNumber_materialize\"] = new Template(\"Template.afInputNumber_materialize\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"number\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/number/number.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputNumber_materialize.helpers({                                                                           // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/password/template.password.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputPassword_materialize\");                                                                   // 2\nTemplate[\"afInputPassword_materialize\"] = new Template(\"Template.afInputPassword_materialize\", (function() {           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"password\",                                                                                                  // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/password/password.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputPassword_materialize.helpers({                                                                         // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\nTemplate.afInputPassword_materialize.rendered = function() {                                                           // 5\n    this.$('textarea').characterCounter();                                                                             // 6\n}                                                                                                                      // 7\n                                                                                                                       // 8\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/radio/template.radio.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afRadio_materialize\");                                                                           // 2\nTemplate[\"afRadio_materialize\"] = new Template(\"Template.afRadio_materialize\", (function() {                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.P(\"\\n    \", HTML.INPUT(HTML.Attrs({                                                                      // 5\n    type: \"radio\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  })), \"\\n    \", HTML.LABEL({                                                                                          // 12\n    \"for\": function() {                                                                                                // 13\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));                                             // 14\n    }                                                                                                                  // 15\n  }, Blaze.View(\"lookup:afFieldLabelText\", function() {                                                                // 16\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                          // 17\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 18\n    }));                                                                                                               // 19\n  })), \"\\n  \");                                                                                                        // 20\n}));                                                                                                                   // 21\n                                                                                                                       // 22\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/radio/radio.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afRadio_materialize.helpers({                                                                                 // 1\n  atts:     Utility.attsCheckSelected,                                                                                 // 2\n  dsk:      Utility.dsk,                                                                                               // 3\n});                                                                                                                    // 4\n                                                                                                                       // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/range/template.range.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputRange_materialize\");                                                                      // 2\nTemplate[\"afInputRange_materialize\"] = new Template(\"Template.afInputRange_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.P({                                                                                                      // 5\n    \"class\": \"range-field\"                                                                                             // 6\n  }, \"\\n    \", HTML.INPUT(HTML.Attrs({                                                                                 // 7\n    type: \"range\",                                                                                                     // 8\n    value: function() {                                                                                                // 9\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 10\n    }                                                                                                                  // 11\n  }, function() {                                                                                                      // 12\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 13\n  })), \"\\n  \");                                                                                                        // 14\n}));                                                                                                                   // 15\n                                                                                                                       // 16\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/reset/template.reset.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputReset_materialize\");                                                                      // 2\nTemplate[\"afInputReset_materialize\"] = new Template(\"Template.afInputReset_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"reset\",                                                                                                     // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"attsPlusBtnClassMaterializeCss\"), view.lookup(\"atts\"));                 // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/search/template.search.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputSearch_materialize\");                                                                     // 2\nTemplate[\"afInputSearch_materialize\"] = new Template(\"Template.afInputSearch_materialize\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"search\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select/template.select.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afSelect_materialize\");                                                                          // 2\nTemplate[\"afSelect_materialize\"] = new Template(\"Template.afSelect_materialize\", (function() {                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.SELECT(HTML.Attrs(function() {                                                                           // 5\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 6\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 7\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n      \", Blaze.If(function() {                                                                         // 10\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));                                              // 11\n    }, function() {                                                                                                    // 12\n      return [ \"\\n        \", HTML.OPTGROUP({                                                                           // 13\n        label: function() {                                                                                            // 14\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));                                      // 15\n        }                                                                                                              // 16\n      }, \"\\n          \", Blaze.Each(function() {                                                                       // 17\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                               // 18\n      }, function() {                                                                                                  // 19\n        return [ \"\\n          \", HTML.OPTION(HTML.Attrs(function() {                                                   // 20\n          return Spacebars.attrMustache(view.lookup(\"optionAtts\"));                                                    // 21\n        }), Blaze.View(\"lookup:..label\", function() {                                                                  // 22\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                         // 23\n        })), \"\\n          \" ];                                                                                         // 24\n      }), \"\\n        \"), \"\\n      \" ];                                                                                 // 25\n    }, function() {                                                                                                    // 26\n      return [ \"\\n        \", HTML.OPTION(HTML.Attrs(function() {                                                       // 27\n        return Spacebars.attrMustache(view.lookup(\"optionAtts\"));                                                      // 28\n      }), Blaze.View(\"lookup:..label\", function() {                                                                    // 29\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                           // 30\n      })), \"\\n      \" ];                                                                                               // 31\n    }), \"\\n    \" ];                                                                                                    // 32\n  }), \"\\n  \");                                                                                                         // 33\n}));                                                                                                                   // 34\n                                                                                                                       // 35\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select/select.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afSelect_materialize.helpers({                                                                                // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\nTemplate.afSelect_materialize.helpers({                                                                                // 4\n  optionAtts: Utility.optionAtts                                                                                       // 5\n});                                                                                                                    // 6\n                                                                                                                       // 7\nTemplate.afSelect_materialize.onRendered(Utility.initializeSelect);                                                    // 8\n                                                                                                                       // 9\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-checkbox/template.select-checkbox.js                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afCheckboxGroup_materialize\");                                                                   // 2\nTemplate[\"afCheckboxGroup_materialize\"] = new Template(\"Template.afCheckboxGroup_materialize\", (function() {           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    \"class\": \"af-checkbox-group collection\"                                                                            // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 8\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 9\n    return Spacebars.call(view.lookup(\"items\"));                                                                       // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({                                                      // 12\n      type: \"checkbox\",                                                                                                // 13\n      value: function() {                                                                                              // 14\n        return Spacebars.mustache(view.lookup(\"value\"));                                                               // 15\n      }                                                                                                                // 16\n    }, function() {                                                                                                    // 17\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));                                                          // 18\n    })), \"\\n      \", HTML.LABEL({                                                                                      // 19\n      \"for\": function() {                                                                                              // 20\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));                                       // 21\n      }                                                                                                                // 22\n    }, Blaze.View(\"lookup:label\", function() {                                                                         // 23\n      return Spacebars.mustache(view.lookup(\"label\"));                                                                 // 24\n    })), \"\\n    \"), \"\\n    \" ];                                                                                        // 25\n  }), \"\\n  \");                                                                                                         // 26\n}));                                                                                                                   // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-checkbox/select-checkbox.js                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afCheckboxGroup_materialize.helpers({                                                                         // 1\n  dsk:      Utility.dsk,                                                                                               // 2\n  itemAtts: Utility.selectedAttsAdjust,                                                                                // 3\n})                                                                                                                     // 4\n                                                                                                                       // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-checkbox-inline/template.select-checkbox-inline.js         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afCheckboxGroupInline_materialize\");                                                             // 2\nTemplate[\"afCheckboxGroupInline_materialize\"] = new Template(\"Template.afCheckboxGroupInline_materialize\", (function() {\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    \"class\": \"af-checkbox-group\"                                                                                       // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 8\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 9\n    return Spacebars.call(view.lookup(\"items\"));                                                                       // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({                                                      // 12\n      type: \"checkbox\",                                                                                                // 13\n      value: function() {                                                                                              // 14\n        return Spacebars.mustache(view.lookup(\"value\"));                                                               // 15\n      }                                                                                                                // 16\n    }, function() {                                                                                                    // 17\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));                                                          // 18\n    })), \"\\n      \", HTML.LABEL({                                                                                      // 19\n      \"for\": function() {                                                                                              // 20\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));                                       // 21\n      }                                                                                                                // 22\n    }, Blaze.View(\"lookup:label\", function() {                                                                         // 23\n      return Spacebars.mustache(view.lookup(\"label\"));                                                                 // 24\n    })), \"\\n    \"), \"\\n    \" ];                                                                                        // 25\n  }), \"\\n  \");                                                                                                         // 26\n}));                                                                                                                   // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-checkbox-inline/select-checkbox-inline.js                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afCheckboxGroupInline_materialize.helpers({                                                                   // 1\n  dsk:      Utility.dsk,                                                                                               // 2\n  itemAtts: Utility.selectedAttsAdjust                                                                                 // 3\n})                                                                                                                     // 4\n                                                                                                                       // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-multiple/template.select-multiple.js                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afSelectMultiple_materialize\");                                                                  // 2\nTemplate[\"afSelectMultiple_materialize\"] = new Template(\"Template.afSelectMultiple_materialize\", (function() {         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.SELECT(HTML.Attrs({                                                                                      // 5\n    multiple: \"\"                                                                                                       // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 8\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n      \", Blaze.If(function() {                                                                         // 12\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));                                              // 13\n    }, function() {                                                                                                    // 14\n      return [ \"\\n        \", HTML.OPTGROUP({                                                                           // 15\n        label: function() {                                                                                            // 16\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));                                      // 17\n        }                                                                                                              // 18\n      }, \"\\n          \", Blaze.Each(function() {                                                                       // 19\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                               // 20\n      }, function() {                                                                                                  // 21\n        return [ \"\\n            \", HTML.OPTION(HTML.Attrs(function() {                                                 // 22\n          return Spacebars.attrMustache(view.lookup(\"optionAtts\"));                                                    // 23\n        }), Blaze.View(\"lookup:..label\", function() {                                                                  // 24\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                         // 25\n        })), \"\\n          \" ];                                                                                         // 26\n      }), \"\\n        \"), \"\\n      \" ];                                                                                 // 27\n    }, function() {                                                                                                    // 28\n      return [ \"\\n        \", HTML.OPTION(HTML.Attrs(function() {                                                       // 29\n        return Spacebars.attrMustache(view.lookup(\"optionAtts\"));                                                      // 30\n      }), Blaze.View(\"lookup:..label\", function() {                                                                    // 31\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                           // 32\n      })), \"\\n      \" ];                                                                                               // 33\n    }), \"\\n    \" ];                                                                                                    // 34\n  }), \"\\n  \");                                                                                                         // 35\n}));                                                                                                                   // 36\n                                                                                                                       // 37\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-multiple/select-multiple.js                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afSelectMultiple_materialize.helpers({                                                                        // 1\n  optionAtts: Utility.optionAtts                                                                                       // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\nTemplate.afSelectMultiple_materialize.helpers({                                                                        // 5\n  atts: function() {                                                                                                   // 6\n    var atts = Utility.attsToggleInvalidClass.call(this);                                                              // 7\n    return AutoForm.Utility.addClass(atts, 'browser-default');                                                         // 8\n  }                                                                                                                    // 9\n});                                                                                                                    // 10\n                                                                                                                       // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-radio/template.select-radio.js                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afRadioGroup_materialize\");                                                                      // 2\nTemplate[\"afRadioGroup_materialize\"] = new Template(\"Template.afRadioGroup_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    \"class\": \"af-radio-group\"                                                                                          // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 8\n  }), \"\\n    \", Blaze.Each(function() {                                                                                // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({                                                      // 12\n      type: \"radio\",                                                                                                   // 13\n      value: function() {                                                                                              // 14\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                           // 15\n      }                                                                                                                // 16\n    }, function() {                                                                                                    // 17\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));                                                          // 18\n    })), \"\\n      \", HTML.LABEL({                                                                                      // 19\n      \"for\": function() {                                                                                              // 20\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));                                       // 21\n      }                                                                                                                // 22\n    }, Blaze.View(\"lookup:..label\", function() {                                                                       // 23\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                             // 24\n    })), \"\\n    \"), \"\\n    \" ];                                                                                        // 25\n  }), \"\\n  \");                                                                                                         // 26\n}));                                                                                                                   // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-radio/select-radio.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afRadioGroup_materialize.helpers({                                                                            // 1\n  dsk:      Utility.dsk,                                                                                               // 2\n  itemAtts: Utility.selectedAttsAdjust                                                                                 // 3\n})                                                                                                                     // 4\n                                                                                                                       // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-radio-inline/template.select-radio-inline.js               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afRadioGroupInline_materialize\");                                                                // 2\nTemplate[\"afRadioGroupInline_materialize\"] = new Template(\"Template.afRadioGroupInline_materialize\", (function() {     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV(HTML.Attrs({                                                                                         // 5\n    \"class\": \"af-radio-group\"                                                                                          // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));                                                                 // 8\n  }), \"\\n        \", HTML.P(\"\\n            \", Blaze.Each(function() {                                                   // 9\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));                                                   // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n                \", HTML.SPAN(\"\\n                    \", HTML.INPUT(HTML.Attrs({                         // 12\n      type: \"radio\",                                                                                                   // 13\n      value: function() {                                                                                              // 14\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                           // 15\n      }                                                                                                                // 16\n    }, function() {                                                                                                    // 17\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));                                                          // 18\n    })), \"\\n                    \", HTML.LABEL({                                                                        // 19\n      \"for\": function() {                                                                                              // 20\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));                                       // 21\n      }                                                                                                                // 22\n    }, Blaze.View(\"lookup:..label\", function() {                                                                       // 23\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                             // 24\n    })), \"\\n                \"), \"\\n            \" ];                                                                    // 25\n  }), \"\\n        \"), \"\\n    \");                                                                                        // 26\n}));                                                                                                                   // 27\n                                                                                                                       // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/select-radio-inline/select-radio-inline.js                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afRadioGroupInline_materialize.helpers({                                                                      // 1\n  dsk:      Utility.dsk,                                                                                               // 2\n  itemAtts: Utility.selectedAttsAdjust                                                                                 // 3\n})                                                                                                                     // 4\n                                                                                                                       // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/submit/template.submit.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputSubmit_materialize\");                                                                     // 2\nTemplate[\"afInputSubmit_materialize\"] = new Template(\"Template.afInputSubmit_materialize\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"submit\",                                                                                                    // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"attsPlusBtnClassMaterializeCss\"), view.lookup(\"atts\"));                 // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/tel/template.tel.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputTel_materialize\");                                                                        // 2\nTemplate[\"afInputTel_materialize\"] = new Template(\"Template.afInputTel_materialize\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"tel\",                                                                                                       // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/tel/tel.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputTel_materialize.helpers({                                                                              // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/text/template.text.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputText_materialize\");                                                                       // 2\nTemplate[\"afInputText_materialize\"] = new Template(\"Template.afInputText_materialize\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"text\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/text/text.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputText_materialize.helpers({                                                                             // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n})                                                                                                                     // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/textarea/template.textarea.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afTextarea_materialize\");                                                                        // 2\nTemplate[\"afTextarea_materialize\"] = new Template(\"Template.afTextarea_materialize\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.TEXTAREA(HTML.Attrs(function() {                                                                         // 5\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 6\n  }, {                                                                                                                 // 7\n    value: function() {                                                                                                // 8\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 9\n    }                                                                                                                  // 10\n  }));                                                                                                                 // 11\n}));                                                                                                                   // 12\n                                                                                                                       // 13\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/textarea/textarea.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afTextarea_materialize.helpers({                                                                              // 1\n  atts: function() {                                                                                                   // 2\n    var atts = Utility.attsToggleInvalidClass.call(this);                                                              // 3\n    return AutoForm.Utility.addClass(atts, \"materialize-textarea\");                                                    // 4\n  }                                                                                                                    // 5\n});                                                                                                                    // 6\n                                                                                                                       // 7\nTemplate.afTextarea_materialize.rendered = function() {                                                                // 8\n    this.$('textarea').characterCounter();                                                                             // 9\n};                                                                                                                     // 10\n                                                                                                                       // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/time/template.time.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputTime_materialize\");                                                                       // 2\nTemplate[\"afInputTime_materialize\"] = new Template(\"Template.afInputTime_materialize\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"time\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/time/time.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputTime_materialize.helpers({                                                                             // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/url/template.url.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputUrl_materialize\");                                                                        // 2\nTemplate[\"afInputUrl_materialize\"] = new Template(\"Template.afInputUrl_materialize\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"url\",                                                                                                       // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/url/url.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputUrl_materialize.helpers({                                                                              // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/week/template.week.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afInputWeek_materialize\");                                                                       // 2\nTemplate[\"afInputWeek_materialize\"] = new Template(\"Template.afInputWeek_materialize\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"week\",                                                                                                      // 6\n    value: function() {                                                                                                // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    }                                                                                                                  // 9\n  }, function() {                                                                                                      // 10\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 11\n  }));                                                                                                                 // 12\n}));                                                                                                                   // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/week/week.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afInputWeek_materialize.helpers({                                                                             // 1\n  atts: Utility.attsToggleInvalidClass                                                                                 // 2\n});                                                                                                                    // 3\n                                                                                                                       // 4\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/switch/template.switch.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afSwitch\");                                                                                      // 2\nTemplate[\"afSwitch\"] = new Template(\"Template.afSwitch\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"switch\"                                                                                                  // 6\n  }, \"\\n    \", HTML.LABEL({                                                                                            // 7\n    \"for\": function() {                                                                                                // 8\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));                                             // 9\n    }                                                                                                                  // 10\n  }, \"\\n      \", Spacebars.With(function() {                                                                           // 11\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"falseLabel\"));                                           // 12\n  }, function() {                                                                                                      // 13\n    return Blaze.View(\"lookup:.\", function() {                                                                         // 14\n      return Spacebars.mustache(view.lookup(\".\"));                                                                     // 15\n    });                                                                                                                // 16\n  }, function() {                                                                                                      // 17\n    return \"Off\";                                                                                                      // 18\n  }), \"\\n      \", HTML.INPUT(HTML.Attrs({                                                                              // 19\n    type: \"checkbox\",                                                                                                  // 20\n    value: function() {                                                                                                // 21\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 22\n    }                                                                                                                  // 23\n  }, function() {                                                                                                      // 24\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 25\n  })), \"\\n      \", HTML.Raw('<span class=\"lever\"></span>'), \"\\n      \", Spacebars.With(function() {                    // 26\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"trueLabel\"));                                            // 27\n  }, function() {                                                                                                      // 28\n    return Blaze.View(\"lookup:.\", function() {                                                                         // 29\n      return Spacebars.mustache(view.lookup(\".\"));                                                                     // 30\n    });                                                                                                                // 31\n  }, function() {                                                                                                      // 32\n    return \"On\";                                                                                                       // 33\n  }), \"\\n    \"), \"\\n  \");                                                                                              // 34\n}));                                                                                                                   // 35\n                                                                                                                       // 36\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/switch/switch.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nAutoForm.addInputType('switch', {                                                                                      // 1\n  template: 'afSwitch',                                                                                                // 2\n  valueIn: function(value) {                                                                                           // 3\n    return value;                                                                                                      // 4\n  },                                                                                                                   // 5\n  valueOut: function() {                                                                                               // 6\n    var checked, input, ref, ref1, result;                                                                             // 7\n    input = this[0];                                                                                                   // 8\n    checked = input.checked;                                                                                           // 9\n    if (checked) {                                                                                                     // 10\n      result = ((ref = input.attributes.trueValue) != null ? ref.value : void 0) || true;                              // 11\n    } else {                                                                                                           // 12\n      result = ((ref1 = input.attributes.falseValue) != null ? ref1.value : void 0) || false;                          // 13\n    }                                                                                                                  // 14\n    return result;                                                                                                     // 15\n  }                                                                                                                    // 16\n});                                                                                                                    // 17\n                                                                                                                       // 18\nTemplate.afSwitch.onRendered(function() {                                                                              // 19\n  var input;                                                                                                           // 20\n  input = this.$('input');                                                                                             // 21\n  return this.autorun((function(_this) {                                                                               // 22\n    return function() {                                                                                                // 23\n      var data, trueValue;                                                                                             // 24\n      data = Template.currentData();                                                                                   // 25\n      trueValue = _this.data.atts.trueValue || true;                                                                   // 26\n      return input.prop('checked', data.value === trueValue);                                                          // 27\n    };                                                                                                                 // 28\n  })(this));                                                                                                           // 29\n});                                                                                                                    // 30\n                                                                                                                       // 31\nTemplate.afSwitch.helpers({                                                                                            // 32\n  atts: function() {                                                                                                   // 33\n    return _.extend(this.atts, {                                                                                       // 34\n      id: this.atts.name                                                                                               // 35\n    });                                                                                                                // 36\n  }                                                                                                                    // 37\n});                                                                                                                    // 38\n                                                                                                                       // 39\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/pickadate/template.pickadate.js                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afPickadate\");                                                                                   // 2\nTemplate[\"afPickadate\"] = new Template(\"Template.afPickadate\", (function() {                                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.INPUT(HTML.Attrs({                                                                                       // 5\n    type: \"date\",                                                                                                      // 6\n    \"data-value\": function() {                                                                                         // 7\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 8\n    },                                                                                                                 // 9\n    value: function() {                                                                                                // 10\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));                                             // 11\n    },                                                                                                                 // 12\n    checked: \"checked/\"                                                                                                // 13\n  }, function() {                                                                                                      // 14\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 15\n  }));                                                                                                                 // 16\n}));                                                                                                                   // 17\n                                                                                                                       // 18\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/pickadate/pickadate.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar DEFAULT_PICKADATE_FORMAT_SUBMIT = 'yyyy/mm/dd';                                                                    // 1\n                                                                                                                       // 2\nAutoForm.addInputType('pickadate', {                                                                                   // 3\n  template: 'afPickadate',                                                                                             // 4\n  valueIn: function(val, atts) {                                                                                       // 5\n    var result, timezoneId;                                                                                            // 6\n    result = val;                                                                                                      // 7\n    timezoneId = atts.timezoneId;                                                                                      // 8\n    if (typeof timezoneId === 'string') {                                                                              // 9\n      if (typeof moment.tz !== 'function') {                                                                           // 10\n        throw new Error('If you specify a timezoneId, make sure that you\\'ve added a moment-timezone package to your app');\n      }                                                                                                                // 12\n      if (val instanceof Date) {                                                                                       // 13\n        result = moment(                                                                                               // 14\n          AutoForm.Utility.dateToNormalizedLocalDateAndTimeString(val, timezoneId),                                    // 15\n          'YYYY-MM-DD[T]HH:mm:ss.SSS'                                                                                  // 16\n        ).toDate();                                                                                                    // 17\n      }                                                                                                                // 18\n    }                                                                                                                  // 19\n    return result;                                                                                                     // 20\n  },                                                                                                                   // 21\n  valueOut: function() {                                                                                               // 22\n    var picker = this.pickadate('picker');                                                                             // 23\n    var item   = picker && picker.get('select');                                                                       // 24\n    return item && item.obj;                                                                                           // 25\n  },                                                                                                                   // 26\n  valueConverters: {                                                                                                   // 27\n    'string': function(val) {                                                                                          // 28\n      if (val instanceof Date) {                                                                                       // 29\n        return val.toString();                                                                                         // 30\n      } else {                                                                                                         // 31\n        return val;                                                                                                    // 32\n      }                                                                                                                // 33\n    },                                                                                                                 // 34\n    'stringArray': function(val) {                                                                                     // 35\n      if (val instanceof Date) {                                                                                       // 36\n        return [val.toString()];                                                                                       // 37\n      }                                                                                                                // 38\n      return val;                                                                                                      // 39\n    },                                                                                                                 // 40\n    'number': function(val) {                                                                                          // 41\n      if (val instanceof Date) {                                                                                       // 42\n        return val.getTime();                                                                                          // 43\n      } else {                                                                                                         // 44\n        return val;                                                                                                    // 45\n      }                                                                                                                // 46\n    },                                                                                                                 // 47\n    'numberArray': function(val) {                                                                                     // 48\n      if (val instanceof Date) {                                                                                       // 49\n        return [val.getTime()];                                                                                        // 50\n      }                                                                                                                // 51\n      return val;                                                                                                      // 52\n    },                                                                                                                 // 53\n    'dateArray': function(val) {                                                                                       // 54\n      if (val instanceof Date) {                                                                                       // 55\n        return [val];                                                                                                  // 56\n      }                                                                                                                // 57\n      return val;                                                                                                      // 58\n    }                                                                                                                  // 59\n  },                                                                                                                   // 60\n  contextAdjust: function(context) {                                                                                   // 61\n    if (context.atts.timezoneId) {                                                                                     // 62\n      context.atts[\"data-timezone-id\"] = context.atts.timezoneId;                                                      // 63\n    }                                                                                                                  // 64\n    delete context.atts.timezoneId;                                                                                    // 65\n    return context;                                                                                                    // 66\n  }                                                                                                                    // 67\n});                                                                                                                    // 68\n                                                                                                                       // 69\nTemplate['afPickadate'].rendered = function() {                                                                        // 70\n  var input, opts, picker, userOptions;                                                                                // 71\n  userOptions = this.data.atts.pickadateOptions || {};                                                                 // 72\n  opts = _.defaults(userOptions, {                                                                                     // 73\n    format: DEFAULT_PICKADATE_FORMAT_SUBMIT,                                                                           // 74\n    hiddenName: true,                                                                                                  // 75\n    closeOnSelect: true                                                                                                // 76\n  });                                                                                                                  // 77\n  input = this.$('input').pickadate(opts);                                                                             // 78\n  picker = input.pickadate('picker');                                                                                  // 79\n  this.$('input').on('change', function() {                                                                            // 80\n    return $(this).pickadate('picker').close();                                                                        // 81\n  });                                                                                                                  // 82\n  if (this.data.value) {                                                                                               // 83\n    this.$('input').parent().find('label').addClass('active');                                                         // 84\n  }                                                                                                                    // 85\n  this.autorun(function() {                                                                                            // 86\n    var data;                                                                                                          // 87\n    data = Template.currentData();                                                                                     // 88\n    if (data.value instanceof Date) {                                                                                  // 89\n      picker.set('select', data.value);                                                                                // 90\n    }                                                                                                                  // 91\n    if (data.min instanceof Date) {                                                                                    // 92\n      picker.set('min', data.min);                                                                                     // 93\n    }                                                                                                                  // 94\n    if (data.max instanceof Date) {                                                                                    // 95\n      return picker.set('max', data.max);                                                                              // 96\n    }                                                                                                                  // 97\n  });                                                                                                                  // 98\n};                                                                                                                     // 99\n                                                                                                                       // 100\nTemplate.afPickadate.helpers({                                                                                         // 101\n  atts: function() {                                                                                                   // 102\n    var atts;                                                                                                          // 103\n    atts = _.clone(this.atts);                                                                                         // 104\n    delete atts.dateTimePickerOptions;                                                                                 // 105\n    delete atts.pickadateOptions;                                                                                      // 106\n    return atts;                                                                                                       // 107\n  }                                                                                                                    // 108\n});                                                                                                                    // 109\n                                                                                                                       // 110\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/label/template.label.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afLabel_materialize\");                                                                           // 2\nTemplate[\"afLabel_materialize\"] = new Template(\"Template.afLabel_materialize\", (function() {                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.LABEL(HTML.Attrs({                                                                                       // 5\n    \"for\": function() {                                                                                                // 6\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));                                             // 7\n    }                                                                                                                  // 8\n  }, function() {                                                                                                      // 9\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                                // 10\n  }), \"\\n    \", Blaze.If(function() {                                                                                  // 11\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"labelText\"));                                               // 12\n  }, function() {                                                                                                      // 13\n    return [ Blaze.View(\"lookup:..labelText\", function() {                                                             // 14\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"labelText\"));                                         // 15\n    }), \"\\n    \" ];                                                                                                    // 16\n  }, function() {                                                                                                      // 17\n    return [ Blaze.View(\"lookup:afFieldLabelText\", function() {                                                        // 18\n      return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                        // 19\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                  // 20\n      }));                                                                                                             // 21\n    }), \"\\n    \" ];                                                                                                    // 22\n  }), \"\\n  \");                                                                                                         // 23\n}));                                                                                                                   // 24\n                                                                                                                       // 25\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/inputTypes/label/label.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afLabel_materialize.helpers({                                                                                 // 1\n  atts: function() {                                                                                                   // 2\n    var labelAtts;                                                                                                     // 3\n    labelAtts = this.afFieldLabelAtts;                                                                                 // 4\n    return labelAtts;                                                                                                  // 5\n  }                                                                                                                    // 6\n});                                                                                                                    // 7\n                                                                                                                       // 8\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/components/autoForm/template.autoForm.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"autoForm_materialize\");                                                                          // 2\nTemplate[\"autoForm_materialize\"] = new Template(\"Template.autoForm_materialize\", (function() {                         // 3\n  var view = this;                                                                                                     // 4\n  return Blaze.Unless(function() {                                                                                     // 5\n    return Spacebars.call(view.lookup(\"afDestroyUpdateForm\"));                                                         // 6\n  }, function() {                                                                                                      // 7\n    return [ \"\\n    \", HTML.FORM(HTML.Attrs(function() {                                                               // 8\n      return Spacebars.attrMustache(view.lookup(\"atts\"));                                                              // 9\n    }), \"\\n      \", HTML.DIV({                                                                                         // 10\n      \"class\": \"row\"                                                                                                   // 11\n    }, \"\\n        \", Spacebars.With(function() {                                                                       // 12\n      return Spacebars.dataMustache(view.lookup(\"innerContext\"), view.lookup(\"..\"));                                   // 13\n    }, function() {                                                                                                    // 14\n      return [ \"\\n          \", Blaze._InOuterTemplateScope(view, function() {                                          // 15\n        return Blaze._TemplateWith(function() {                                                                        // 16\n          return Spacebars.call(view.lookup(\".\"));                                                                     // 17\n        }, function() {                                                                                                // 18\n          return Spacebars.include(function() {                                                                        // 19\n            return Spacebars.call(view.templateContentBlock);                                                          // 20\n          });                                                                                                          // 21\n        });                                                                                                            // 22\n      }), \"\\n        \" ];                                                                                              // 23\n    }), \"\\n      \"), \"\\n    \"), \"\\n  \" ];                                                                              // 24\n  });                                                                                                                  // 25\n}));                                                                                                                   // 26\n                                                                                                                       // 27\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/components/quickForm/template.quickForm.js                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"quickForm_materialize\");                                                                         // 2\nTemplate[\"quickForm_materialize\"] = new Template(\"Template.quickForm_materialize\", (function() {                       // 3\n  var view = this;                                                                                                     // 4\n  return Blaze._TemplateWith(function() {                                                                              // 5\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"qfAutoFormContext\"));                                       // 6\n  }, function() {                                                                                                      // 7\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 8\n      return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"afQuickFields\")), \"\\n    \", Blaze.If(function() {      // 9\n        return Spacebars.call(view.lookup(\"qfShouldRenderButton\"));                                                    // 10\n      }, function() {                                                                                                  // 11\n        return [ \"\\n      \", HTML.DIV({                                                                                // 12\n          \"class\": \"row\"                                                                                               // 13\n        }, \"\\n        \", HTML.DIV({                                                                                    // 14\n          \"class\": \"col s12\"                                                                                           // 15\n        }, \"\\n          \", HTML.BUTTON(HTML.Attrs({                                                                    // 16\n          type: \"submit\"                                                                                               // 17\n        }, function() {                                                                                                // 18\n          return Spacebars.attrMustache(view.lookup(\"submitButtonAtts\"));                                              // 19\n        }), \"\\n            \", Spacebars.With(function() {                                                              // 20\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"atts\", \"buttonContent\"));                            // 21\n        }, function() {                                                                                                // 22\n          return [ \"\\n              \", Blaze.View(\"lookup:.\", function() {                                             // 23\n            return Spacebars.mustache(view.lookup(\".\"));                                                               // 24\n          }), \"\\n            \" ];                                                                                      // 25\n        }, function() {                                                                                                // 26\n          return \"\\n              Submit\\n            \";                                                               // 27\n        }), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \" ];                                                   // 28\n      }), \"\\n  \" ];                                                                                                    // 29\n    });                                                                                                                // 30\n  });                                                                                                                  // 31\n}));                                                                                                                   // 32\n                                                                                                                       // 33\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/components/quickForm/quickForm.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate['quickForm_materialize'].helpers({                                                                            // 1\n  submitButtonAtts: function() {                                                                                       // 2\n    var atts, qfAtts;                                                                                                  // 3\n    qfAtts = this.atts;                                                                                                // 4\n    atts = {};                                                                                                         // 5\n    if (typeof qfAtts.buttonClasses === 'string') {                                                                    // 6\n      atts['class'] = qfAtts.buttonClasses;                                                                            // 7\n    } else {                                                                                                           // 8\n      atts['class'] = 'btn waves-effect waves-light';                                                                  // 9\n    }                                                                                                                  // 10\n    return atts;                                                                                                       // 11\n  }                                                                                                                    // 12\n});                                                                                                                    // 13\n                                                                                                                       // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/components/afArrayField/template.afArrayField.js                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afArrayField_materialize\");                                                                      // 2\nTemplate[\"afArrayField_materialize\"] = new Template(\"Template.afArrayField_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"collection\"                                                                                              // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": \"collection-item\"                                                                                         // 8\n  }, \"\\n      \", Blaze.View(\"lookup:afFieldLabelText\", function() {                                                    // 9\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                          // 10\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\")                                                                 // 11\n    }));                                                                                                               // 12\n  }), \"\\n\\n      \", Blaze.If(function() {                                                                              // 13\n    return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasLessThanMaximum\"), Spacebars.kw({                        // 14\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\"),                                                                // 15\n      minCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"),                                                   // 16\n      maxCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\")                                                    // 17\n    }));                                                                                                               // 18\n  }, function() {                                                                                                      // 19\n    return [ \"\\n        \", HTML.BUTTON({                                                                               // 20\n      type: \"button\",                                                                                                  // 21\n      \"class\": \"btn autoform-add-item\",                                                                                // 22\n      \"data-autoform-field\": function() {                                                                              // 23\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"name\"));                                         // 24\n      },                                                                                                               // 25\n      \"data-autoform-mincount\": function() {                                                                           // 26\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"minCount\"));                                     // 27\n      },                                                                                                               // 28\n      \"data-autoform-maxcount\": function() {                                                                           // 29\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"maxCount\"));                                     // 30\n      }                                                                                                                // 31\n    }, \"\\n            Add \", HTML.I({                                                                                  // 32\n      \"class\": \"mdi-content-add\"                                                                                       // 33\n    }), \"\\n        \"), \"\\n      \" ];                                                                                   // 34\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {                                                                       // 35\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({                                      // 36\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\")                                                                 // 37\n    }));                                                                                                               // 38\n  }, function() {                                                                                                      // 39\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 40\n      \"class\": \"collection-item\"                                                                                       // 41\n    }, \"\\n        \", HTML.SPAN({                                                                                       // 42\n      \"class\": \"red-text\"                                                                                              // 43\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {                                                                // 44\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({                        // 45\n        name: Spacebars.dot(view.lookup(\"atts\"), \"name\")                                                               // 46\n      })));                                                                                                            // 47\n    })), \"\\n      \"), \"\\n    \" ];                                                                                      // 48\n  }), \"\\n    \", Blaze._TemplateWith(function() {                                                                       // 49\n    return {                                                                                                           // 50\n      name: Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"name\")),                                                // 51\n      minCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\")),                                   // 52\n      maxCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"))                                    // 53\n    };                                                                                                                 // 54\n  }, function() {                                                                                                      // 55\n    return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {                                      // 56\n      return [ \"\\n      \", HTML.DIV({                                                                                  // 57\n        \"class\": \"collection-item\"                                                                                     // 58\n      }, \"\\n        \", Blaze._TemplateWith(function() {                                                                // 59\n        return {                                                                                                       // 60\n          name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\")),                                               // 61\n          label: Spacebars.call(false),                                                                                // 62\n          options: Spacebars.call(view.lookup(\"afOptionsFromSchema\"))                                                  // 63\n        };                                                                                                             // 64\n      }, function() {                                                                                                  // 65\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 66\n      }), \"\\n      \"), \"\\n      \", Blaze.If(function() {                                                               // 67\n        return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasMoreThanMinimum\"), Spacebars.kw({                    // 68\n          name: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"name\"),                                                      // 69\n          minCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"minCount\"),                                              // 70\n          maxCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"maxCount\")                                               // 71\n        }));                                                                                                           // 72\n      }, function() {                                                                                                  // 73\n        return [ \"\\n        \", HTML.DIV({                                                                              // 74\n          \"class\": \"collection-item\"                                                                                   // 75\n        }, \"\\n          \", HTML.BUTTON({                                                                               // 76\n          type: \"button\",                                                                                              // 77\n          \"class\": \"btn autoform-remove-item\"                                                                          // 78\n        }, \"\\n            Remove \", HTML.SPAN({                                                                        // 79\n          \"class\": \"mdi-content-clear\"                                                                                 // 80\n        }), \"\\n          \"), \"\\n        \"), \"\\n      \" ];                                                              // 81\n      }), \"\\n    \" ];                                                                                                  // 82\n    });                                                                                                                // 83\n  }), \"\\n  \");                                                                                                         // 84\n}));                                                                                                                   // 85\n                                                                                                                       // 86\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/components/afFormGroup/template.afFormGroup.js                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afFormGroup_materialize\");                                                                       // 2\nTemplate[\"afFormGroup_materialize\"] = new Template(\"Template.afFormGroup_materialize\", (function() {                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"row\"                                                                                                     // 6\n  }, \"\\n        \", HTML.DIV({                                                                                          // 7\n    \"class\": function() {                                                                                              // 8\n      return [ Blaze.If(function() {                                                                                   // 9\n        return Spacebars.call(view.lookup(\"addInputField\"));                                                           // 10\n      }, function() {                                                                                                  // 11\n        return \"input-field\";                                                                                          // 12\n      }), \" col s12\" ];                                                                                                // 13\n    }                                                                                                                  // 14\n  }, \"\\n            \", Blaze.If(function() {                                                                           // 15\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\", \"icon\"));                                // 16\n  }, function() {                                                                                                      // 17\n    return [ \"\\n                \", Blaze._TemplateWith(function() {                                                    // 18\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));                                      // 19\n    }, function() {                                                                                                    // 20\n      return Spacebars.include(view.lookupTemplate(\"afIcon_materialize\"));                                             // 21\n    }), \"\\n            \" ];                                                                                            // 22\n  }), \"\\n            \", Blaze.If(function() {                                                                          // 23\n    return Spacebars.call(view.lookup(\"skipLabel\"));                                                                   // 24\n  }, function() {                                                                                                      // 25\n    return [ \"\\n                \", Blaze._TemplateWith(function() {                                                    // 26\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));                                      // 27\n    }, function() {                                                                                                    // 28\n      return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));                                                   // 29\n    }), \"\\n            \" ];                                                                                            // 30\n  }, function() {                                                                                                      // 31\n    return [ \"\\n                \", Blaze._TemplateWith(function() {                                                    // 32\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));                                      // 33\n    }, function() {                                                                                                    // 34\n      return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));                                                   // 35\n    }), \"\\n                \", Blaze._TemplateWith(function() {                                                         // 36\n      return Spacebars.call(view.lookup(\".\"));                                                                         // 37\n    }, function() {                                                                                                    // 38\n      return Spacebars.include(view.lookupTemplate(\"afLabel_materialize\"));                                            // 39\n    }), \"\\n            \" ];                                                                                            // 40\n  }), \"\\n            \", Blaze.If(function() {                                                                          // 41\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({                                      // 42\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 43\n    }));                                                                                                               // 44\n  }, function() {                                                                                                      // 45\n    return [ \"\\n                \", HTML.DIV({                                                                          // 46\n      \"class\": \"red-text\"                                                                                              // 47\n    }, \"\\n                    \", HTML.I({                                                                              // 48\n      \"class\": \"mdi-alert-warning\"                                                                                     // 49\n    }), \" \", Blaze.View(\"lookup:afFieldMessage\", function() {                                                          // 50\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({                        // 51\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                  // 52\n      })));                                                                                                            // 53\n    }), \"\\n                \"), \"\\n            \" ];                                                                     // 54\n  }), \"\\n        \"), \"\\n    \");                                                                                        // 55\n}));                                                                                                                   // 56\n                                                                                                                       // 57\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/components/afFormGroup/afFormGroup.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.afFormGroup_materialize.helpers({                                                                             // 1\n    addInputField: function() {                                                                                        // 2\n        var result, skipInputType, type;                                                                               // 3\n        skipInputType = [                                                                                              // 4\n            'checkbox',                                                                                                // 5\n            'checkbox-group',                                                                                          // 6\n            'boolean-checkbox',                                                                                        // 7\n            'select-radio',                                                                                            // 8\n            'select-checkbox-inline',                                                                                  // 9\n            'select-radio-inline',                                                                                     // 10\n            'boolean-radios',                                                                                          // 11\n            'toggle',                                                                                                  // 12\n            'switch'                                                                                                   // 13\n        ];                                                                                                             // 14\n        type = AutoForm.getInputType(this);                                                                            // 15\n        result = !_.contains(skipInputType, type);                                                                     // 16\n        return result;                                                                                                 // 17\n    },                                                                                                                 // 18\n    skipLabel: function() {                                                                                            // 19\n        var result, skipLabelTypes, type;                                                                              // 20\n        skipLabelTypes = [                                                                                             // 21\n            'checkbox',                                                                                                // 22\n            'checkbox-group',                                                                                          // 23\n            'boolean-checkbox',                                                                                        // 24\n            'select-radio',                                                                                            // 25\n            'select-checkbox-inline',                                                                                  // 26\n            'select-radio-inline',                                                                                     // 27\n            'boolean-radio',                                                                                           // 28\n            'toggle',                                                                                                  // 29\n            'switch'                                                                                                   // 30\n        ];                                                                                                             // 31\n        type = AutoForm.getInputType(this);                                                                            // 32\n        result = this.skipLabel || _.contains(skipLabelTypes, type);                                                   // 33\n        return result;                                                                                                 // 34\n    }                                                                                                                  // 35\n});                                                                                                                    // 36\n                                                                                                                       // 37\nTemplate.afFormGroup_materialize.rendered = function() {                                                               // 38\n    var formId;                                                                                                        // 39\n    formId = AutoForm.getFormId();                                                                                     // 40\n    this.autorun((function(_this) {                                                                                    // 41\n        return function() {                                                                                            // 42\n            var value = AutoForm.getFieldValue(_this.data.name, formId);                                               // 43\n            var inputValue = AutoForm.getInputValue(_this.find('input'));                                              // 44\n            var type = AutoForm.getInputType(_this.data);                                                              // 45\n            var placeholder = _this.data.afFieldInputAtts.placeholder;                                                 // 46\n            var skipActiveLabelTypes = [                                                                               // 47\n                'select',                                                                                              // 48\n                'checkbox',                                                                                            // 49\n                'checkbox-group',                                                                                      // 50\n                'boolean-checkbox',                                                                                    // 51\n                'select-radio',                                                                                        // 52\n                'select-checkbox-inline',                                                                              // 53\n                'select-radio-inline',                                                                                 // 54\n                'boolean-radio',                                                                                       // 55\n                'toggle',                                                                                              // 56\n                'switch'                                                                                               // 57\n            ];                                                                                                         // 58\n                                                                                                                       // 59\n            if (!_.contains(skipActiveLabelTypes, type)) {                                                             // 60\n                if (!!value || !!inputValue || inputValue === 0 || !!placeholder) {                                    // 61\n                    return _this.$('.input-field > label:not(:focus)').addClass('active');                             // 62\n                } else {                                                                                               // 63\n                    return _this.$('.input-field > label:not(:focus)').removeClass('active');                          // 64\n                }                                                                                                      // 65\n            }                                                                                                          // 66\n        };                                                                                                             // 67\n    })(this));                                                                                                         // 68\n};                                                                                                                     // 69\n                                                                                                                       // 70\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/components/afObjectField/template.afObjectField.js                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afObjectField_materialize\");                                                                     // 2\nTemplate[\"afObjectField_materialize\"] = new Template(\"Template.afObjectField_materialize\", (function() {               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"card-panel autoform-object-field\"                                                                        // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": \"card-content\"                                                                                            // 8\n  }, \"\\n      \", Spacebars.With(function() {                                                                           // 9\n    return Spacebars.dataMustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({                                      // 10\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 11\n    }));                                                                                                               // 12\n  }, function() {                                                                                                      // 13\n    return [ \"\\n        \", HTML.DIV({                                                                                  // 14\n      \"class\": \"card-title\"                                                                                            // 15\n    }, \"\\n          \", Blaze.View(\"lookup:.\", function() {                                                             // 16\n      return Spacebars.mustache(view.lookup(\".\"));                                                                     // 17\n    }), \"\\n        \"), \"\\n      \" ];                                                                                   // 18\n  }), \"\\n      \", Blaze.If(function() {                                                                                // 19\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({                                      // 20\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                    // 21\n    }));                                                                                                               // 22\n  }, function() {                                                                                                      // 23\n    return [ \"\\n        \", HTML.DIV({                                                                                  // 24\n      \"class\": \"red-text\"                                                                                              // 25\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {                                                                // 26\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({                        // 27\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")                                                                  // 28\n      })));                                                                                                            // 29\n    })), \"\\n      \" ];                                                                                                 // 30\n  }), \"\\n      \", Blaze._TemplateWith(function() {                                                                     // 31\n    return {                                                                                                           // 32\n      name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\"))                                                    // 33\n    };                                                                                                                 // 34\n  }, function() {                                                                                                      // 35\n    return Spacebars.include(view.lookupTemplate(\"afQuickFields\"));                                                    // 36\n  }), \"\\n    \"), \"\\n  \");                                                                                              // 37\n}));                                                                                                                   // 38\n                                                                                                                       // 39\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/gildaspk_autoform-materialize/components/afQuickField/template.afQuickField.js                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"afQuickField_materialize\");                                                                      // 2\nTemplate[\"afQuickField_materialize\"] = new Template(\"Template.afQuickField_materialize\", (function() {                 // 3\n  var view = this;                                                                                                     // 4\n  return Blaze.If(function() {                                                                                         // 5\n    return Spacebars.dataMustache(view.lookup(\"isGroup\"), Spacebars.kw({                                               // 6\n      atts: view.lookup(\".\")                                                                                           // 7\n    }));                                                                                                               // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"afObjectField_materialize\")), \"\\n  \" ];                  // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n    \", Blaze.If(function() {                                                                           // 12\n      return Spacebars.dataMustache(view.lookup(\"isFieldArray\"), Spacebars.kw({                                        // 13\n        atts: view.lookup(\".\")                                                                                         // 14\n      }));                                                                                                             // 15\n    }, function() {                                                                                                    // 16\n      return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"afArrayField_materialize\")), \"\\n    \" ];             // 17\n    }, function() {                                                                                                    // 18\n      return [ \"\\n      \", Blaze._TemplateWith(function() {                                                            // 19\n        return Spacebars.call(view.lookup(\"groupAtts\"));                                                               // 20\n      }, function() {                                                                                                  // 21\n        return Spacebars.include(view.lookupTemplate(\"afFormGroup_materialize\"));                                      // 22\n      }), \"\\n    \" ];                                                                                                  // 23\n    }), \"\\n  \" ];                                                                                                      // 24\n  });                                                                                                                  // 25\n}));                                                                                                                   // 26\n                                                                                                                       // 27\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['gildaspk:autoform-materialize'] = {};\n\n})();\n","servePath":"/packages/gildaspk_autoform-materialize.js","sourceMap":{"version":3,"sources":["/packages/gildaspk_autoform-materialize/utilities/utility.js","/packages/gildaspk_autoform-materialize/utilities/initialize-select.js","/packages/gildaspk_autoform-materialize/utilities/dsk.js","/packages/gildaspk_autoform-materialize/utilities/selected-atts-adjust.js","/packages/gildaspk_autoform-materialize/utilities/atts-toggle-invalid-class.js","/packages/gildaspk_autoform-materialize/utilities/atts-check-selected.js","/packages/gildaspk_autoform-materialize/utilities/option-atts.js","/packages/gildaspk_autoform-materialize/inputTypes/boolean-checkbox/template.boolean-checkbox.js","/packages/gildaspk_autoform-materialize/inputTypes/boolean-checkbox/boolean-checkbox.js","/packages/gildaspk_autoform-materialize/inputTypes/boolean-radios/template.boolean-radios.js","/packages/gildaspk_autoform-materialize/inputTypes/boolean-radios/boolean-radios.js","/packages/gildaspk_autoform-materialize/inputTypes/boolean-select/template.boolean-select.js","/packages/gildaspk_autoform-materialize/inputTypes/boolean-select/boolean-select.js","/packages/gildaspk_autoform-materialize/inputTypes/button/template.button.js","/packages/gildaspk_autoform-materialize/inputTypes/color/template.color.js","/packages/gildaspk_autoform-materialize/inputTypes/color/color.js","/packages/gildaspk_autoform-materialize/inputTypes/contenteditable/template.contenteditable.js","/packages/gildaspk_autoform-materialize/inputTypes/date/template.date.js","/packages/gildaspk_autoform-materialize/inputTypes/date/date.js","/packages/gildaspk_autoform-materialize/inputTypes/datetime/template.datetime.js","/packages/gildaspk_autoform-materialize/inputTypes/datetime/datetime.js","/packages/gildaspk_autoform-materialize/inputTypes/datetime-local/template.datetime-local.js","/packages/gildaspk_autoform-materialize/inputTypes/datetime-local/datetime-local.js","/packages/gildaspk_autoform-materialize/inputTypes/email/template.email.js","/packages/gildaspk_autoform-materialize/inputTypes/email/email.js","/packages/gildaspk_autoform-materialize/inputTypes/file/template.file.js","/packages/gildaspk_autoform-materialize/inputTypes/hidden/template.hidden.js","/packages/gildaspk_autoform-materialize/inputTypes/icon/template.icon.js","/packages/gildaspk_autoform-materialize/inputTypes/image/template.image.js","/packages/gildaspk_autoform-materialize/inputTypes/month/template.month.js","/packages/gildaspk_autoform-materialize/inputTypes/month/month.js","/packages/gildaspk_autoform-materialize/inputTypes/number/template.number.js","/packages/gildaspk_autoform-materialize/inputTypes/number/number.js","/packages/gildaspk_autoform-materialize/inputTypes/password/template.password.js","/packages/gildaspk_autoform-materialize/inputTypes/password/password.js","/packages/gildaspk_autoform-materialize/inputTypes/radio/template.radio.js","/packages/gildaspk_autoform-materialize/inputTypes/radio/radio.js","/packages/gildaspk_autoform-materialize/inputTypes/range/template.range.js","/packages/gildaspk_autoform-materialize/inputTypes/reset/template.reset.js","/packages/gildaspk_autoform-materialize/inputTypes/search/template.search.js","/packages/gildaspk_autoform-materialize/inputTypes/select/template.select.js","/packages/gildaspk_autoform-materialize/inputTypes/select/select.js","/packages/gildaspk_autoform-materialize/inputTypes/select-checkbox/template.select-checkbox.js","/packages/gildaspk_autoform-materialize/inputTypes/select-checkbox/select-checkbox.js","/packages/gildaspk_autoform-materialize/inputTypes/select-checkbox-inline/template.select-checkbox-inline.js","/packages/gildaspk_autoform-materialize/inputTypes/select-checkbox-inline/select-checkbox-inline.js","/packages/gildaspk_autoform-materialize/inputTypes/select-multiple/template.select-multiple.js","/packages/gildaspk_autoform-materialize/inputTypes/select-multiple/select-multiple.js","/packages/gildaspk_autoform-materialize/inputTypes/select-radio/template.select-radio.js","/packages/gildaspk_autoform-materialize/inputTypes/select-radio/select-radio.js","/packages/gildaspk_autoform-materialize/inputTypes/select-radio-inline/template.select-radio-inline.js","/packages/gildaspk_autoform-materialize/inputTypes/select-radio-inline/select-radio-inline.js","/packages/gildaspk_autoform-materialize/inputTypes/submit/template.submit.js","/packages/gildaspk_autoform-materialize/inputTypes/tel/template.tel.js","/packages/gildaspk_autoform-materialize/inputTypes/tel/tel.js","/packages/gildaspk_autoform-materialize/inputTypes/text/template.text.js","/packages/gildaspk_autoform-materialize/inputTypes/text/text.js","/packages/gildaspk_autoform-materialize/inputTypes/textarea/template.textarea.js","/packages/gildaspk_autoform-materialize/inputTypes/textarea/textarea.js","/packages/gildaspk_autoform-materialize/inputTypes/time/template.time.js","/packages/gildaspk_autoform-materialize/inputTypes/time/time.js","/packages/gildaspk_autoform-materialize/inputTypes/url/template.url.js","/packages/gildaspk_autoform-materialize/inputTypes/url/url.js","/packages/gildaspk_autoform-materialize/inputTypes/week/template.week.js","/packages/gildaspk_autoform-materialize/inputTypes/week/week.js","/packages/gildaspk_autoform-materialize/inputTypes/switch/template.switch.js","/packages/gildaspk_autoform-materialize/inputTypes/switch/switch.js","/packages/gildaspk_autoform-materialize/inputTypes/pickadate/template.pickadate.js","/packages/gildaspk_autoform-materialize/inputTypes/pickadate/pickadate.js","/packages/gildaspk_autoform-materialize/inputTypes/label/template.label.js","/packages/gildaspk_autoform-materialize/inputTypes/label/label.js","/packages/gildaspk_autoform-materialize/components/autoForm/template.autoForm.js","/packages/gildaspk_autoform-materialize/components/quickForm/template.quickForm.js","/packages/gildaspk_autoform-materialize/components/quickForm/quickForm.js","/packages/gildaspk_autoform-materialize/components/afArrayField/template.afArrayField.js","/packages/gildaspk_autoform-materialize/components/afFormGroup/template.afFormGroup.js","/packages/gildaspk_autoform-materialize/components/afFormGroup/afFormGroup.js","/packages/gildaspk_autoform-materialize/components/afObjectField/template.afObjectField.js","/packages/gildaspk_autoform-materialize/components/afQuickField/template.afQuickField.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,2H;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACjxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H","file":"/packages/gildaspk_autoform-materialize.js","sourcesContent":["Utility = {}\n","Utility.initializeSelect = function() {\n  var template = this\n  var select = template.$('select')\n  select.material_select()\n\n  var initialize = _.debounce(function () {\n    select.material_select()\n  }, 500)\n\n  template.autorun(function () {\n    // reinitialize select when data changes\n    Template.currentData()\n    initialize()\n  })\n}\n","Utility.dsk = function() {\n  return {\n    'data-schema-key': this.atts['data-schema-key']\n  };\n};\n\n","Utility.selectedAttsAdjust = function() {\n  var atts = _.clone(this.atts)\n\n  if (this.selected) {\n    atts.checked = \"\"\n  }\n\n  atts.id = atts.id + \"_\" + this._id\n  delete atts['data-schema-key']\n  return atts\n}\n","Utility.attsToggleInvalidClass = function() {\n  var atts    = _.clone(this.atts);\n  var context = AutoForm.getFormSchema().namedContext(AutoForm.getFormId());\n\n  if (context.keyIsInvalid(atts.name)) {\n    atts = AutoForm.Utility.addClass(atts, 'invalid');\n  }\n\n  return atts;\n}\n","Utility.attsCheckSelected = function() {\n  var atts = Utility.attsToggleInvalidClass.call(this);\n  if (this.selected) {\n    atts.checked = '';\n  }\n  return atts;\n};\n","Utility.optionAtts = function() {\n  var atts, item;\n  item = this;\n  atts = {\n    value: item.value\n  };\n  if (item.selected) {\n    atts.selected = '';\n  }\n  return atts;\n};\n","\nTemplate.__checkName(\"afCheckbox_materialize\");\nTemplate[\"afCheckbox_materialize\"] = new Template(\"Template.afCheckbox_materialize\", (function() {\n  var view = this;\n  return HTML.P(\"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"checkbox\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  })), \"\\n    \", HTML.LABEL({\n    \"for\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));\n    }\n  }, Blaze.View(\"lookup:afFieldLabelText\", function() {\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  })), \"\\n  \");\n}));\n","Template.afCheckbox_materialize.helpers({\n atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afBooleanRadioGroup_materialize\");\nTemplate[\"afBooleanRadioGroup_materialize\"] = new Template(\"Template.afBooleanRadioGroup_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": function() {\n      return [ \"af-radio-group \", Spacebars.mustache(view.lookup(\"rowColumnAtts\")) ];\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", HTML.P({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"falseColumnAtts\"));\n    }\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    id: function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_false\" ];\n    },\n    type: \"radio\",\n    value: \"false\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"falseAtts\"));\n  })), \"\\n      \", HTML.LABEL({\n    \"for\": function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_false\" ];\n    }\n  }, Spacebars.With(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"falseLabel\"));\n  }, function() {\n    return Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    });\n  }, function() {\n    return \"False\";\n  })), \"\\n    \"), \"\\n    \", HTML.P({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"trueColumnAtts\"));\n    }\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    id: function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_true\" ];\n    },\n    type: \"radio\",\n    value: \"true\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"trueAtts\"));\n  })), \"\\n      \", HTML.LABEL({\n    \"for\": function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\")), \"_true\" ];\n    }\n  }, Spacebars.With(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"trueLabel\"));\n  }, function() {\n    return Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    });\n  }, function() {\n    return \"True\";\n  })), \"\\n    \"), \"\\n  \");\n}));\n","Template.afBooleanRadioGroup_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n\nTemplate.afBooleanRadioGroup_materialize.helpers({\n  falseAtts: function() {\n    var atts;\n    atts = _.omit(this.atts, 'id', 'trueLabel', 'falseLabel', 'data-schema-key');\n    if (this.value === false) {\n      atts.checked = '';\n    }\n    return atts;\n  },\n  trueAtts: function() {\n    var atts;\n    atts = _.omit(this.atts, 'id', 'trueLabel', 'falseLabel', 'data-schema-key');\n    if (this.value === true) {\n      atts.checked = '';\n    }\n    return atts;\n  },\n  dsk: function() {\n    return {\n      'data-schema-key': this.atts['data-schema-key']\n    };\n  }\n});\n","\nTemplate.__checkName(\"afBooleanSelect_materialize\");\nTemplate[\"afBooleanSelect_materialize\"] = new Template(\"Template.afBooleanSelect_materialize\", (function() {\n  var view = this;\n  return HTML.SELECT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n      \", HTML.OPTION(HTML.Attrs(function() {\n      return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n    }), Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.afBooleanSelect_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n\nTemplate.afBooleanSelect_materialize.helpers({\n  optionAtts: Utility.optionAtts\n});\n\nTemplate.afBooleanSelect_materialize.onRendered(Utility.initializeSelect);\n","\nTemplate.__checkName(\"afInputButton_materialize\");\nTemplate[\"afInputButton_materialize\"] = new Template(\"Template.afInputButton_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"button\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"attsPlusBtnClassMaterializeCss\"), view.lookup(\"atts\"));\n  }));\n}));\n","\nTemplate.__checkName(\"afInputColor_materialize\");\nTemplate[\"afInputColor_materialize\"] = new Template(\"Template.afInputColor_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"color\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputColor_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afContenteditable_materialize\");\nTemplate[\"afContenteditable_materialize\"] = new Template(\"Template.afContenteditable_materialize\", (function() {\n  var view = this;\n  return [ Blaze.View(\"lookup:getValue\", function() {\n    return Spacebars.mustache(view.lookup(\"getValue\"), Spacebars.dot(view.lookup(\".\"), \"value\"));\n  }), \"\\n  \", HTML.DIV(HTML.Attrs({\n    contenteditable: \"true\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  })) ];\n}));\n","\nTemplate.__checkName(\"afInputDate_materialize\");\nTemplate[\"afInputDate_materialize\"] = new Template(\"Template.afInputDate_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"date\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputDate_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputDateTime_materialize\");\nTemplate[\"afInputDateTime_materialize\"] = new Template(\"Template.afInputDateTime_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"datetime\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputDateTime_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputDateTimeLocal_materialize\");\nTemplate[\"afInputDateTimeLocal_materialize\"] = new Template(\"Template.afInputDateTimeLocal_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"datetime-local\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputDateTimeLocal_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputEmail_materialize\");\nTemplate[\"afInputEmail_materialize\"] = new Template(\"Template.afInputEmail_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"email\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputEmail_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputFile_materialize\");\nTemplate[\"afInputFile_materialize\"] = new Template(\"Template.afInputFile_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"file\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","\nTemplate.__checkName(\"afInputHidden_materialize\");\nTemplate[\"afInputHidden_materialize\"] = new Template(\"Template.afInputHidden_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"hidden\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","\nTemplate.__checkName(\"afIcon_materialize\");\nTemplate[\"afIcon_materialize\"] = new Template(\"Template.afIcon_materialize\", (function() {\n  var view = this;\n  return HTML.I({\n    \"class\": \"material-icons prefix\"\n  }, Blaze.View(\"lookup:..icon\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"icon\"));\n  }));\n}));\n","\nTemplate.__checkName(\"afInputImage_materialize\");\nTemplate[\"afInputImage_materialize\"] = new Template(\"Template.afInputImage_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"image\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","\nTemplate.__checkName(\"afInputMonth_materialize\");\nTemplate[\"afInputMonth_materialize\"] = new Template(\"Template.afInputMonth_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"month\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputMonth_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputNumber_materialize\");\nTemplate[\"afInputNumber_materialize\"] = new Template(\"Template.afInputNumber_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"number\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputNumber_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputPassword_materialize\");\nTemplate[\"afInputPassword_materialize\"] = new Template(\"Template.afInputPassword_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"password\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputPassword_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n\nTemplate.afInputPassword_materialize.rendered = function() {\n    this.$('textarea').characterCounter();\n}\n","\nTemplate.__checkName(\"afRadio_materialize\");\nTemplate[\"afRadio_materialize\"] = new Template(\"Template.afRadio_materialize\", (function() {\n  var view = this;\n  return HTML.P(\"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"radio\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  })), \"\\n    \", HTML.LABEL({\n    \"for\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));\n    }\n  }, Blaze.View(\"lookup:afFieldLabelText\", function() {\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  })), \"\\n  \");\n}));\n","Template.afRadio_materialize.helpers({\n  atts:     Utility.attsCheckSelected,\n  dsk:      Utility.dsk,\n});\n","\nTemplate.__checkName(\"afInputRange_materialize\");\nTemplate[\"afInputRange_materialize\"] = new Template(\"Template.afInputRange_materialize\", (function() {\n  var view = this;\n  return HTML.P({\n    \"class\": \"range-field\"\n  }, \"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"range\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  })), \"\\n  \");\n}));\n","\nTemplate.__checkName(\"afInputReset_materialize\");\nTemplate[\"afInputReset_materialize\"] = new Template(\"Template.afInputReset_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"reset\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"attsPlusBtnClassMaterializeCss\"), view.lookup(\"atts\"));\n  }));\n}));\n","\nTemplate.__checkName(\"afInputSearch_materialize\");\nTemplate[\"afInputSearch_materialize\"] = new Template(\"Template.afInputSearch_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"search\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","\nTemplate.__checkName(\"afSelect_materialize\");\nTemplate[\"afSelect_materialize\"] = new Template(\"Template.afSelect_materialize\", (function() {\n  var view = this;\n  return HTML.SELECT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n    }, function() {\n      return [ \"\\n        \", HTML.OPTGROUP({\n        label: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n        }\n      }, \"\\n          \", Blaze.Each(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n      }, function() {\n        return [ \"\\n          \", HTML.OPTION(HTML.Attrs(function() {\n          return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n        }), Blaze.View(\"lookup:..label\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n        })), \"\\n          \" ];\n      }), \"\\n        \"), \"\\n      \" ];\n    }, function() {\n      return [ \"\\n        \", HTML.OPTION(HTML.Attrs(function() {\n        return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n      }), Blaze.View(\"lookup:..label\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n      })), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.afSelect_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\nTemplate.afSelect_materialize.helpers({\n  optionAtts: Utility.optionAtts\n});\n\nTemplate.afSelect_materialize.onRendered(Utility.initializeSelect);\n","\nTemplate.__checkName(\"afCheckboxGroup_materialize\");\nTemplate[\"afCheckboxGroup_materialize\"] = new Template(\"Template.afCheckboxGroup_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"af-checkbox-group collection\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"items\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({\n      type: \"checkbox\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));\n    })), \"\\n      \", HTML.LABEL({\n      \"for\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));\n      }\n    }, Blaze.View(\"lookup:label\", function() {\n      return Spacebars.mustache(view.lookup(\"label\"));\n    })), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.afCheckboxGroup_materialize.helpers({\n  dsk:      Utility.dsk,\n  itemAtts: Utility.selectedAttsAdjust,\n})\n","\nTemplate.__checkName(\"afCheckboxGroupInline_materialize\");\nTemplate[\"afCheckboxGroupInline_materialize\"] = new Template(\"Template.afCheckboxGroupInline_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"af-checkbox-group\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"items\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({\n      type: \"checkbox\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));\n    })), \"\\n      \", HTML.LABEL({\n      \"for\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));\n      }\n    }, Blaze.View(\"lookup:label\", function() {\n      return Spacebars.mustache(view.lookup(\"label\"));\n    })), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.afCheckboxGroupInline_materialize.helpers({\n  dsk:      Utility.dsk,\n  itemAtts: Utility.selectedAttsAdjust\n})\n","\nTemplate.__checkName(\"afSelectMultiple_materialize\");\nTemplate[\"afSelectMultiple_materialize\"] = new Template(\"Template.afSelectMultiple_materialize\", (function() {\n  var view = this;\n  return HTML.SELECT(HTML.Attrs({\n    multiple: \"\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n    }, function() {\n      return [ \"\\n        \", HTML.OPTGROUP({\n        label: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"optgroup\"));\n        }\n      }, \"\\n          \", Blaze.Each(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n      }, function() {\n        return [ \"\\n            \", HTML.OPTION(HTML.Attrs(function() {\n          return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n        }), Blaze.View(\"lookup:..label\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n        })), \"\\n          \" ];\n      }), \"\\n        \"), \"\\n      \" ];\n    }, function() {\n      return [ \"\\n        \", HTML.OPTION(HTML.Attrs(function() {\n        return Spacebars.attrMustache(view.lookup(\"optionAtts\"));\n      }), Blaze.View(\"lookup:..label\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n      })), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.afSelectMultiple_materialize.helpers({\n  optionAtts: Utility.optionAtts\n});\n\nTemplate.afSelectMultiple_materialize.helpers({\n  atts: function() {\n    var atts = Utility.attsToggleInvalidClass.call(this);\n    return AutoForm.Utility.addClass(atts, 'browser-default');\n  }\n});\n","\nTemplate.__checkName(\"afRadioGroup_materialize\");\nTemplate[\"afRadioGroup_materialize\"] = new Template(\"Template.afRadioGroup_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"af-radio-group\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"\\n      \", HTML.INPUT(HTML.Attrs({\n      type: \"radio\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));\n    })), \"\\n      \", HTML.LABEL({\n      \"for\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));\n      }\n    }, Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.afRadioGroup_materialize.helpers({\n  dsk:      Utility.dsk,\n  itemAtts: Utility.selectedAttsAdjust\n})\n","\nTemplate.__checkName(\"afRadioGroupInline_materialize\");\nTemplate[\"afRadioGroupInline_materialize\"] = new Template(\"Template.afRadioGroupInline_materialize\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"af-radio-group\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"dsk\"));\n  }), \"\\n        \", HTML.P(\"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"items\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN(\"\\n                    \", HTML.INPUT(HTML.Attrs({\n      type: \"radio\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"itemAtts\"));\n    })), \"\\n                    \", HTML.LABEL({\n      \"for\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"itemAtts\"), \"id\"));\n      }\n    }, Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n","Template.afRadioGroupInline_materialize.helpers({\n  dsk:      Utility.dsk,\n  itemAtts: Utility.selectedAttsAdjust\n})\n","\nTemplate.__checkName(\"afInputSubmit_materialize\");\nTemplate[\"afInputSubmit_materialize\"] = new Template(\"Template.afInputSubmit_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"submit\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"attsPlusBtnClassMaterializeCss\"), view.lookup(\"atts\"));\n  }));\n}));\n","\nTemplate.__checkName(\"afInputTel_materialize\");\nTemplate[\"afInputTel_materialize\"] = new Template(\"Template.afInputTel_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"tel\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputTel_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputText_materialize\");\nTemplate[\"afInputText_materialize\"] = new Template(\"Template.afInputText_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputText_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n})\n","\nTemplate.__checkName(\"afTextarea_materialize\");\nTemplate[\"afTextarea_materialize\"] = new Template(\"Template.afTextarea_materialize\", (function() {\n  var view = this;\n  return HTML.TEXTAREA(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }, {\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }));\n}));\n","Template.afTextarea_materialize.helpers({\n  atts: function() {\n    var atts = Utility.attsToggleInvalidClass.call(this);\n    return AutoForm.Utility.addClass(atts, \"materialize-textarea\");\n  }\n});\n\nTemplate.afTextarea_materialize.rendered = function() {\n    this.$('textarea').characterCounter();\n};\n","\nTemplate.__checkName(\"afInputTime_materialize\");\nTemplate[\"afInputTime_materialize\"] = new Template(\"Template.afInputTime_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"time\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputTime_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputUrl_materialize\");\nTemplate[\"afInputUrl_materialize\"] = new Template(\"Template.afInputUrl_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"url\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputUrl_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afInputWeek_materialize\");\nTemplate[\"afInputWeek_materialize\"] = new Template(\"Template.afInputWeek_materialize\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"week\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","Template.afInputWeek_materialize.helpers({\n  atts: Utility.attsToggleInvalidClass\n});\n","\nTemplate.__checkName(\"afSwitch\");\nTemplate[\"afSwitch\"] = new Template(\"Template.afSwitch\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"switch\"\n  }, \"\\n    \", HTML.LABEL({\n    \"for\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));\n    }\n  }, \"\\n      \", Spacebars.With(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"falseLabel\"));\n  }, function() {\n    return Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    });\n  }, function() {\n    return \"Off\";\n  }), \"\\n      \", HTML.INPUT(HTML.Attrs({\n    type: \"checkbox\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  })), \"\\n      \", HTML.Raw('<span class=\"lever\"></span>'), \"\\n      \", Spacebars.With(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"trueLabel\"));\n  }, function() {\n    return Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    });\n  }, function() {\n    return \"On\";\n  }), \"\\n    \"), \"\\n  \");\n}));\n","AutoForm.addInputType('switch', {\n  template: 'afSwitch',\n  valueIn: function(value) {\n    return value;\n  },\n  valueOut: function() {\n    var checked, input, ref, ref1, result;\n    input = this[0];\n    checked = input.checked;\n    if (checked) {\n      result = ((ref = input.attributes.trueValue) != null ? ref.value : void 0) || true;\n    } else {\n      result = ((ref1 = input.attributes.falseValue) != null ? ref1.value : void 0) || false;\n    }\n    return result;\n  }\n});\n\nTemplate.afSwitch.onRendered(function() {\n  var input;\n  input = this.$('input');\n  return this.autorun((function(_this) {\n    return function() {\n      var data, trueValue;\n      data = Template.currentData();\n      trueValue = _this.data.atts.trueValue || true;\n      return input.prop('checked', data.value === trueValue);\n    };\n  })(this));\n});\n\nTemplate.afSwitch.helpers({\n  atts: function() {\n    return _.extend(this.atts, {\n      id: this.atts.name\n    });\n  }\n});\n","\nTemplate.__checkName(\"afPickadate\");\nTemplate[\"afPickadate\"] = new Template(\"Template.afPickadate\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs({\n    type: \"date\",\n    \"data-value\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    },\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"value\"));\n    },\n    checked: \"checked/\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }));\n}));\n","var DEFAULT_PICKADATE_FORMAT_SUBMIT = 'yyyy/mm/dd';\n\nAutoForm.addInputType('pickadate', {\n  template: 'afPickadate',\n  valueIn: function(val, atts) {\n    var result, timezoneId;\n    result = val;\n    timezoneId = atts.timezoneId;\n    if (typeof timezoneId === 'string') {\n      if (typeof moment.tz !== 'function') {\n        throw new Error('If you specify a timezoneId, make sure that you\\'ve added a moment-timezone package to your app');\n      }\n      if (val instanceof Date) {\n        result = moment(\n          AutoForm.Utility.dateToNormalizedLocalDateAndTimeString(val, timezoneId),\n          'YYYY-MM-DD[T]HH:mm:ss.SSS'\n        ).toDate();\n      }\n    }\n    return result;\n  },\n  valueOut: function() {\n    var picker = this.pickadate('picker');\n    var item   = picker && picker.get('select');\n    return item && item.obj;\n  },\n  valueConverters: {\n    'string': function(val) {\n      if (val instanceof Date) {\n        return val.toString();\n      } else {\n        return val;\n      }\n    },\n    'stringArray': function(val) {\n      if (val instanceof Date) {\n        return [val.toString()];\n      }\n      return val;\n    },\n    'number': function(val) {\n      if (val instanceof Date) {\n        return val.getTime();\n      } else {\n        return val;\n      }\n    },\n    'numberArray': function(val) {\n      if (val instanceof Date) {\n        return [val.getTime()];\n      }\n      return val;\n    },\n    'dateArray': function(val) {\n      if (val instanceof Date) {\n        return [val];\n      }\n      return val;\n    }\n  },\n  contextAdjust: function(context) {\n    if (context.atts.timezoneId) {\n      context.atts[\"data-timezone-id\"] = context.atts.timezoneId;\n    }\n    delete context.atts.timezoneId;\n    return context;\n  }\n});\n\nTemplate['afPickadate'].rendered = function() {\n  var input, opts, picker, userOptions;\n  userOptions = this.data.atts.pickadateOptions || {};\n  opts = _.defaults(userOptions, {\n    format: DEFAULT_PICKADATE_FORMAT_SUBMIT,\n    hiddenName: true,\n    closeOnSelect: true\n  });\n  input = this.$('input').pickadate(opts);\n  picker = input.pickadate('picker');\n  this.$('input').on('change', function() {\n    return $(this).pickadate('picker').close();\n  });\n  if (this.data.value) {\n    this.$('input').parent().find('label').addClass('active');\n  }\n  this.autorun(function() {\n    var data;\n    data = Template.currentData();\n    if (data.value instanceof Date) {\n      picker.set('select', data.value);\n    }\n    if (data.min instanceof Date) {\n      picker.set('min', data.min);\n    }\n    if (data.max instanceof Date) {\n      return picker.set('max', data.max);\n    }\n  });\n};\n\nTemplate.afPickadate.helpers({\n  atts: function() {\n    var atts;\n    atts = _.clone(this.atts);\n    delete atts.dateTimePickerOptions;\n    delete atts.pickadateOptions;\n    return atts;\n  }\n});\n","\nTemplate.__checkName(\"afLabel_materialize\");\nTemplate[\"afLabel_materialize\"] = new Template(\"Template.afLabel_materialize\", (function() {\n  var view = this;\n  return HTML.LABEL(HTML.Attrs({\n    \"for\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"id\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"labelText\"));\n  }, function() {\n    return [ Blaze.View(\"lookup:..labelText\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"labelText\"));\n    }), \"\\n    \" ];\n  }, function() {\n    return [ Blaze.View(\"lookup:afFieldLabelText\", function() {\n      return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")\n      }));\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.afLabel_materialize.helpers({\n  atts: function() {\n    var labelAtts;\n    labelAtts = this.afFieldLabelAtts;\n    return labelAtts;\n  }\n});\n","\nTemplate.__checkName(\"autoForm_materialize\");\nTemplate[\"autoForm_materialize\"] = new Template(\"Template.autoForm_materialize\", (function() {\n  var view = this;\n  return Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"afDestroyUpdateForm\"));\n  }, function() {\n    return [ \"\\n    \", HTML.FORM(HTML.Attrs(function() {\n      return Spacebars.attrMustache(view.lookup(\"atts\"));\n    }), \"\\n      \", HTML.DIV({\n      \"class\": \"row\"\n    }, \"\\n        \", Spacebars.With(function() {\n      return Spacebars.dataMustache(view.lookup(\"innerContext\"), view.lookup(\"..\"));\n    }, function() {\n      return [ \"\\n          \", Blaze._InOuterTemplateScope(view, function() {\n        return Blaze._TemplateWith(function() {\n          return Spacebars.call(view.lookup(\".\"));\n        }, function() {\n          return Spacebars.include(function() {\n            return Spacebars.call(view.templateContentBlock);\n          });\n        });\n      }), \"\\n        \" ];\n    }), \"\\n      \"), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n","\nTemplate.__checkName(\"quickForm_materialize\");\nTemplate[\"quickForm_materialize\"] = new Template(\"Template.quickForm_materialize\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"qfAutoFormContext\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"afQuickFields\")), \"\\n    \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"qfShouldRenderButton\"));\n      }, function() {\n        return [ \"\\n      \", HTML.DIV({\n          \"class\": \"row\"\n        }, \"\\n        \", HTML.DIV({\n          \"class\": \"col s12\"\n        }, \"\\n          \", HTML.BUTTON(HTML.Attrs({\n          type: \"submit\"\n        }, function() {\n          return Spacebars.attrMustache(view.lookup(\"submitButtonAtts\"));\n        }), \"\\n            \", Spacebars.With(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"atts\", \"buttonContent\"));\n        }, function() {\n          return [ \"\\n              \", Blaze.View(\"lookup:.\", function() {\n            return Spacebars.mustache(view.lookup(\".\"));\n          }), \"\\n            \" ];\n        }, function() {\n          return \"\\n              Submit\\n            \";\n        }), \"\\n          \"), \"\\n        \"), \"\\n      \"), \"\\n    \" ];\n      }), \"\\n  \" ];\n    });\n  });\n}));\n","Template['quickForm_materialize'].helpers({\n  submitButtonAtts: function() {\n    var atts, qfAtts;\n    qfAtts = this.atts;\n    atts = {};\n    if (typeof qfAtts.buttonClasses === 'string') {\n      atts['class'] = qfAtts.buttonClasses;\n    } else {\n      atts['class'] = 'btn waves-effect waves-light';\n    }\n    return atts;\n  }\n});\n","\nTemplate.__checkName(\"afArrayField_materialize\");\nTemplate[\"afArrayField_materialize\"] = new Template(\"Template.afArrayField_materialize\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"collection\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"collection-item\"\n  }, \"\\n      \", Blaze.View(\"lookup:afFieldLabelText\", function() {\n    return Spacebars.mustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\")\n    }));\n  }), \"\\n\\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasLessThanMaximum\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\"),\n      minCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\"),\n      maxCount: Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.BUTTON({\n      type: \"button\",\n      \"class\": \"btn autoform-add-item\",\n      \"data-autoform-field\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"name\"));\n      },\n      \"data-autoform-mincount\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"minCount\"));\n      },\n      \"data-autoform-maxcount\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"maxCount\"));\n      }\n    }, \"\\n            Add \", HTML.I({\n      \"class\": \"mdi-content-add\"\n    }), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\"atts\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      \"class\": \"collection-item\"\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"red-text\"\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\"atts\"), \"name\")\n      })));\n    })), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"name\")),\n      minCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"minCount\")),\n      maxCount: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"atts\", \"maxCount\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"afEachArrayItem\"), function() {\n      return [ \"\\n      \", HTML.DIV({\n        \"class\": \"collection-item\"\n      }, \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\")),\n          label: Spacebars.call(false),\n          options: Spacebars.call(view.lookup(\"afOptionsFromSchema\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n      \"), \"\\n      \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"afArrayFieldHasMoreThanMinimum\"), Spacebars.kw({\n          name: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"name\"),\n          minCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"minCount\"),\n          maxCount: Spacebars.dot(view.lookup(\"..\"), \"atts\", \"maxCount\")\n        }));\n      }, function() {\n        return [ \"\\n        \", HTML.DIV({\n          \"class\": \"collection-item\"\n        }, \"\\n          \", HTML.BUTTON({\n          type: \"button\",\n          \"class\": \"btn autoform-remove-item\"\n        }, \"\\n            Remove \", HTML.SPAN({\n          \"class\": \"mdi-content-clear\"\n        }), \"\\n          \"), \"\\n        \"), \"\\n      \" ];\n      }), \"\\n    \" ];\n    });\n  }), \"\\n  \");\n}));\n","\nTemplate.__checkName(\"afFormGroup_materialize\");\nTemplate[\"afFormGroup_materialize\"] = new Template(\"Template.afFormGroup_materialize\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"row\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": function() {\n      return [ Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"addInputField\"));\n      }, function() {\n        return \"input-field\";\n      }), \" col s12\" ];\n    }\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\", \"icon\"));\n  }, function() {\n    return [ \"\\n                \", Blaze._TemplateWith(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"afIcon_materialize\"));\n    }), \"\\n            \" ];\n  }), \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"skipLabel\"));\n  }, function() {\n    return [ \"\\n                \", Blaze._TemplateWith(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n    }), \"\\n            \" ];\n  }, function() {\n    return [ \"\\n                \", Blaze._TemplateWith(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"afFieldInputAtts\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"afFieldInput\"));\n    }), \"\\n                \", Blaze._TemplateWith(function() {\n      return Spacebars.call(view.lookup(\".\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"afLabel_materialize\"));\n    }), \"\\n            \" ];\n  }), \"\\n            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n                \", HTML.DIV({\n      \"class\": \"red-text\"\n    }, \"\\n                    \", HTML.I({\n      \"class\": \"mdi-alert-warning\"\n    }), \" \", Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")\n      })));\n    }), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n","Template.afFormGroup_materialize.helpers({\n    addInputField: function() {\n        var result, skipInputType, type;\n        skipInputType = [\n            'checkbox',\n            'checkbox-group',\n            'boolean-checkbox',\n            'select-radio',\n            'select-checkbox-inline',\n            'select-radio-inline',\n            'boolean-radios',\n            'toggle',\n            'switch'\n        ];\n        type = AutoForm.getInputType(this);\n        result = !_.contains(skipInputType, type);\n        return result;\n    },\n    skipLabel: function() {\n        var result, skipLabelTypes, type;\n        skipLabelTypes = [\n            'checkbox',\n            'checkbox-group',\n            'boolean-checkbox',\n            'select-radio',\n            'select-checkbox-inline',\n            'select-radio-inline',\n            'boolean-radio',\n            'toggle',\n            'switch'\n        ];\n        type = AutoForm.getInputType(this);\n        result = this.skipLabel || _.contains(skipLabelTypes, type);\n        return result;\n    }\n});\n\nTemplate.afFormGroup_materialize.rendered = function() {\n    var formId;\n    formId = AutoForm.getFormId();\n    this.autorun((function(_this) {\n        return function() {\n            var value = AutoForm.getFieldValue(_this.data.name, formId);\n            var inputValue = AutoForm.getInputValue(_this.find('input'));\n            var type = AutoForm.getInputType(_this.data);\n            var placeholder = _this.data.afFieldInputAtts.placeholder;\n            var skipActiveLabelTypes = [\n                'select',\n                'checkbox',\n                'checkbox-group',\n                'boolean-checkbox',\n                'select-radio',\n                'select-checkbox-inline',\n                'select-radio-inline',\n                'boolean-radio',\n                'toggle',\n                'switch'\n            ];\n\n            if (!_.contains(skipActiveLabelTypes, type)) {\n                if (!!value || !!inputValue || inputValue === 0 || !!placeholder) {\n                    return _this.$('.input-field > label:not(:focus)').addClass('active');\n                } else {\n                    return _this.$('.input-field > label:not(:focus)').removeClass('active');\n                }\n            }\n        };\n    })(this));\n};\n","\nTemplate.__checkName(\"afObjectField_materialize\");\nTemplate[\"afObjectField_materialize\"] = new Template(\"Template.afObjectField_materialize\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"card-panel autoform-object-field\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"card-content\"\n  }, \"\\n      \", Spacebars.With(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldLabelText\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      \"class\": \"card-title\"\n    }, \"\\n          \", Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    }), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"afFieldIsInvalid\"), Spacebars.kw({\n      name: Spacebars.dot(view.lookup(\".\"), \"name\")\n    }));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      \"class\": \"red-text\"\n    }, Blaze.View(\"lookup:afFieldMessage\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"afFieldMessage\"), Spacebars.kw({\n        name: Spacebars.dot(view.lookup(\".\"), \"name\")\n      })));\n    })), \"\\n      \" ];\n  }), \"\\n      \", Blaze._TemplateWith(function() {\n    return {\n      name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"afQuickFields\"));\n  }), \"\\n    \"), \"\\n  \");\n}));\n","\nTemplate.__checkName(\"afQuickField_materialize\");\nTemplate[\"afQuickField_materialize\"] = new Template(\"Template.afQuickField_materialize\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"isGroup\"), Spacebars.kw({\n      atts: view.lookup(\".\")\n    }));\n  }, function() {\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"afObjectField_materialize\")), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"isFieldArray\"), Spacebars.kw({\n        atts: view.lookup(\".\")\n      }));\n    }, function() {\n      return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"afArrayField_materialize\")), \"\\n    \" ];\n    }, function() {\n      return [ \"\\n      \", Blaze._TemplateWith(function() {\n        return Spacebars.call(view.lookup(\"groupAtts\"));\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afFormGroup_materialize\"));\n      }), \"\\n    \" ];\n    }), \"\\n  \" ];\n  });\n}));\n"]}}]