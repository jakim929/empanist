[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar ReactiveDict = Package['reactive-dict'].ReactiveDict;\nvar Random = Package.random.Random;\nvar _ = Package.underscore._;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar Template = Package['peerlibrary:blaze-components'].Template;\nvar BlazeComponent = Package['peerlibrary:blaze-components'].BlazeComponent;\nvar BlazeComponentDebug = Package['peerlibrary:blaze-components'].BlazeComponentDebug;\nvar EasySearch = Package['easysearch:core'].EasySearch;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar BaseComponent, SingleIndexComponent;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"easysearch:components\":{\"lib\":{\"base.js\":[\"babel-runtime/helpers/toConsumableArray\",\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/createClass\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/base.js                                                                //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');                                //\n                                                                                                             //\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);                                       //\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _createClass2 = require('babel-runtime/helpers/createClass');                                            //\n                                                                                                             //\nvar _createClass3 = _interopRequireDefault(_createClass2);                                                   //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The BaseComponent holds the base logic for EasySearch Components.                                         //\n *                                                                                                           //\n * @type {BaseComponent}                                                                                     //\n */                                                                                                          //\nBaseComponent = function (_BlazeComponent) {                                                                 // 6\n  (0, _inherits3['default'])(BaseComponent, _BlazeComponent);                                                //\n                                                                                                             //\n  function BaseComponent() {                                                                                 //\n    (0, _classCallCheck3['default'])(this, BaseComponent);                                                   //\n    return (0, _possibleConstructorReturn3['default'])(this, _BlazeComponent.apply(this, arguments));        //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Setup component on created.                                                                             //\n   */                                                                                                        //\n                                                                                                             //\n  BaseComponent.prototype.onCreated = function () {                                                          //\n    function onCreated() {                                                                                   //\n      var _ref;                                                                                              //\n                                                                                                             //\n      var index = this.getData().index,                                                                      // 29\n          indexes = [index];                                                                                 //\n                                                                                                             //\n      if (!index) {                                                                                          // 32\n        indexes = this.getData().indexes;                                                                    // 33\n      }                                                                                                      //\n                                                                                                             //\n      if (_.isEmpty(indexes)) {                                                                              // 36\n        throw new Meteor.Error('no-index', 'Please provide an index for your component');                    // 37\n      }                                                                                                      //\n                                                                                                             //\n      if (indexes.filter(function (index) {                                                                  // 40\n        return index instanceof EasySearch.Index;                                                            //\n      }).length != indexes.length) {                                                                         //\n        throw new Meteor.Error('invalid-configuration', 'Did not receive an index or an array of indexes: \"' + indexes.toString() + '\"');\n      }                                                                                                      //\n                                                                                                             //\n      this.indexes = indexes;                                                                                // 47\n      this.options = _.defaults({}, (_ref = _).omit.apply(_ref, [this.getData()].concat((0, _toConsumableArray3['default'])(BaseComponent.reserveredProperties))), this.defaultOptions);\n                                                                                                             //\n      check(this.name, Match.Optional(String));                                                              // 50\n      check(this.options, Object);                                                                           // 51\n                                                                                                             //\n      this.eachIndex(function (index, name) {                                                                // 53\n        if (!index.getComponentDict(name)) {                                                                 // 54\n          index.registerComponent(name);                                                                     // 55\n        }                                                                                                    //\n      });                                                                                                    //\n    }                                                                                                        //\n                                                                                                             //\n    return onCreated;                                                                                        //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the default options.                                                                             //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  /**                                                                                                        //\n   * Search the component.                                                                                   //\n   *                                                                                                         //\n   * @param {String} searchString String to search for                                                       //\n   */                                                                                                        //\n                                                                                                             //\n  BaseComponent.prototype.search = function () {                                                             // 6\n    function search(searchString) {                                                                          //\n      check(searchString, String);                                                                           // 75\n                                                                                                             //\n      var showDocuments = !this.getData().noDocumentsOnEmpty || 0 < searchString.length;                     // 77\n                                                                                                             //\n      this.eachIndex(function (index, name) {                                                                // 79\n        index.getComponentDict(name).set('showDocuments', showDocuments);                                    // 80\n                                                                                                             //\n        if (showDocuments) {                                                                                 // 82\n          index.getComponentMethods(name).search(searchString);                                              // 83\n        }                                                                                                    //\n      });                                                                                                    //\n    }                                                                                                        //\n                                                                                                             //\n    return search;                                                                                           //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the data.                                                                                        //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  BaseComponent.prototype.getData = function () {                                                            // 6\n    function getData() {                                                                                     //\n      return this.data() || {};                                                                              // 94\n    }                                                                                                        //\n                                                                                                             //\n    return getData;                                                                                          //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the dictionaries.                                                                                //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  /**                                                                                                        //\n   * Loop through each index and apply a function                                                            //\n   *                                                                                                         //\n   * @param {Function} func   Function to run                                                                //\n   * @param {String}   method Lodash method name                                                             //\n   *                                                                                                         //\n   * @return mixed                                                                                           //\n   */                                                                                                        //\n                                                                                                             //\n  BaseComponent.prototype.eachIndex = function () {                                                          // 6\n    function eachIndex(func) {                                                                               //\n      var method = arguments.length <= 1 || arguments[1] === undefined ? 'each' : arguments[1];              //\n                                                                                                             //\n      var componentScope = this,                                                                             // 117\n          logic = this.getData().logic;                                                                      //\n                                                                                                             //\n      if (!_.isEmpty(logic)) {                                                                               // 120\n        method = 'OR' === logic ? 'some' : 'every';                                                          // 121\n      }                                                                                                      //\n                                                                                                             //\n      return _[method](this.indexes, function (index) {                                                      // 124\n        return func.apply(this, [index, componentScope.name]);                                               // 125\n      });                                                                                                    //\n    }                                                                                                        //\n                                                                                                             //\n    return eachIndex;                                                                                        //\n  }();                                                                                                       //\n                                                                                                             //\n  (0, _createClass3['default'])(BaseComponent, [{                                                            //\n    key: 'name',                                                                                             //\n                                                                                                             //\n    /**                                                                                                      //\n     * Return the name of the component.                                                                     //\n     *                                                                                                       //\n     * @returns {String}                                                                                     //\n     */                                                                                                      //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return this.getData().name;                                                                          // 13\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n                                                                                                             //\n    /**                                                                                                      //\n     * Return an array of properties that are reserved to the base component.                                //\n     *                                                                                                       //\n     * @returns {String[]}                                                                                   //\n     */                                                                                                      //\n                                                                                                             //\n  }, {                                                                                                       //\n    key: 'defaultOptions',                                                                                   //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return {};                                                                                           // 66\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }, {                                                                                                       //\n    key: 'dicts',                                                                                            //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return this.eachIndex(function (index, name) {                                                       // 103\n          return index.getComponentDict(name);                                                               // 104\n        }, 'map');                                                                                           //\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }], [{                                                                                                     //\n    key: 'reserveredProperties',                                                                             //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return ['index', 'indexes', 'name', 'attributes'];                                                   // 22\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }]);                                                                                                       //\n  return BaseComponent;                                                                                      //\n}(BlazeComponent);                                                                                           //\n                                                                                                             //\nEasySearch.BaseComponent = BaseComponent;                                                                    // 130\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"single-index.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/createClass\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/single-index.js                                                        //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _createClass2 = require('babel-runtime/helpers/createClass');                                            //\n                                                                                                             //\nvar _createClass3 = _interopRequireDefault(_createClass2);                                                   //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The SingleIndexComponent holds logic for components that only can use one index.                          //\n *                                                                                                           //\n * @type {SingleIndexComponent}                                                                              //\n */                                                                                                          //\nSingleIndexComponent = function (_BaseComponent) {                                                           // 6\n  (0, _inherits3['default'])(SingleIndexComponent, _BaseComponent);                                          //\n                                                                                                             //\n  function SingleIndexComponent() {                                                                          //\n    (0, _classCallCheck3['default'])(this, SingleIndexComponent);                                            //\n    return (0, _possibleConstructorReturn3['default'])(this, _BaseComponent.apply(this, arguments));         //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Setup component on created.                                                                             //\n   */                                                                                                        //\n                                                                                                             //\n  SingleIndexComponent.prototype.onCreated = function () {                                                   //\n    function onCreated() {                                                                                   //\n      _BaseComponent.prototype.onCreated.call(this);                                                         // 11\n                                                                                                             //\n      if (this.indexes.length > 1) {                                                                         // 13\n        throw new Meteor.Error('only-single-index', 'Can only specify one index');                           // 14\n      }                                                                                                      //\n    }                                                                                                        //\n                                                                                                             //\n    return onCreated;                                                                                        //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the index                                                                                        //\n   *                                                                                                         //\n   * @returns {Index}                                                                                        //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  (0, _createClass3['default'])(SingleIndexComponent, [{                                                     //\n    key: 'index',                                                                                            //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return _.first(this.indexes);                                                                        // 24\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n                                                                                                             //\n    /**                                                                                                      //\n     * Return the dictionary.                                                                                //\n     *                                                                                                       //\n     * @returns {Object}                                                                                     //\n     */                                                                                                      //\n                                                                                                             //\n  }, {                                                                                                       //\n    key: 'dict',                                                                                             //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return _.first(this.dicts);                                                                          // 33\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }]);                                                                                                       //\n  return SingleIndexComponent;                                                                               //\n}(BaseComponent);                                                                                            //\n                                                                                                             //\nEasySearch.SingleIndexComponent = SingleIndexComponent;                                                      // 37\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"component-methods.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/component-methods.js                                                   //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nEasySearch._getComponentMethods = function (dict, index) {                                                   // 1\n  return {                                                                                                   // 2\n    /**                                                                                                      //\n     * Search a component for the given search string.                                                       //\n     *                                                                                                       //\n     * @param {Object|String} searchDefinition Search definition                                             //\n     */                                                                                                      //\n    search: function () {                                                                                    // 8\n      function search(searchDefinition) {                                                                    // 8\n        dict.set('searchOptions', {                                                                          // 9\n          props: (dict.get('searchOptions') || {}).props                                                     // 10\n        });                                                                                                  //\n                                                                                                             //\n        dict.set('searchDefinition', searchDefinition);                                                      // 13\n        dict.set('stopPublication', true);                                                                   // 14\n      }                                                                                                      //\n                                                                                                             //\n      return search;                                                                                         //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Return the EasySearch.Cursor for the current search.                                                  //\n     *                                                                                                       //\n     * @returns {Cursor}                                                                                     //\n     */                                                                                                      //\n    getCursor: function () {                                                                                 // 21\n      function getCursor() {                                                                                 // 21\n        var searchDefinition = dict.get('searchDefinition') || '',                                           // 22\n            options = dict.get('searchOptions'),                                                             //\n            showDocuments = dict.get('showDocuments');                                                       //\n                                                                                                             //\n        check(options, Match.Optional(Object));                                                              // 26\n                                                                                                             //\n        if (false === showDocuments) {                                                                       // 28\n          dict.set('count', 0);                                                                              // 29\n          dict.set('searching', false);                                                                      // 30\n          dict.set('limit', 0);                                                                              // 31\n          dict.set('skip', 0);                                                                               // 32\n          dict.set('currentCount', 0);                                                                       // 33\n          dict.set('stopPublication', false);                                                                // 34\n                                                                                                             //\n          return EasySearch.Cursor.emptyCursor;                                                              // 36\n        }                                                                                                    //\n                                                                                                             //\n        var cursor = index.search(searchDefinition, options),                                                // 39\n            searchOptions = index._getSearchOptions(options);                                                //\n                                                                                                             //\n        dict.set('count', cursor.count());                                                                   // 42\n        dict.set('searching', !cursor.isReady());                                                            // 43\n        dict.set('limit', searchOptions.limit);                                                              // 44\n        dict.set('skip', searchOptions.skip);                                                                // 45\n        dict.set('currentCount', cursor.mongoCursor.count());                                                // 46\n        dict.set('stopPublication', false);                                                                  // 47\n                                                                                                             //\n        return cursor;                                                                                       // 49\n      }                                                                                                      //\n                                                                                                             //\n      return getCursor;                                                                                      //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Return true if the current search string is empty.                                                    //\n     *                                                                                                       //\n     * @returns {boolean}                                                                                    //\n     */                                                                                                      //\n    searchIsEmpty: function () {                                                                             // 56\n      function searchIsEmpty() {                                                                             // 56\n        var searchDefinition = dict.get('searchDefinition');                                                 // 57\n                                                                                                             //\n        return !searchDefinition || _.isString(searchDefinition) && 0 === searchDefinition.trim().length;    // 59\n      }                                                                                                      //\n                                                                                                             //\n      return searchIsEmpty;                                                                                  //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Return true if the component has no results.                                                          //\n     *                                                                                                       //\n     * @returns {boolean}                                                                                    //\n     */                                                                                                      //\n    hasNoResults: function () {                                                                              // 66\n      function hasNoResults() {                                                                              // 66\n        var count = dict.get('count'),                                                                       // 67\n            showDocuments = dict.get('showDocuments');                                                       //\n                                                                                                             //\n        return false !== showDocuments && !dict.get('searching') && (!_.isNumber(count) || 0 === count);     // 70\n      }                                                                                                      //\n                                                                                                             //\n      return hasNoResults;                                                                                   //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Return true if the component is being searched.                                                       //\n     *                                                                                                       //\n     * @returns {boolean}                                                                                    //\n     */                                                                                                      //\n    isSearching: function () {                                                                               // 79\n      function isSearching() {                                                                               // 79\n        return !!dict.get('searching');                                                                      // 80\n      }                                                                                                      //\n                                                                                                             //\n      return isSearching;                                                                                    //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Return true if the component has more documents than displayed right now.                             //\n     *                                                                                                       //\n     * @returns {boolean}                                                                                    //\n     */                                                                                                      //\n    hasMoreDocuments: function () {                                                                          // 87\n      function hasMoreDocuments() {                                                                          // 87\n        return dict.get('currentCount') < dict.get('count');                                                 // 88\n      }                                                                                                      //\n                                                                                                             //\n      return hasMoreDocuments;                                                                               //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Load more documents for the component.                                                                //\n     *                                                                                                       //\n     * @param {Number} count Count of docs                                                                   //\n     */                                                                                                      //\n    loadMore: function () {                                                                                  // 95\n      function loadMore(count) {                                                                             // 95\n        check(count, Number);                                                                                // 96\n                                                                                                             //\n        var currentCount = dict.get('currentCount'),                                                         // 98\n            options = dict.get('searchOptions') || {};                                                       //\n                                                                                                             //\n        options.limit = currentCount + count;                                                                // 101\n        dict.set('searchOptions', options);                                                                  // 102\n      }                                                                                                      //\n                                                                                                             //\n      return loadMore;                                                                                       //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Paginate through documents for the given page.                                                        //\n     *                                                                                                       //\n     * @param {Number} page Page number                                                                      //\n     */                                                                                                      //\n    paginate: function () {                                                                                  // 109\n      function paginate(page) {                                                                              // 109\n        check(page, Number);                                                                                 // 110\n                                                                                                             //\n        var options = dict.get('searchOptions') || {},                                                       // 112\n            limit = dict.get('limit');                                                                       //\n                                                                                                             //\n        options.skip = limit * (page - 1);                                                                   // 115\n        dict.set('searchOptions', options);                                                                  // 116\n        dict.set('stopPublication', true);                                                                   // 117\n      }                                                                                                      //\n                                                                                                             //\n      return paginate;                                                                                       //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Add custom properties for search.                                                                     //\n     */                                                                                                      //\n    addProps: function () {                                                                                  // 122\n      function addProps() {                                                                                  // 122\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {               //\n          args[_key] = arguments[_key];                                                                      //\n        }                                                                                                    //\n                                                                                                             //\n        var options = dict.get('searchOptions') || {};                                                       // 123\n                                                                                                             //\n        options.props = options.props || {};                                                                 // 125\n                                                                                                             //\n        if (_.isObject(args[0])) {                                                                           // 127\n          options.props = _.extend(options.props, args[0]);                                                  // 128\n        } else if (_.isString(args[0])) {                                                                    //\n          options.props[args[0]] = args[1];                                                                  // 130\n        }                                                                                                    //\n                                                                                                             //\n        dict.set('searchOptions', options);                                                                  // 133\n      }                                                                                                      //\n                                                                                                             //\n      return addProps;                                                                                       //\n    }(),                                                                                                     //\n    /**                                                                                                      //\n     * Remove custom properties for search.                                                                  //\n     */                                                                                                      //\n    removeProps: function () {                                                                               // 138\n      function removeProps() {                                                                               // 138\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {         //\n          args[_key2] = arguments[_key2];                                                                    //\n        }                                                                                                    //\n                                                                                                             //\n        var options = dict.get('searchOptions') || {};                                                       // 139\n                                                                                                             //\n        if (!_.isEmpty(args)) {                                                                              // 141\n          options.props = _.omit(options.props, args) || {};                                                 // 142\n        } else {                                                                                             //\n          options.props = {};                                                                                // 144\n        }                                                                                                    //\n                                                                                                             //\n        dict.set('searchOptions', options);                                                                  // 147\n      }                                                                                                      //\n                                                                                                             //\n      return removeProps;                                                                                    //\n    }()                                                                                                      //\n  };                                                                                                         //\n};                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"core.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/createClass\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/core.js                                                                //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _createClass2 = require('babel-runtime/helpers/createClass');                                            //\n                                                                                                             //\nvar _createClass3 = _interopRequireDefault(_createClass2);                                                   //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * Extend EasySearch.Index with component functionality.                                                     //\n *                                                                                                           //\n * @type {Index}                                                                                             //\n */                                                                                                          //\nEasySearch.Index = function (_EasySearch$Index) {                                                            // 6\n  (0, _inherits3['default'])(Index, _EasySearch$Index);                                                      //\n                                                                                                             //\n  /**                                                                                                        //\n   * Constructor.                                                                                            //\n   */                                                                                                        //\n                                                                                                             //\n  function Index() {                                                                                         // 10\n    (0, _classCallCheck3['default'])(this, Index);                                                           //\n                                                                                                             //\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _EasySearch$Index.apply(this, arguments));\n                                                                                                             //\n    _this.components = {};                                                                                   // 12\n    return _this;                                                                                            //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return static default name for components.                                                              //\n   *                                                                                                         //\n   * @returns {String}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  /**                                                                                                        //\n   * Register a component on the index.                                                                      //\n   *                                                                                                         //\n   * @param {String} componentName Optional name of the component                                            //\n   */                                                                                                        //\n                                                                                                             //\n  Index.prototype.registerComponent = function () {                                                          // 6\n    function registerComponent() {                                                                           //\n      var componentName = arguments.length <= 0 || arguments[0] === undefined ? EasySearch.Index.COMPONENT_DEFAULT_NAME : arguments[0];\n                                                                                                             //\n      this.components[componentName] = new ReactiveDict('easySearchComponent_' + this.config.name + '_' + componentName + '_' + Random.id());\n    }                                                                                                        //\n                                                                                                             //\n    return registerComponent;                                                                                //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Get the reactive dictionary for a component.                                                            //\n   *                                                                                                         //\n   * @param {String} componentName Optional name of the component                                            //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  Index.prototype.getComponentDict = function () {                                                           // 6\n    function getComponentDict() {                                                                            //\n      var componentName = arguments.length <= 0 || arguments[0] === undefined ? EasySearch.Index.COMPONENT_DEFAULT_NAME : arguments[0];\n                                                                                                             //\n      return this.components[componentName];                                                                 // 39\n    }                                                                                                        //\n                                                                                                             //\n    return getComponentDict;                                                                                 //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Get component methods that are useful for implementing search behaviour.                                //\n   *                                                                                                         //\n   * @param componentName                                                                                    //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  Index.prototype.getComponentMethods = function () {                                                        // 6\n    function getComponentMethods() {                                                                         //\n      var componentName = arguments.length <= 0 || arguments[0] === undefined ? EasySearch.Index.COMPONENT_DEFAULT_NAME : arguments[0];\n                                                                                                             //\n      var dict = this.getComponentDict(componentName);                                                       // 48\n                                                                                                             //\n      if (!dict) {                                                                                           // 50\n        throw new Meteor.Error('no-component', 'Component with name \\'' + componentName + '\\' not found');   // 51\n      }                                                                                                      //\n                                                                                                             //\n      return EasySearch._getComponentMethods(dict, this);                                                    // 54\n    }                                                                                                        //\n                                                                                                             //\n    return getComponentMethods;                                                                              //\n  }();                                                                                                       //\n                                                                                                             //\n  (0, _createClass3['default'])(Index, null, [{                                                              //\n    key: 'COMPONENT_DEFAULT_NAME',                                                                           //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return '__default';                                                                                  // 21\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }]);                                                                                                       //\n  return Index;                                                                                              //\n}(EasySearch.Index);                                                                                         //\n                                                                                                             //\n/**                                                                                                          //\n * Return true if the current page is valid.                                                                 //\n *                                                                                                           //\n * @param {Number} totalPagesLength Count of all pages available                                             //\n * @param {Number} currentPage      Current page to check                                                    //\n *                                                                                                           //\n * @returns {boolean}                                                                                        //\n */                                                                                                          //\nfunction isValidPage(totalPagesLength, currentPage) {                                                        // 66\n  return currentPage <= totalPagesLength && currentPage > 0;                                                 // 67\n}                                                                                                            //\n                                                                                                             //\n/**                                                                                                          //\n * Helper method to get the pages for pagination as an array.                                                //\n *                                                                                                           //\n * @param totalCount   Total count of results                                                                //\n * @param pageCount    Count of results per page                                                             //\n * @param currentPage  Current page                                                                          //\n * @param prevAndNext  True if Next and Previous buttons should appear                                       //\n * @param maxPages     Maximum count of pages to show                                                        //\n *                                                                                                           //\n * @private                                                                                                  //\n *                                                                                                           //\n * @returns {Array}                                                                                          //\n */                                                                                                          //\nEasySearch._getPagesForPagination = function (_ref) {                                                        // 83\n  var totalCount = _ref.totalCount;                                                                          //\n  var pageCount = _ref.pageCount;                                                                            //\n  var currentPage = _ref.currentPage;                                                                        //\n  var prevAndNext = _ref.prevAndNext;                                                                        //\n  var maxPages = _ref.maxPages;                                                                              //\n                                                                                                             //\n  var pages = _.range(1, Math.ceil(totalCount / pageCount) + 1),                                             // 84\n      pagesLength = pages.length;                                                                            //\n                                                                                                             //\n  if (!isValidPage(pagesLength, currentPage)) {                                                              // 87\n    throw new Meteor.Error('invalid-page', 'Current page is not in valid range');                            // 88\n  }                                                                                                          //\n                                                                                                             //\n  if (maxPages) {                                                                                            // 91\n    var startSlice = currentPage > maxPages / 2 ? currentPage - 1 - Math.floor(maxPages / 2) : 0,            // 92\n        endSlice = startSlice + maxPages;                                                                    //\n                                                                                                             //\n    if (endSlice > pagesLength) {                                                                            // 95\n      pages = pages.slice(-maxPages);                                                                        // 96\n    } else {                                                                                                 //\n      pages = pages.slice(startSlice, startSlice + maxPages);                                                // 98\n    }                                                                                                        //\n  }                                                                                                          //\n                                                                                                             //\n  var pageData = _.map(pages, function (page) {                                                              // 102\n    var isCurrentPage = page === currentPage;                                                                // 103\n    return { page: page, content: page.toString(), current: isCurrentPage, disabled: isCurrentPage };        // 104\n  });                                                                                                        //\n                                                                                                             //\n  if (prevAndNext) {                                                                                         // 107\n    // Previous                                                                                              //\n    var prevPage = isValidPage(pagesLength, currentPage - 1) ? currentPage - 1 : null;                       // 109\n    pageData.unshift({ page: prevPage, content: 'Prev', current: false, disabled: 1 === currentPage });      // 110\n    // Next                                                                                                  //\n    var nextPage = isValidPage(pagesLength, currentPage + 1) ? currentPage + 1 : null;                       // 107\n    pageData.push({ page: nextPage, content: 'Next', current: false, disabled: null == nextPage || pagesLength + 1 === currentPage });\n  }                                                                                                          //\n                                                                                                             //\n  return pageData;                                                                                           // 118\n};                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"input\":{\"template.input.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/input/template.input.js                                                //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"EasySearch.Input\");                                                                    // 2\nTemplate[\"EasySearch.Input\"] = new Template(\"Template.EasySearch.Input\", (function() {                       // 3\n  var view = this;                                                                                           // 4\n  return HTML.INPUT(HTML.Attrs(function() {                                                                  // 5\n    return Spacebars.attrMustache(view.lookup(\"inputAttributes\"));                                           // 6\n  }));                                                                                                       // 7\n}));                                                                                                         // 8\n                                                                                                             // 9\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"input.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/createClass\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/input/input.js                                                         //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _createClass2 = require('babel-runtime/helpers/createClass');                                            //\n                                                                                                             //\nvar _createClass3 = _interopRequireDefault(_createClass2);                                                   //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The InputComponent lets you search through configured indexes.                                            //\n *                                                                                                           //\n * @type {InputComponent}                                                                                    //\n */                                                                                                          //\nEasySearch.InputComponent = function (_BaseComponent) {                                                      // 6\n  (0, _inherits3['default'])(InputComponent, _BaseComponent);                                                //\n                                                                                                             //\n  function InputComponent() {                                                                                //\n    (0, _classCallCheck3['default'])(this, InputComponent);                                                  //\n    return (0, _possibleConstructorReturn3['default'])(this, _BaseComponent.apply(this, arguments));         //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Setup input onCreated.                                                                                  //\n   */                                                                                                        //\n                                                                                                             //\n  InputComponent.prototype.onCreated = function () {                                                         //\n    function onCreated() {                                                                                   //\n      var _BaseComponent$protot,                                                                             //\n          _this2 = this;                                                                                     //\n                                                                                                             //\n      (_BaseComponent$protot = _BaseComponent.prototype.onCreated).call.apply(_BaseComponent$protot, [this].concat(Array.prototype.slice.call(arguments)));\n                                                                                                             //\n      this.search(this.inputAttributes().value);                                                             // 13\n                                                                                                             //\n      // create a reactive dependency to the cursor                                                          //\n      this.debouncedSearch = _.debounce(function (searchString) {                                            // 10\n        searchString = searchString.trim();                                                                  // 17\n                                                                                                             //\n        if (_this2.searchString !== searchString) {                                                          // 19\n          _this2.searchString = searchString;                                                                // 20\n                                                                                                             //\n          _this2.eachIndex(function (index, name) {                                                          // 22\n            index.getComponentDict(name).set('currentPage', 1);                                              // 23\n          });                                                                                                //\n                                                                                                             //\n          _this2.search(searchString);                                                                       // 26\n        }                                                                                                    //\n      }, this.options.timeout);                                                                              //\n    }                                                                                                        //\n                                                                                                             //\n    return onCreated;                                                                                        //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Event map.                                                                                              //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  InputComponent.prototype.events = function () {                                                            // 6\n    function events() {                                                                                      //\n      return [{                                                                                              // 38\n        'keyup input': function () {                                                                         // 39\n          function keyupInput(e) {                                                                           // 39\n            if ('enter' == this.getData().event && e.keyCode != 13) {                                        // 40\n              return;                                                                                        // 41\n            }                                                                                                //\n                                                                                                             //\n            this.debouncedSearch($(e.target).val());                                                         // 44\n          }                                                                                                  //\n                                                                                                             //\n          return keyupInput;                                                                                 //\n        }()                                                                                                  //\n      }];                                                                                                    //\n    }                                                                                                        //\n                                                                                                             //\n    return events;                                                                                           //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the attributes to set on the input (class, id).                                                  //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  InputComponent.prototype.inputAttributes = function () {                                                   // 6\n    function inputAttributes() {                                                                             //\n      return _.defaults({}, this.getData().attributes, InputComponent.defaultAttributes);                    // 55\n    }                                                                                                        //\n                                                                                                             //\n    return inputAttributes;                                                                                  //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the default attributes.                                                                          //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  (0, _createClass3['default'])(InputComponent, [{                                                           //\n    key: 'defaultOptions',                                                                                   //\n                                                                                                             //\n                                                                                                             //\n    /**                                                                                                      //\n     * Return the default options.                                                                           //\n     *                                                                                                       //\n     * @returns {Object}                                                                                     //\n     */                                                                                                      //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return {                                                                                             // 76\n          timeout: 50                                                                                        // 77\n        };                                                                                                   //\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }], [{                                                                                                     //\n    key: 'defaultAttributes',                                                                                //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return {                                                                                             // 64\n          type: 'text',                                                                                      // 65\n          value: ''                                                                                          // 66\n        };                                                                                                   //\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }]);                                                                                                       //\n  return InputComponent;                                                                                     //\n}(BaseComponent);                                                                                            //\n                                                                                                             //\nEasySearch.InputComponent.register('EasySearch.Input');                                                      // 82\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"field-input\":{\"template.field-input.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/field-input/template.field-input.js                                    //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"EasySearch.FieldInput\");                                                               // 2\nTemplate[\"EasySearch.FieldInput\"] = new Template(\"Template.EasySearch.FieldInput\", (function() {             // 3\n  var view = this;                                                                                           // 4\n  return HTML.INPUT(HTML.Attrs(function() {                                                                  // 5\n    return Spacebars.attrMustache(view.lookup(\"inputAttributes\"));                                           // 6\n  }));                                                                                                       // 7\n}));                                                                                                         // 8\n                                                                                                             // 9\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"field-input.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/field-input/field-input.js                                             //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The FieldInputComponent lets you search through configured indexes for a specified fild.                  //\n *                                                                                                           //\n * @type {FieldInputComponent}                                                                               //\n */                                                                                                          //\nEasySearch.FieldInputComponent = function (_EasySearch$InputComp) {                                          // 6\n  (0, _inherits3['default'])(FieldInputComponent, _EasySearch$InputComp);                                    //\n                                                                                                             //\n  function FieldInputComponent() {                                                                           //\n    (0, _classCallCheck3['default'])(this, FieldInputComponent);                                             //\n    return (0, _possibleConstructorReturn3['default'])(this, _EasySearch$InputComp.apply(this, arguments));  //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Setup component on created.                                                                             //\n   */                                                                                                        //\n                                                                                                             //\n  FieldInputComponent.prototype.onCreated = function () {                                                    //\n    function onCreated() {                                                                                   //\n      _EasySearch$InputComp.prototype.onCreated.call(this);                                                  // 11\n                                                                                                             //\n      if (_.isEmpty(this.getData().field)) {                                                                 // 13\n        throw new Meteor.Error('no-field', 'Please provide a field for your field input component');         // 14\n      }                                                                                                      //\n    }                                                                                                        //\n                                                                                                             //\n    return onCreated;                                                                                        //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Search the component.                                                                                   //\n   *                                                                                                         //\n   * @param {String} searchString String to search for                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  FieldInputComponent.prototype.search = function () {                                                       // 6\n    function search(searchString) {                                                                          //\n      var _this2 = this;                                                                                     //\n                                                                                                             //\n      check(searchString, String);                                                                           // 24\n                                                                                                             //\n      this.eachIndex(function (index, name) {                                                                // 26\n        var searchDefinition = index.getComponentDict(name).get('searchDefinition') || {};                   // 27\n                                                                                                             //\n        if (_.isString(searchDefinition)) {                                                                  // 29\n          throw new Meteor.Error('You can either EasySearch.FieldInput or EasySearch.Input');                // 30\n        }                                                                                                    //\n                                                                                                             //\n        if (_this2.options.field) {                                                                          // 33\n          searchDefinition[_this2.options.field] = searchString;                                             // 34\n          index.getComponentMethods(name).search(searchDefinition);                                          // 35\n        }                                                                                                    //\n      });                                                                                                    //\n    }                                                                                                        //\n                                                                                                             //\n    return search;                                                                                           //\n  }();                                                                                                       //\n                                                                                                             //\n  return FieldInputComponent;                                                                                //\n}(EasySearch.InputComponent);                                                                                //\n                                                                                                             //\nEasySearch.FieldInputComponent.register('EasySearch.FieldInput');                                            // 41\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"each\":{\"template.each.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/each/template.each.js                                                  //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"EasySearch.Each\");                                                                     // 2\nTemplate[\"EasySearch.Each\"] = new Template(\"Template.EasySearch.Each\", (function() {                         // 3\n  var view = this;                                                                                           // 4\n  return Blaze.Each(function() {                                                                             // 5\n    return Spacebars.call(view.lookup(\"doc\"));                                                               // 6\n  }, function() {                                                                                            // 7\n    return [ \"\\n      \", Blaze._InOuterTemplateScope(view, function() {                                      // 8\n      return Blaze._TemplateWith(function() {                                                                // 9\n        return Spacebars.call(view.lookup(\".\"));                                                             // 10\n      }, function() {                                                                                        // 11\n        return Spacebars.include(function() {                                                                // 12\n          return Spacebars.call(view.templateContentBlock);                                                  // 13\n        });                                                                                                  // 14\n      });                                                                                                    // 15\n    }), \"\\n    \" ];                                                                                          // 16\n  });                                                                                                        // 17\n}));                                                                                                         // 18\n                                                                                                             // 19\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"each.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/each/each.js                                                           //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The EachComponent allows to loop through the search results found.                                        //\n *                                                                                                           //\n * @type {EachComponent}                                                                                     //\n */                                                                                                          //\nEasySearch.EachComponent = function (_SingleIndexComponent) {                                                // 6\n  (0, _inherits3['default'])(EachComponent, _SingleIndexComponent);                                          //\n                                                                                                             //\n  function EachComponent() {                                                                                 //\n    (0, _classCallCheck3['default'])(this, EachComponent);                                                   //\n    return (0, _possibleConstructorReturn3['default'])(this, _SingleIndexComponent.apply(this, arguments));  //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the mongo cursor for the search.                                                                 //\n   *                                                                                                         //\n   * @returns {Mongo.Cursor}                                                                                 //\n   */                                                                                                        //\n                                                                                                             //\n  EachComponent.prototype.doc = function () {                                                                //\n    function doc() {                                                                                         //\n      var stopPublication = this.index.getComponentDict(this.name).get('stopPublication');                   // 13\n                                                                                                             //\n      this.cursor && stopPublication && this.cursor.stop();                                                  // 18\n                                                                                                             //\n      this.cursor = this.index.getComponentMethods(this.name).getCursor();                                   // 20\n                                                                                                             //\n      return this.cursor.mongoCursor;                                                                        // 25\n    }                                                                                                        //\n                                                                                                             //\n    return doc;                                                                                              //\n  }();                                                                                                       //\n                                                                                                             //\n  return EachComponent;                                                                                      //\n}(SingleIndexComponent);                                                                                     //\n                                                                                                             //\nEasySearch.EachComponent.register('EasySearch.Each');                                                        // 29\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"if-input-empty\":{\"template.if-input-empty.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/if-input-empty/template.if-input-empty.js                              //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"EasySearch.IfInputEmpty\");                                                             // 2\nTemplate[\"EasySearch.IfInputEmpty\"] = new Template(\"Template.EasySearch.IfInputEmpty\", (function() {         // 3\n  var view = this;                                                                                           // 4\n  return Blaze.If(function() {                                                                               // 5\n    return Spacebars.call(view.lookup(\"inputEmpty\"));                                                        // 6\n  }, function() {                                                                                            // 7\n    return [ \"\\n        \", Blaze._InOuterTemplateScope(view, function() {                                    // 8\n      return Spacebars.include(function() {                                                                  // 9\n        return Spacebars.call(view.templateContentBlock);                                                    // 10\n      });                                                                                                    // 11\n    }), \"\\n    \" ];                                                                                          // 12\n  }, function() {                                                                                            // 13\n    return [ \"\\n        \", Blaze.If(function() {                                                             // 14\n      return Spacebars.call(view.templateElseBlock);                                                         // 15\n    }, function() {                                                                                          // 16\n      return [ \"\\n            \", Blaze._InOuterTemplateScope(view, function() {                              // 17\n        return Spacebars.include(function() {                                                                // 18\n          return Spacebars.call(view.templateElseBlock);                                                     // 19\n        });                                                                                                  // 20\n      }), \"\\n        \" ];                                                                                    // 21\n    }), \"\\n    \" ];                                                                                          // 22\n  });                                                                                                        // 23\n}));                                                                                                         // 24\n                                                                                                             // 25\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"if-input-empty.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/if-input-empty/if-input-empty.js                                       //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The IfInputEmptyComponent lets you display content when the input is empty.                               //\n *                                                                                                           //\n * @type {IfInputEmptyComponent}                                                                             //\n */                                                                                                          //\nEasySearch.IfInputEmptyComponent = function (_BaseComponent) {                                               // 6\n  (0, _inherits3['default'])(IfInputEmptyComponent, _BaseComponent);                                         //\n                                                                                                             //\n  function IfInputEmptyComponent() {                                                                         //\n    (0, _classCallCheck3['default'])(this, IfInputEmptyComponent);                                           //\n    return (0, _possibleConstructorReturn3['default'])(this, _BaseComponent.apply(this, arguments));         //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return true if the input is empty.                                                                      //\n   *                                                                                                         //\n   * @returns {boolean}                                                                                      //\n   */                                                                                                        //\n                                                                                                             //\n  IfInputEmptyComponent.prototype.inputEmpty = function () {                                                 //\n    function inputEmpty() {                                                                                  //\n      return !!this.eachIndex(function (index, name) {                                                       // 13\n        return index.getComponentMethods(name).searchIsEmpty();                                              // 14\n      }, 'every');                                                                                           //\n    }                                                                                                        //\n                                                                                                             //\n    return inputEmpty;                                                                                       //\n  }();                                                                                                       //\n                                                                                                             //\n  return IfInputEmptyComponent;                                                                              //\n}(BaseComponent);                                                                                            //\n                                                                                                             //\nEasySearch.IfInputEmptyComponent.register('EasySearch.IfInputEmpty');                                        // 19\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"if-no-results\":{\"template.if-no-results.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/if-no-results/template.if-no-results.js                                //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"EasySearch.IfNoResults\");                                                              // 2\nTemplate[\"EasySearch.IfNoResults\"] = new Template(\"Template.EasySearch.IfNoResults\", (function() {           // 3\n  var view = this;                                                                                           // 4\n  return Blaze.If(function() {                                                                               // 5\n    return Spacebars.call(view.lookup(\"noResults\"));                                                         // 6\n  }, function() {                                                                                            // 7\n    return [ \"\\n        \", Blaze._InOuterTemplateScope(view, function() {                                    // 8\n      return Spacebars.include(function() {                                                                  // 9\n        return Spacebars.call(view.templateContentBlock);                                                    // 10\n      });                                                                                                    // 11\n    }), \"\\n    \" ];                                                                                          // 12\n  }, function() {                                                                                            // 13\n    return [ \"\\n        \", Blaze.If(function() {                                                             // 14\n      return Spacebars.call(view.templateElseBlock);                                                         // 15\n    }, function() {                                                                                          // 16\n      return [ \"\\n            \", Blaze._InOuterTemplateScope(view, function() {                              // 17\n        return Spacebars.include(function() {                                                                // 18\n          return Spacebars.call(view.templateElseBlock);                                                     // 19\n        });                                                                                                  // 20\n      }), \"\\n        \" ];                                                                                    // 21\n    }), \"\\n    \" ];                                                                                          // 22\n  });                                                                                                        // 23\n}));                                                                                                         // 24\n                                                                                                             // 25\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"if-no-results.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/if-no-results/if-no-results.js                                         //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The IfNoResultsComponent lets you display content when there are no results.                              //\n *                                                                                                           //\n * @type {IfNoResultsComponent}                                                                              //\n */                                                                                                          //\nEasySearch.IfNoResultsComponent = function (_BaseComponent) {                                                // 6\n  (0, _inherits3['default'])(IfNoResultsComponent, _BaseComponent);                                          //\n                                                                                                             //\n  function IfNoResultsComponent() {                                                                          //\n    (0, _classCallCheck3['default'])(this, IfNoResultsComponent);                                            //\n    return (0, _possibleConstructorReturn3['default'])(this, _BaseComponent.apply(this, arguments));         //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return true if there are no results.                                                                    //\n   *                                                                                                         //\n   * @returns {boolean}                                                                                      //\n   */                                                                                                        //\n                                                                                                             //\n  IfNoResultsComponent.prototype.noResults = function () {                                                   //\n    function noResults() {                                                                                   //\n      return !!this.eachIndex(function (index, name) {                                                       // 13\n        return index.getComponentMethods(name).hasNoResults();                                               // 14\n      }, 'every');                                                                                           //\n    }                                                                                                        //\n                                                                                                             //\n    return noResults;                                                                                        //\n  }();                                                                                                       //\n                                                                                                             //\n  return IfNoResultsComponent;                                                                               //\n}(BaseComponent);                                                                                            //\n                                                                                                             //\nEasySearch.IfNoResultsComponent.register('EasySearch.IfNoResults');                                          // 19\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"if-searching\":{\"template.if-searching.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/if-searching/template.if-searching.js                                  //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"EasySearch.IfSearching\");                                                              // 2\nTemplate[\"EasySearch.IfSearching\"] = new Template(\"Template.EasySearch.IfSearching\", (function() {           // 3\n  var view = this;                                                                                           // 4\n  return Blaze.If(function() {                                                                               // 5\n    return Spacebars.call(view.lookup(\"searching\"));                                                         // 6\n  }, function() {                                                                                            // 7\n    return [ \"\\n        \", Blaze._InOuterTemplateScope(view, function() {                                    // 8\n      return Spacebars.include(function() {                                                                  // 9\n        return Spacebars.call(view.templateContentBlock);                                                    // 10\n      });                                                                                                    // 11\n    }), \"\\n    \" ];                                                                                          // 12\n  }, function() {                                                                                            // 13\n    return [ \"\\n        \", Blaze.If(function() {                                                             // 14\n      return Spacebars.call(view.templateElseBlock);                                                         // 15\n    }, function() {                                                                                          // 16\n      return [ \"\\n            \", Blaze._InOuterTemplateScope(view, function() {                              // 17\n        return Spacebars.include(function() {                                                                // 18\n          return Spacebars.call(view.templateElseBlock);                                                     // 19\n        });                                                                                                  // 20\n      }), \"\\n        \" ];                                                                                    // 21\n    }), \"\\n    \" ];                                                                                          // 22\n  });                                                                                                        // 23\n}));                                                                                                         // 24\n                                                                                                             // 25\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"if-searching.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/if-searching/if-searching.js                                           //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The IfSearchingComponent lets you display content when the component is being searched.                   //\n *                                                                                                           //\n * @type {IfSearchingComponent}                                                                              //\n */                                                                                                          //\nEasySearch.IfSearchingComponent = function (_BaseComponent) {                                                // 6\n  (0, _inherits3['default'])(IfSearchingComponent, _BaseComponent);                                          //\n                                                                                                             //\n  function IfSearchingComponent() {                                                                          //\n    (0, _classCallCheck3['default'])(this, IfSearchingComponent);                                            //\n    return (0, _possibleConstructorReturn3['default'])(this, _BaseComponent.apply(this, arguments));         //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return true if the component is being searched.                                                         //\n   *                                                                                                         //\n   * @returns {boolean}                                                                                      //\n   */                                                                                                        //\n                                                                                                             //\n  IfSearchingComponent.prototype.searching = function () {                                                   //\n    function searching() {                                                                                   //\n      return !!this.eachIndex(function (index, name) {                                                       // 13\n        return index.getComponentMethods(name).isSearching();                                                // 14\n      }, 'every');                                                                                           //\n    }                                                                                                        //\n                                                                                                             //\n    return searching;                                                                                        //\n  }();                                                                                                       //\n                                                                                                             //\n  return IfSearchingComponent;                                                                               //\n}(BaseComponent);                                                                                            //\n                                                                                                             //\nEasySearch.IfSearchingComponent.register('EasySearch.IfSearching');                                          // 19\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"load-more\":{\"template.load-more.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/load-more/template.load-more.js                                        //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"EasySearch.LoadMore\");                                                                 // 2\nTemplate[\"EasySearch.LoadMore\"] = new Template(\"Template.EasySearch.LoadMore\", (function() {                 // 3\n  var view = this;                                                                                           // 4\n  return Blaze.If(function() {                                                                               // 5\n    return Spacebars.call(view.lookup(\"moreDocuments\"));                                                     // 6\n  }, function() {                                                                                            // 7\n    return [ \"\\n        \", HTML.BUTTON(HTML.Attrs(function() {                                               // 8\n      return Spacebars.attrMustache(view.lookup(\"attributes\"));                                              // 9\n    }), Blaze.View(\"lookup:content\", function() {                                                            // 10\n      return Spacebars.mustache(view.lookup(\"content\"));                                                     // 11\n    })), \"\\n    \" ];                                                                                         // 12\n  });                                                                                                        // 13\n}));                                                                                                         // 14\n                                                                                                             // 15\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"load-more.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/createClass\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/load-more/load-more.js                                                 //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _createClass2 = require('babel-runtime/helpers/createClass');                                            //\n                                                                                                             //\nvar _createClass3 = _interopRequireDefault(_createClass2);                                                   //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The LoadMoreComponent lets you load more documents through a button.                                      //\n *                                                                                                           //\n * @type {LoadMoreComponent}                                                                                 //\n */                                                                                                          //\nEasySearch.LoadMoreComponent = function (_SingleIndexComponent) {                                            // 6\n  (0, _inherits3['default'])(LoadMoreComponent, _SingleIndexComponent);                                      //\n                                                                                                             //\n  function LoadMoreComponent() {                                                                             //\n    (0, _classCallCheck3['default'])(this, LoadMoreComponent);                                               //\n    return (0, _possibleConstructorReturn3['default'])(this, _SingleIndexComponent.apply(this, arguments));  //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Load more documents.                                                                                    //\n   */                                                                                                        //\n                                                                                                             //\n  LoadMoreComponent.prototype.loadMore = function () {                                                       //\n    function loadMore() {                                                                                    //\n      this.index.getComponentMethods(this.name).loadMore(this.options.count);                                // 11\n    }                                                                                                        //\n                                                                                                             //\n    return loadMore;                                                                                         //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Content of the component.                                                                               //\n   *                                                                                                         //\n   * @returns string                                                                                         //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  LoadMoreComponent.prototype.content = function () {                                                        // 6\n    function content() {                                                                                     //\n      return this.options.content;                                                                           // 23\n    }                                                                                                        //\n                                                                                                             //\n    return content;                                                                                          //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Attributes of the component.                                                                            //\n   *                                                                                                         //\n   * @returns string                                                                                         //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  LoadMoreComponent.prototype.attributes = function () {                                                     // 6\n    function attributes() {                                                                                  //\n      return this.getData().attributes || {};                                                                // 32\n    }                                                                                                        //\n                                                                                                             //\n    return attributes;                                                                                       //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return true if there are more documents to load.                                                        //\n   *                                                                                                         //\n   * @returns {Boolean}                                                                                      //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  LoadMoreComponent.prototype.moreDocuments = function () {                                                  // 6\n    function moreDocuments() {                                                                               //\n      return this.index.getComponentMethods(this.name).hasMoreDocuments();                                   // 41\n    }                                                                                                        //\n                                                                                                             //\n    return moreDocuments;                                                                                    //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Event map.                                                                                              //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  LoadMoreComponent.prototype.events = function () {                                                         // 6\n    function events() {                                                                                      //\n      return [{                                                                                              // 50\n        'click button': function () {                                                                        // 51\n          function clickButton() {                                                                           // 51\n            this.loadMore();                                                                                 // 52\n          }                                                                                                  //\n                                                                                                             //\n          return clickButton;                                                                                //\n        }()                                                                                                  //\n      }];                                                                                                    //\n    }                                                                                                        //\n                                                                                                             //\n    return events;                                                                                           //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the default options.                                                                             //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  (0, _createClass3['default'])(LoadMoreComponent, [{                                                        //\n    key: 'defaultOptions',                                                                                   //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return {                                                                                             // 63\n          content: 'Load more',                                                                              // 64\n          count: 10                                                                                          // 65\n        };                                                                                                   //\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }]);                                                                                                       //\n  return LoadMoreComponent;                                                                                  //\n}(SingleIndexComponent);                                                                                     //\n                                                                                                             //\nEasySearch.LoadMoreComponent.register('EasySearch.LoadMore');                                                // 70\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"pagination\":{\"template.pagination.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/pagination/template.pagination.js                                      //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nTemplate.__checkName(\"EasySearch.Pagination\");                                                               // 2\nTemplate[\"EasySearch.Pagination\"] = new Template(\"Template.EasySearch.Pagination\", (function() {             // 3\n  var view = this;                                                                                           // 4\n  return Blaze.If(function() {                                                                               // 5\n    return Spacebars.call(view.lookup(\"moreDocuments\"));                                                     // 6\n  }, function() {                                                                                            // 7\n    return [ \"\\n        \", Blaze.If(function() {                                                             // 8\n      return Spacebars.call(view.lookup(\"customRenderPagination\"));                                          // 9\n    }, function() {                                                                                          // 10\n      return [ \"\\n            \", Blaze._TemplateWith(function() {                                            // 11\n        return {                                                                                             // 12\n          template: Spacebars.call(view.lookup(\"customRenderPagination\"))                                    // 13\n        };                                                                                                   // 14\n      }, function() {                                                                                        // 15\n        return Spacebars.include(function() {                                                                // 16\n          return Spacebars.call(Template.__dynamic);                                                         // 17\n        });                                                                                                  // 18\n      }), \"\\n        \" ];                                                                                    // 19\n    }, function() {                                                                                          // 20\n      return [ \"\\n            \", HTML.UL({                                                                   // 21\n        \"class\": \"pagination\"                                                                                // 22\n      }, \"\\n                \", Blaze.Each(function() {                                                       // 23\n        return Spacebars.call(view.lookup(\"page\"));                                                          // 24\n      }, function() {                                                                                        // 25\n        return [ \"\\n                    \", HTML.LI({                                                         // 26\n          \"class\": function() {                                                                              // 27\n            return [ \"page \", Spacebars.mustache(view.lookup(\"pageClasses\"), view.lookup(\".\")) ];            // 28\n          }                                                                                                  // 29\n        }, \"\\n                        \", Blaze.View(\"lookup:content\", function() {                           // 30\n          return Spacebars.mustache(view.lookup(\"content\"));                                                 // 31\n        }), \"\\n                    \"), \"\\n                \" ];                                               // 32\n      }), \"\\n            \"), \"\\n        \" ];                                                                 // 33\n    }), \"\\n    \" ];                                                                                          // 34\n  });                                                                                                        // 35\n}));                                                                                                         // 36\n                                                                                                             // 37\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"pagination.js\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/createClass\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/easysearch_components/lib/pagination/pagination.js                                               //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                                      //\n                                                                                                             //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                             //\n                                                                                                             //\nvar _createClass2 = require('babel-runtime/helpers/createClass');                                            //\n                                                                                                             //\nvar _createClass3 = _interopRequireDefault(_createClass2);                                                   //\n                                                                                                             //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');                //\n                                                                                                             //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                       //\n                                                                                                             //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                                  //\n                                                                                                             //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                         //\n                                                                                                             //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }            //\n                                                                                                             //\n/**                                                                                                          //\n * The PaginationComponent lets you paginate through documents.                                              //\n *                                                                                                           //\n * @type {PaginationComponent}                                                                               //\n */                                                                                                          //\nEasySearch.PaginationComponent = function (_SingleIndexComponent) {                                          // 6\n  (0, _inherits3['default'])(PaginationComponent, _SingleIndexComponent);                                    //\n                                                                                                             //\n  function PaginationComponent() {                                                                           //\n    (0, _classCallCheck3['default'])(this, PaginationComponent);                                             //\n    return (0, _possibleConstructorReturn3['default'])(this, _SingleIndexComponent.apply(this, arguments));  //\n  }                                                                                                          //\n                                                                                                             //\n  /**                                                                                                        //\n   * Setup component on created.                                                                             //\n   */                                                                                                        //\n                                                                                                             //\n  PaginationComponent.prototype.onCreated = function () {                                                    //\n    function onCreated() {                                                                                   //\n      _SingleIndexComponent.prototype.onCreated.call(this);                                                  // 11\n      this.dict.set('currentPage', 1);                                                                       // 12\n    }                                                                                                        //\n                                                                                                             //\n    return onCreated;                                                                                        //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Get pages for displaying the pagination.                                                                //\n   *                                                                                                         //\n   * @returns {Array}                                                                                        //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  PaginationComponent.prototype.page = function () {                                                         // 6\n    function page() {                                                                                        //\n      var totalCount = this.dict.get('count'),                                                               // 21\n          pageCount = this.dict.get('limit'),                                                                //\n          currentPage = this.dict.get('currentPage'),                                                        //\n          maxPages = this.options.maxPages,                                                                  //\n          prevAndNext = this.options.prevAndNext;                                                            //\n                                                                                                             //\n      if (!pageCount || !totalCount) {                                                                       // 27\n        return [];                                                                                           // 28\n      }                                                                                                      //\n                                                                                                             //\n      return this.options.transformPages(EasySearch._getPagesForPagination({ totalCount: totalCount, pageCount: pageCount, currentPage: currentPage, maxPages: maxPages, prevAndNext: prevAndNext }));\n    }                                                                                                        //\n                                                                                                             //\n    return page;                                                                                             //\n  }();                                                                                                       //\n                                                                                                             //\n  PaginationComponent.prototype.customRenderPagination = function () {                                       // 6\n    function customRenderPagination() {                                                                      //\n      return this.getData().customRenderPagination;                                                          // 37\n    }                                                                                                        //\n                                                                                                             //\n    return customRenderPagination;                                                                           //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Paginate documents.                                                                                     //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  PaginationComponent.prototype.paginate = function () {                                                     // 6\n    function paginate(page) {                                                                                //\n      check(page, Number);                                                                                   // 44\n                                                                                                             //\n      this.index.getComponentMethods(this.name).paginate(page);                                              // 46\n    }                                                                                                        //\n                                                                                                             //\n    return paginate;                                                                                         //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return page classes.                                                                                    //\n   *                                                                                                         //\n   * @param {Object} data Data for the current page                                                          //\n   *                                                                                                         //\n   * @returns {String}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  PaginationComponent.prototype.pageClasses = function () {                                                  // 6\n    function pageClasses(data) {                                                                             //\n      return ((data.disabled ? 'disabled' : '') + ' ' + (data.current ? 'current' : '')).trim();             // 57\n    }                                                                                                        //\n                                                                                                             //\n    return pageClasses;                                                                                      //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return true if there are more documents to load.                                                        //\n   *                                                                                                         //\n   * @returns {Boolean}                                                                                      //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  PaginationComponent.prototype.moreDocuments = function () {                                                // 6\n    function moreDocuments() {                                                                               //\n      return this.index.getComponentMethods(this.name).hasMoreDocuments();                                   // 66\n    }                                                                                                        //\n                                                                                                             //\n    return moreDocuments;                                                                                    //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Event map.                                                                                              //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  PaginationComponent.prototype.events = function () {                                                       // 6\n    function events() {                                                                                      //\n      return [{                                                                                              // 75\n        'click .page:not(.disabled)': function () {                                                          // 76\n          function clickPageNotDisabled(e) {                                                                 // 76\n            var currentPage = this.currentData().page;                                                       // 77\n            this.dict.set('currentPage', currentPage);                                                       // 78\n            this.paginate(currentPage);                                                                      // 79\n                                                                                                             //\n            e.preventDefault();                                                                              // 81\n          }                                                                                                  //\n                                                                                                             //\n          return clickPageNotDisabled;                                                                       //\n        }()                                                                                                  //\n      }];                                                                                                    //\n    }                                                                                                        //\n                                                                                                             //\n    return events;                                                                                           //\n  }();                                                                                                       //\n                                                                                                             //\n  /**                                                                                                        //\n   * Return the default options.                                                                             //\n   *                                                                                                         //\n   * @returns {Object}                                                                                       //\n   */                                                                                                        //\n                                                                                                             //\n                                                                                                             //\n  (0, _createClass3['default'])(PaginationComponent, [{                                                      //\n    key: 'defaultOptions',                                                                                   //\n    get: function () {                                                                                       //\n      function get() {                                                                                       //\n        return {                                                                                             // 92\n          prevAndNext: true,                                                                                 // 93\n          maxPages: null,                                                                                    // 94\n          transformPages: function () {                                                                      // 95\n            function transformPages(pages) {                                                                 // 95\n              return pages;                                                                                  //\n            }                                                                                                //\n                                                                                                             //\n            return transformPages;                                                                           //\n          }()                                                                                                //\n        };                                                                                                   //\n      }                                                                                                      //\n                                                                                                             //\n      return get;                                                                                            //\n    }()                                                                                                      //\n  }]);                                                                                                       //\n  return PaginationComponent;                                                                                //\n}(SingleIndexComponent);                                                                                     //\n                                                                                                             //\nEasySearch.PaginationComponent.register('EasySearch.Pagination');                                            // 100\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}}}}},{\"extensions\":[\".js\",\".json\",\".html\"]});\nrequire(\"./node_modules/meteor/easysearch:components/lib/base.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/single-index.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/component-methods.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/core.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/input/template.input.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/input/input.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/field-input/template.field-input.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/field-input/field-input.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/each/template.each.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/each/each.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/if-input-empty/template.if-input-empty.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/if-input-empty/if-input-empty.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/if-no-results/template.if-no-results.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/if-no-results/if-no-results.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/if-searching/template.if-searching.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/if-searching/if-searching.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/load-more/template.load-more.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/load-more/load-more.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/pagination/template.pagination.js\");\nrequire(\"./node_modules/meteor/easysearch:components/lib/pagination/pagination.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['easysearch:components'] = {}, {\n  EasySearch: EasySearch\n});\n\n})();\n","servePath":"/packages/easysearch_components.js","sourceMap":{"version":3,"sources":["/packages/easysearch:components/lib/base.js","/packages/easysearch:components/lib/single-index.js","/packages/easysearch:components/lib/component-methods.js","/packages/easysearch:components/lib/core.js","/packages/easysearch_components/lib/input/template.input.js","/packages/easysearch:components/lib/input/input.js","/packages/easysearch_components/lib/field-input/template.field-input.js","/packages/easysearch:components/lib/field-input/field-input.js","/packages/easysearch_components/lib/each/template.each.js","/packages/easysearch:components/lib/each/each.js","/packages/easysearch_components/lib/if-input-empty/template.if-input-empty.js","/packages/easysearch:components/lib/if-input-empty/if-input-empty.js","/packages/easysearch_components/lib/if-no-results/template.if-no-results.js","/packages/easysearch:components/lib/if-no-results/if-no-results.js","/packages/easysearch_components/lib/if-searching/template.if-searching.js","/packages/easysearch:components/lib/if-searching/if-searching.js","/packages/easysearch_components/lib/load-more/template.load-more.js","/packages/easysearch:components/lib/load-more/load-more.js","/packages/easysearch_components/lib/pagination/template.pagination.js","/packages/easysearch:components/lib/pagination/pagination.js"],"names":[],"mappings":"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","file":"/packages/easysearch_components.js","sourcesContent":["/**\n * The BaseComponent holds the base logic for EasySearch Components.\n *\n * @type {BaseComponent}\n */\nBaseComponent = class BaseComponent extends BlazeComponent {\n  /**\n   * Return the name of the component.\n   *\n   * @returns {String}\n   */\n  get name() {\n    return this.getData().name;\n  }\n\n  /**\n   * Return an array of properties that are reserved to the base component.\n   *\n   * @returns {String[]}\n   */\n  static get reserveredProperties() {\n    return ['index', 'indexes', 'name', 'attributes'];\n  }\n\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    let index = this.getData().index,\n      indexes = [index];\n\n    if (!index) {\n      indexes = this.getData().indexes;\n    }\n\n    if (_.isEmpty(indexes)) {\n      throw new Meteor.Error('no-index', 'Please provide an index for your component');\n    }\n\n    if (indexes.filter((index) => index instanceof EasySearch.Index).length != indexes.length) {\n      throw new Meteor.Error(\n        'invalid-configuration',\n        `Did not receive an index or an array of indexes: \"${indexes.toString()}\"`\n      );\n    }\n\n    this.indexes = indexes;\n    this.options = _.defaults({}, _.omit(this.getData(), ...BaseComponent.reserveredProperties), this.defaultOptions);\n\n    check(this.name, Match.Optional(String));\n    check(this.options, Object);\n\n    this.eachIndex(function (index, name) {\n      if (!index.getComponentDict(name)) {\n        index.registerComponent(name);\n      }\n    });\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions () {\n    return {};\n  }\n\n  /**\n   * Search the component.\n   *\n   * @param {String} searchString String to search for\n   */\n  search(searchString) {\n    check(searchString, String);\n\n    const showDocuments = !this.getData().noDocumentsOnEmpty || 0 < searchString.length;\n\n    this.eachIndex(function (index, name) {\n      index.getComponentDict(name).set('showDocuments', showDocuments);\n\n      if (showDocuments) {\n        index.getComponentMethods(name).search(searchString);\n      }\n    });\n  }\n\n  /**\n   * Return the data.\n   *\n   * @returns {Object}\n   */\n  getData() {\n    return (this.data() || {});\n  }\n\n  /**\n   * Return the dictionaries.\n   *\n   * @returns {Object}\n   */\n  get dicts() {\n    return this.eachIndex((index, name) => {\n      return index.getComponentDict(name);\n    }, 'map');\n  }\n\n  /**\n   * Loop through each index and apply a function\n   *\n   * @param {Function} func   Function to run\n   * @param {String}   method Lodash method name\n   *\n   * @return mixed\n   */\n  eachIndex(func, method = 'each') {\n    let componentScope = this,\n      logic = this.getData().logic;\n\n    if (!_.isEmpty(logic)) {\n      method = 'OR' === logic ? 'some' : 'every';\n    }\n\n    return _[method](this.indexes, function (index) {\n      return func.apply(this, [index, componentScope.name]);\n    });\n  }\n};\n\nEasySearch.BaseComponent = BaseComponent;\n","/**\n * The SingleIndexComponent holds logic for components that only can use one index.\n *\n * @type {SingleIndexComponent}\n */\nSingleIndexComponent = class SingleIndexComponent extends BaseComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n\n    if (this.indexes.length > 1) {\n      throw new Meteor.Error('only-single-index', 'Can only specify one index');\n    }\n  }\n\n  /**\n   * Return the index\n   *\n   * @returns {Index}\n   */\n  get index() {\n    return _.first(this.indexes);\n  }\n\n  /**\n   * Return the dictionary.\n   *\n   * @returns {Object}\n   */\n  get dict() {\n    return _.first(this.dicts);\n  }\n};\n\nEasySearch.SingleIndexComponent = SingleIndexComponent;\n","EasySearch._getComponentMethods = function (dict, index) {\n  return {\n    /**\n     * Search a component for the given search string.\n     *\n     * @param {Object|String} searchDefinition Search definition\n     */\n    search: (searchDefinition) => {\n      dict.set('searchOptions', {\n        props: (dict.get('searchOptions') || {}).props\n      });\n\n      dict.set('searchDefinition', searchDefinition);\n      dict.set('stopPublication', true);\n    },\n    /**\n     * Return the EasySearch.Cursor for the current search.\n     *\n     * @returns {Cursor}\n     */\n    getCursor: () => {\n      const searchDefinition = dict.get('searchDefinition') || '',\n        options = dict.get('searchOptions'),\n        showDocuments = dict.get('showDocuments');\n\n      check(options, Match.Optional(Object));\n\n      if (false === showDocuments) {\n        dict.set('count', 0);\n        dict.set('searching', false);\n        dict.set('limit', 0);\n        dict.set('skip', 0);\n        dict.set('currentCount', 0);\n        dict.set('stopPublication', false);\n\n        return EasySearch.Cursor.emptyCursor;\n      }\n\n      const cursor = index.search(searchDefinition, options),\n        searchOptions = index._getSearchOptions(options);\n\n      dict.set('count', cursor.count());\n      dict.set('searching', !cursor.isReady());\n      dict.set('limit', searchOptions.limit);\n      dict.set('skip', searchOptions.skip);\n      dict.set('currentCount', cursor.mongoCursor.count());\n      dict.set('stopPublication', false);\n\n      return cursor;\n    },\n    /**\n     * Return true if the current search string is empty.\n     *\n     * @returns {boolean}\n     */\n    searchIsEmpty: () => {\n      let searchDefinition = dict.get('searchDefinition');\n\n      return !searchDefinition || (_.isString(searchDefinition) && 0 === searchDefinition.trim().length);\n    },\n    /**\n     * Return true if the component has no results.\n     *\n     * @returns {boolean}\n     */\n    hasNoResults: () => {\n      let count = dict.get('count'),\n        showDocuments = dict.get('showDocuments');\n\n      return false !== showDocuments\n        && !dict.get('searching')\n        && (!_.isNumber(count) || 0 === count);\n    },\n    /**\n     * Return true if the component is being searched.\n     *\n     * @returns {boolean}\n     */\n    isSearching: () => {\n      return !!dict.get('searching');\n    },\n    /**\n     * Return true if the component has more documents than displayed right now.\n     *\n     * @returns {boolean}\n     */\n    hasMoreDocuments: () => {\n      return dict.get('currentCount') < dict.get('count');\n    },\n    /**\n     * Load more documents for the component.\n     *\n     * @param {Number} count Count of docs\n     */\n    loadMore: (count) => {\n      check(count, Number);\n\n      let currentCount = dict.get('currentCount'),\n        options = dict.get('searchOptions') || {};\n\n      options.limit = currentCount + count;\n      dict.set('searchOptions', options);\n    },\n    /**\n     * Paginate through documents for the given page.\n     *\n     * @param {Number} page Page number\n     */\n    paginate: (page) => {\n      check(page, Number);\n\n      let options = dict.get('searchOptions') || {},\n        limit = dict.get('limit');\n\n      options.skip = limit * (page - 1);\n      dict.set('searchOptions', options);\n      dict.set('stopPublication', true);\n    },\n    /**\n     * Add custom properties for search.\n     */\n    addProps: (...args) => {\n      let options = dict.get('searchOptions') || {};\n\n      options.props = options.props || {};\n\n      if (_.isObject(args[0])) {\n        options.props = _.extend(options.props, args[0]);\n      } else if (_.isString(args[0])) {\n        options.props[args[0]] = args[1];\n      }\n\n      dict.set('searchOptions', options);\n    },\n    /**\n     * Remove custom properties for search.\n     */\n    removeProps: (...args) => {\n      let options = dict.get('searchOptions') || {};\n\n      if (!_.isEmpty(args)) {\n        options.props = _.omit(options.props, args) || {};\n      } else {\n        options.props = {};\n      }\n\n      dict.set('searchOptions', options);\n    }\n  };\n};\n","/**\n * Extend EasySearch.Index with component functionality.\n *\n * @type {Index}\n */\nEasySearch.Index = class Index extends EasySearch.Index {\n  /**\n   * Constructor.\n   */\n  constructor() {\n    super(...arguments);\n    this.components = {};\n  }\n\n  /**\n   * Return static default name for components.\n   *\n   * @returns {String}\n   */\n  static get COMPONENT_DEFAULT_NAME() {\n    return'__default';\n  }\n\n  /**\n   * Register a component on the index.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n  registerComponent(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    this.components[componentName] = new ReactiveDict(`easySearchComponent_${this.config.name}_${componentName}_${Random.id()}`);\n  }\n\n  /**\n   * Get the reactive dictionary for a component.\n   *\n   * @param {String} componentName Optional name of the component\n   */\n  getComponentDict(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    return this.components[componentName];\n  }\n\n  /**\n   * Get component methods that are useful for implementing search behaviour.\n   *\n   * @param componentName\n   */\n  getComponentMethods(componentName = EasySearch.Index.COMPONENT_DEFAULT_NAME) {\n    let dict = this.getComponentDict(componentName);\n\n    if (!dict) {\n      throw new Meteor.Error('no-component', `Component with name '${componentName}' not found`);\n    }\n\n    return EasySearch._getComponentMethods(dict, this);\n  }\n};\n\n/**\n * Return true if the current page is valid.\n *\n * @param {Number} totalPagesLength Count of all pages available\n * @param {Number} currentPage      Current page to check\n *\n * @returns {boolean}\n */\nfunction isValidPage(totalPagesLength, currentPage) {\n  return currentPage <= totalPagesLength && currentPage > 0;\n}\n\n/**\n * Helper method to get the pages for pagination as an array.\n *\n * @param totalCount   Total count of results\n * @param pageCount    Count of results per page\n * @param currentPage  Current page\n * @param prevAndNext  True if Next and Previous buttons should appear\n * @param maxPages     Maximum count of pages to show\n *\n * @private\n *\n * @returns {Array}\n */\nEasySearch._getPagesForPagination = function ({totalCount, pageCount, currentPage, prevAndNext, maxPages}) {\n  let pages = _.range(1, Math.ceil(totalCount / pageCount) + 1),\n    pagesLength = pages.length;\n\n  if (!isValidPage(pagesLength, currentPage)) {\n    throw new Meteor.Error('invalid-page', 'Current page is not in valid range');\n  }\n\n  if (maxPages) {\n    let startSlice = (currentPage > (maxPages / 2) ? (currentPage - 1) - Math.floor(maxPages / 2) : 0),\n      endSlice = startSlice + maxPages;\n\n    if (endSlice > pagesLength) {\n      pages = pages.slice(-maxPages);\n    } else {\n      pages = pages.slice(startSlice, startSlice + maxPages);\n    }\n  }\n\n  let pageData = _.map(pages, function (page) {\n    let isCurrentPage = page === currentPage;\n    return { page, content: page.toString(), current: isCurrentPage, disabled: isCurrentPage };\n  });\n\n  if (prevAndNext) {\n    // Previous\n    let prevPage = isValidPage(pagesLength, currentPage - 1) ? currentPage - 1 : null;\n    pageData.unshift({ page: prevPage, content: 'Prev', current: false, disabled: 1 === currentPage });\n    // Next\n    let nextPage = isValidPage(pagesLength, currentPage + 1) ? currentPage + 1 : null;\n    pageData.push(\n      { page: nextPage, content: 'Next', current: false, disabled: null == nextPage || pagesLength + 1 === currentPage }\n    );\n  }\n\n  return pageData;\n};\n","\nTemplate.__checkName(\"EasySearch.Input\");\nTemplate[\"EasySearch.Input\"] = new Template(\"Template.EasySearch.Input\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"inputAttributes\"));\n  }));\n}));\n","/**\n * The InputComponent lets you search through configured indexes.\n *\n * @type {InputComponent}\n */\nEasySearch.InputComponent = class InputComponent extends BaseComponent {\n  /**\n   * Setup input onCreated.\n   */\n  onCreated() {\n    super.onCreated(...arguments);\n\n    this.search(this.inputAttributes().value);\n\n    // create a reactive dependency to the cursor\n    this.debouncedSearch = _.debounce((searchString) => {\n      searchString = searchString.trim();\n\n      if (this.searchString !== searchString) {\n        this.searchString = searchString;\n\n        this.eachIndex((index, name) => {\n          index.getComponentDict(name).set('currentPage', 1);\n        });\n\n        this.search(searchString);\n      }\n\n    }, this.options.timeout);\n  }\n\n  /**\n   * Event map.\n   *\n   * @returns {Object}\n   */\n  events() {\n    return [{\n      'keyup input' : function (e) {\n        if ('enter' == this.getData().event && e.keyCode != 13) {\n          return;\n        }\n\n        this.debouncedSearch($(e.target).val());\n      }\n    }];\n  }\n\n  /**\n   * Return the attributes to set on the input (class, id).\n   *\n   * @returns {Object}\n   */\n  inputAttributes() {\n    return _.defaults({}, this.getData().attributes, InputComponent.defaultAttributes);\n  }\n\n  /**\n   * Return the default attributes.\n   *\n   * @returns {Object}\n   */\n  static get defaultAttributes() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions() {\n    return {\n      timeout: 50\n    };\n  }\n};\n\nEasySearch.InputComponent.register('EasySearch.Input');\n","\nTemplate.__checkName(\"EasySearch.FieldInput\");\nTemplate[\"EasySearch.FieldInput\"] = new Template(\"Template.EasySearch.FieldInput\", (function() {\n  var view = this;\n  return HTML.INPUT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"inputAttributes\"));\n  }));\n}));\n","/**\n * The FieldInputComponent lets you search through configured indexes for a specified fild.\n *\n * @type {FieldInputComponent}\n */\nEasySearch.FieldInputComponent = class FieldInputComponent extends EasySearch.InputComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n\n    if (_.isEmpty(this.getData().field)) {\n      throw new Meteor.Error('no-field', 'Please provide a field for your field input component');\n    }\n  }\n\n  /**\n   * Search the component.\n   *\n   * @param {String} searchString String to search for\n   */\n  search(searchString) {\n    check(searchString, String);\n\n    this.eachIndex((index, name) => {\n      let searchDefinition = index.getComponentDict(name).get('searchDefinition') || {};\n\n      if (_.isString(searchDefinition)) {\n        throw new Meteor.Error('You can either EasySearch.FieldInput or EasySearch.Input');\n      }\n\n      if (this.options.field) {\n        searchDefinition[this.options.field] = searchString;\n        index.getComponentMethods(name).search(searchDefinition);\n      }\n    });\n  }\n};\n\nEasySearch.FieldInputComponent.register('EasySearch.FieldInput');\n","\nTemplate.__checkName(\"EasySearch.Each\");\nTemplate[\"EasySearch.Each\"] = new Template(\"Template.EasySearch.Each\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"doc\"));\n  }, function() {\n    return [ \"\\n      \", Blaze._InOuterTemplateScope(view, function() {\n      return Blaze._TemplateWith(function() {\n        return Spacebars.call(view.lookup(\".\"));\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(view.templateContentBlock);\n        });\n      });\n    }), \"\\n    \" ];\n  });\n}));\n","/**\n * The EachComponent allows to loop through the search results found.\n *\n * @type {EachComponent}\n */\nEasySearch.EachComponent = class EachComponent extends SingleIndexComponent {\n  /**\n   * Return the mongo cursor for the search.\n   *\n   * @returns {Mongo.Cursor}\n   */\n  doc() {\n    const stopPublication = this.index\n      .getComponentDict(this.name)\n      .get('stopPublication')\n    ;\n\n    this.cursor && stopPublication && this.cursor.stop();\n\n    this.cursor = this.index\n        .getComponentMethods(this.name)\n        .getCursor()\n    ;\n\n    return this.cursor.mongoCursor;\n  }\n};\n\nEasySearch.EachComponent.register('EasySearch.Each');\n","\nTemplate.__checkName(\"EasySearch.IfInputEmpty\");\nTemplate[\"EasySearch.IfInputEmpty\"] = new Template(\"Template.EasySearch.IfInputEmpty\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"inputEmpty\"));\n  }, function() {\n    return [ \"\\n        \", Blaze._InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.templateElseBlock);\n    }, function() {\n      return [ \"\\n            \", Blaze._InOuterTemplateScope(view, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(view.templateElseBlock);\n        });\n      }), \"\\n        \" ];\n    }), \"\\n    \" ];\n  });\n}));\n","/**\n * The IfInputEmptyComponent lets you display content when the input is empty.\n *\n * @type {IfInputEmptyComponent}\n */\nEasySearch.IfInputEmptyComponent = class IfInputEmptyComponent extends BaseComponent {\n  /**\n   * Return true if the input is empty.\n   *\n   * @returns {boolean}\n   */\n  inputEmpty() {\n    return !!this.eachIndex(function (index, name) {\n      return index.getComponentMethods(name).searchIsEmpty();\n    }, 'every');\n  }\n};\n\nEasySearch.IfInputEmptyComponent.register('EasySearch.IfInputEmpty');\n","\nTemplate.__checkName(\"EasySearch.IfNoResults\");\nTemplate[\"EasySearch.IfNoResults\"] = new Template(\"Template.EasySearch.IfNoResults\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"noResults\"));\n  }, function() {\n    return [ \"\\n        \", Blaze._InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.templateElseBlock);\n    }, function() {\n      return [ \"\\n            \", Blaze._InOuterTemplateScope(view, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(view.templateElseBlock);\n        });\n      }), \"\\n        \" ];\n    }), \"\\n    \" ];\n  });\n}));\n","/**\n * The IfNoResultsComponent lets you display content when there are no results.\n *\n * @type {IfNoResultsComponent}\n */\nEasySearch.IfNoResultsComponent = class IfNoResultsComponent extends BaseComponent {\n  /**\n   * Return true if there are no results.\n   *\n   * @returns {boolean}\n   */\n  noResults() {\n    return !!this.eachIndex(function (index, name) {\n      return index.getComponentMethods(name).hasNoResults();\n    }, 'every');\n  }\n};\n\nEasySearch.IfNoResultsComponent.register('EasySearch.IfNoResults');\n","\nTemplate.__checkName(\"EasySearch.IfSearching\");\nTemplate[\"EasySearch.IfSearching\"] = new Template(\"Template.EasySearch.IfSearching\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"searching\"));\n  }, function() {\n    return [ \"\\n        \", Blaze._InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.templateElseBlock);\n    }, function() {\n      return [ \"\\n            \", Blaze._InOuterTemplateScope(view, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(view.templateElseBlock);\n        });\n      }), \"\\n        \" ];\n    }), \"\\n    \" ];\n  });\n}));\n","/**\n * The IfSearchingComponent lets you display content when the component is being searched.\n *\n * @type {IfSearchingComponent}\n */\nEasySearch.IfSearchingComponent = class IfSearchingComponent extends BaseComponent {\n  /**\n   * Return true if the component is being searched.\n   *\n   * @returns {boolean}\n   */\n  searching() {\n    return !!this.eachIndex(function (index, name) {\n      return index.getComponentMethods(name).isSearching();\n    }, 'every');\n  }\n};\n\nEasySearch.IfSearchingComponent.register('EasySearch.IfSearching');\n","\nTemplate.__checkName(\"EasySearch.LoadMore\");\nTemplate[\"EasySearch.LoadMore\"] = new Template(\"Template.EasySearch.LoadMore\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"moreDocuments\"));\n  }, function() {\n    return [ \"\\n        \", HTML.BUTTON(HTML.Attrs(function() {\n      return Spacebars.attrMustache(view.lookup(\"attributes\"));\n    }), Blaze.View(\"lookup:content\", function() {\n      return Spacebars.mustache(view.lookup(\"content\"));\n    })), \"\\n    \" ];\n  });\n}));\n","/**\n * The LoadMoreComponent lets you load more documents through a button.\n *\n * @type {LoadMoreComponent}\n */\nEasySearch.LoadMoreComponent = class LoadMoreComponent extends SingleIndexComponent {\n  /**\n   * Load more documents.\n   */\n  loadMore() {\n    this.index\n      .getComponentMethods(this.name)\n      .loadMore(this.options.count)\n    ;\n  }\n\n  /**\n   * Content of the component.\n   *\n   * @returns string\n   */\n  content() {\n    return this.options.content;\n  }\n\n  /**\n   * Attributes of the component.\n   *\n   * @returns string\n   */\n  attributes() {\n    return this.getData().attributes || {};\n  }\n\n  /**\n   * Return true if there are more documents to load.\n   *\n   * @returns {Boolean}\n   */\n  moreDocuments() {\n    return this.index.getComponentMethods(this.name).hasMoreDocuments();\n  }\n\n  /**\n   * Event map.\n   *\n   * @returns {Object}\n   */\n  events() {\n    return [{\n      'click button' : function () {\n        this.loadMore();\n      }\n    }];\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions() {\n    return {\n      content: 'Load more',\n      count: 10\n    };\n  }\n};\n\nEasySearch.LoadMoreComponent.register('EasySearch.LoadMore');\n","\nTemplate.__checkName(\"EasySearch.Pagination\");\nTemplate[\"EasySearch.Pagination\"] = new Template(\"Template.EasySearch.Pagination\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"moreDocuments\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"customRenderPagination\"));\n    }, function() {\n      return [ \"\\n            \", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"customRenderPagination\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n        \" ];\n    }, function() {\n      return [ \"\\n            \", HTML.UL({\n        \"class\": \"pagination\"\n      }, \"\\n                \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"page\"));\n      }, function() {\n        return [ \"\\n                    \", HTML.LI({\n          \"class\": function() {\n            return [ \"page \", Spacebars.mustache(view.lookup(\"pageClasses\"), view.lookup(\".\")) ];\n          }\n        }, \"\\n                        \", Blaze.View(\"lookup:content\", function() {\n          return Spacebars.mustache(view.lookup(\"content\"));\n        }), \"\\n                    \"), \"\\n                \" ];\n      }), \"\\n            \"), \"\\n        \" ];\n    }), \"\\n    \" ];\n  });\n}));\n","/**\n * The PaginationComponent lets you paginate through documents.\n *\n * @type {PaginationComponent}\n */\nEasySearch.PaginationComponent = class PaginationComponent extends SingleIndexComponent {\n  /**\n   * Setup component on created.\n   */\n  onCreated() {\n    super.onCreated();\n    this.dict.set('currentPage', 1);\n  }\n\n  /**\n   * Get pages for displaying the pagination.\n   *\n   * @returns {Array}\n   */\n  page() {\n    let totalCount = this.dict.get('count'),\n      pageCount = this.dict.get('limit'),\n      currentPage = this.dict.get('currentPage'),\n      maxPages = this.options.maxPages,\n      prevAndNext = this.options.prevAndNext;\n\n    if (!pageCount || !totalCount) {\n      return [];\n    }\n\n    return this.options.transformPages(\n      EasySearch._getPagesForPagination({ totalCount, pageCount, currentPage, maxPages, prevAndNext })\n    );\n  }\n\n  customRenderPagination() {\n    return this.getData().customRenderPagination;\n  }\n\n  /**\n   * Paginate documents.\n   */\n  paginate(page) {\n    check(page, Number);\n\n    this.index.getComponentMethods(this.name).paginate(page);\n  }\n\n  /**\n   * Return page classes.\n   *\n   * @param {Object} data Data for the current page\n   *\n   * @returns {String}\n   */\n  pageClasses(data) {\n    return `${(data.disabled ? 'disabled' : '' )} ${(data.current ? 'current' : '' )}`.trim();\n  }\n\n  /**\n   * Return true if there are more documents to load.\n   *\n   * @returns {Boolean}\n   */\n  moreDocuments() {\n    return this.index.getComponentMethods(this.name).hasMoreDocuments();\n  }\n\n  /**\n   * Event map.\n   *\n   * @returns {Object}\n   */\n  events() {\n    return [{\n      'click .page:not(.disabled)' : function (e) {\n        let currentPage = this.currentData().page;\n        this.dict.set('currentPage', currentPage);\n        this.paginate(currentPage);\n\n        e.preventDefault();\n      }\n    }];\n  }\n\n  /**\n   * Return the default options.\n   *\n   * @returns {Object}\n   */\n  get defaultOptions() {\n    return {\n      prevAndNext: true,\n      maxPages: null,\n      transformPages: (pages) => pages\n    };\n  }\n};\n\nEasySearch.PaginationComponent.register('EasySearch.Pagination');\n"]}}]