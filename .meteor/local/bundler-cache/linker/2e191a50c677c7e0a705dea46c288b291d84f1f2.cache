[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Session = Package.session.Session;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar _ = Package.underscore._;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar Helpers;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/raix_handlebar-helpers/common.js                                                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Helper scope                                                                                                      // 1\nif (typeof Helpers === 'undefined') {                                                                                // 2\n  Helpers = {};                                                                                                      // 3\n}                                                                                                                    // 4\n                                                                                                                     // 5\nvar languageText = {};                                                                                               // 6\n                                                                                                                     // 7\n// expects an array: languageText['say.hello.to.me']['en'] = 'Say hello to me:)';                                    // 8\n// ex.:                                                                                                              // 9\n// getText('Say.Hello.To.Me') == 'say hello to me:)'; // lowercase                                                   // 10\n// getText('SAY.HELLO.TO.ME') == 'SAY HELLO TO ME:)'; // uppercase                                                   // 11\n// getText('Say.hello.to.me') == 'Say hello to me:)'; // uppercase first letter, rest lowercase                      // 12\n// getText('Say.Hello.To.Me') == 'Say Hello To Me:)'; // camelCase                                                   // 13\n// getText('SAy.hello.to.me') == 'Say hello To me:)'; // ignore case sensitivity                                     // 14\n                                                                                                                     // 15\nvar _languageDeps = (Meteor.isClient) ? new Deps.Dependency() : null;                                                // 16\nvar currentLanguage = 'en';                                                                                          // 17\n                                                                                                                     // 18\n// language = 'en'                                                                                                   // 19\nHelpers.setLanguage = function (language) {                                                                          // 20\n  if (language && language !== currentLanguage) {                                                                    // 21\n    currentLanguage = language;                                                                                      // 22\n    if (Meteor.isClient) _languageDeps.changed();                                                                    // 23\n  }                                                                                                                  // 24\n};                                                                                                                   // 25\n                                                                                                                     // 26\nHelpers.language = function () {                                                                                     // 27\n  if (Meteor.isClient) _languageDeps.depend();                                                                       // 28\n  return currentLanguage;                                                                                            // 29\n};                                                                                                                   // 30\n                                                                                                                     // 31\nHelpers.setDictionary = function(dict) {                                                                             // 32\n  languageText = dict;                                                                                               // 33\n};                                                                                                                   // 34\n                                                                                                                     // 35\nHelpers.addDictionary = function(dict) {                                                                             // 36\n  _.extend(languageText, dict);                                                                                      // 37\n};                                                                                                                   // 38\n                                                                                                                     // 39\n// handleCase will mimic text Case making src same case as text                                                      // 40\nvar handleCase = function (text, src) {                                                                              // 41\n  // Return lowercase                                                                                                // 42\n  if (text == text.toLowerCase())                                                                                    // 43\n    return src.toLowerCase();                                                                                        // 44\n  // Return uppercase                                                                                                // 45\n  if (text == text.toUpperCase())                                                                                    // 46\n    return src.toUpperCase();                                                                                        // 47\n  // Return uppercase first letter, rest lowercase                                                                   // 48\n  if (text.substr(1) == text.substr(1).toLowerCase())                                                                // 49\n    return src.substr(0, 1).toUpperCase() + src.substr(1).toLowerCase();                                             // 50\n  // Return src withour changes                                                                                      // 51\n  if (text.substr(0, 2) == text.substr(0, 2).toUpperCase())                                                          // 52\n    return src;                                                                                                      // 53\n  // Return CamelCase                                                                                                // 54\n  return src.replace(/( [a-z])/g, function ($1) {                                                                    // 55\n    return $1.toUpperCase();                                                                                         // 56\n  });                                                                                                                // 57\n};                                                                                                                   // 58\n                                                                                                                     // 59\n/**                                                                                                                  // 60\n *                                                                                                                   // 61\n * @param {string} text                                                                                              // 62\n * @param {string} [lang]                                                                                            // 63\n * @return {string}                                                                                                  // 64\n */                                                                                                                  // 65\nHelpers.getText = function (text, lang) {                                                                            // 66\n  var txt = text.toLowerCase();                                                                                      // 67\n  var langText = languageText && languageText[txt];                                                                  // 68\n  var langKey = (typeof lang === 'string') ? lang : Helpers.language();                                              // 69\n  return handleCase(text, (langText) ? ( (langText[langKey]) ? langText[langKey] : langText.en) : '[' + text + ']');\n};                                                                                                                   // 71\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/raix_handlebar-helpers/helpers.operators.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Forward compability                                                                                               // 1\nif (typeof UI === 'undefined' || typeof UI.registerHelper !== 'function') {                                          // 2\n  UI = {                                                                                                             // 3\n    registerHelper: function(name, f) {                                                                              // 4\n      if (typeof Handlebars !== 'undefined') {                                                                       // 5\n        return Handlebars.registerHelper(name, f);                                                                   // 6\n      } else {                                                                                                       // 7\n        throw new Error('No UI or Handlebars found');                                                                // 8\n      }                                                                                                              // 9\n    }                                                                                                                // 10\n  };                                                                                                                 // 11\n}                                                                                                                    // 12\n                                                                                                                     // 13\nif (typeof UI !== 'undefined') {                                                                                     // 14\n    UI.registerHelper('getLength', function (a) {                                                                    // 15\n      return a && a.length;                                                                                          // 16\n    });                                                                                                              // 17\n                                                                                                                     // 18\n    UI.registerHelper('isSelected', function (a, b) {                                                                // 19\n      return (a === b) ? { selected: 'selected' } : null;                                                            // 20\n    });                                                                                                              // 21\n                                                                                                                     // 22\n    UI.registerHelper('isChecked', function (a, b) {                                                                 // 23\n      return (a === b) ? { checked: 'checked' } : null;                                                              // 24\n    });                                                                                                              // 25\n                                                                                                                     // 26\n    UI.registerHelper('cutString', function (str, len) {                                                             // 27\n      return (str.length > len)?str.substr(0, Math.max(len-3, 0))+'...':str;                                         // 28\n    });                                                                                                              // 29\n                                                                                                                     // 30\n    UI.registerHelper('$eq', function (a, b) {                                                                       // 31\n      return (a === b); //Only text, numbers, boolean - not array & objects                                          // 32\n    });                                                                                                              // 33\n                                                                                                                     // 34\n    UI.registerHelper('$neq', function (a, b) {                                                                      // 35\n      return (a !== b); //Only text, numbers, boolean - not array & objects                                          // 36\n    });                                                                                                              // 37\n                                                                                                                     // 38\n    UI.registerHelper('$in', function (a, b, c, d) {                                                                 // 39\n      return ( a === b || a === c || a === d);                                                                       // 40\n    });                                                                                                              // 41\n                                                                                                                     // 42\n    UI.registerHelper('$nin', function (a, b, c, d) {                                                                // 43\n      return ( a !== b && a !== c && a !== d);                                                                       // 44\n    });                                                                                                              // 45\n                                                                                                                     // 46\n    UI.registerHelper('$exists', function (a) {                                                                      // 47\n      return ( a !== undefined);                                                                                     // 48\n    });                                                                                                              // 49\n                                                                                                                     // 50\n    UI.registerHelper('$lt', function (a, b) {                                                                       // 51\n      return (a < b);                                                                                                // 52\n    });                                                                                                              // 53\n                                                                                                                     // 54\n    UI.registerHelper('$gt', function (a, b) {                                                                       // 55\n      return (a > b);                                                                                                // 56\n    });                                                                                                              // 57\n                                                                                                                     // 58\n    UI.registerHelper('$lte', function (a, b) {                                                                      // 59\n      return (a <= b);                                                                                               // 60\n    });                                                                                                              // 61\n                                                                                                                     // 62\n    UI.registerHelper('$gte', function (a, b) {                                                                      // 63\n      return (a >= b);                                                                                               // 64\n    });                                                                                                              // 65\n                                                                                                                     // 66\n                                                                                                                     // 67\n    UI.registerHelper('$and', function (a, b) {                                                                      // 68\n      return (a && b);                                                                                               // 69\n    });                                                                                                              // 70\n                                                                                                                     // 71\n    UI.registerHelper('$or', function (a, b) {                                                                       // 72\n      return (a || b);                                                                                               // 73\n    });                                                                                                              // 74\n                                                                                                                     // 75\n    UI.registerHelper('$not', function (a) {                                                                         // 76\n      return (!a);                                                                                                   // 77\n    });                                                                                                              // 78\n                                                                                                                     // 79\n    UI.registerHelper('nl2br', function (text) {                                                                     // 80\n        var nl2br = (text + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + '<br>' + '$2');                      // 81\n        return new Spacebars.SafeString(nl2br);                                                                      // 82\n    });                                                                                                              // 83\n                                                                                                                     // 84\n    UI.registerHelper('getText', function (text, lang) { // Deprecating                                              // 85\n      var langKey = lang || null;                                                                                    // 86\n      return Helpers.getText(text, langKey);                                                                         // 87\n    });                                                                                                              // 88\n                                                                                                                     // 89\n  UI.registerHelper(\"$mapped\", function(arr) {                                                                       // 90\n    if(!Array.isArray(arr)){                                                                                         // 91\n      try {                                                                                                          // 92\n        arr = arr.fetch()                                                                                            // 93\n      }                                                                                                              // 94\n      catch (e){                                                                                                     // 95\n        console.log(\"Error in $mapped: perhaps you aren't sending in a collection or array.\")                        // 96\n        return [];                                                                                                   // 97\n      }                                                                                                              // 98\n    }                                                                                                                // 99\n                                                                                                                     // 100\n    var $length = arr.length;                                                                                        // 101\n                                                                                                                     // 102\n    var mappedArray = arr.map(function(item,index) {                                                                 // 103\n      item.$length = $length;                                                                                        // 104\n      item.$index = index;                                                                                           // 105\n      item.$first = index === 0;                                                                                     // 106\n      item.$last  = index === $length-1;                                                                             // 107\n      return item;                                                                                                   // 108\n    });                                                                                                              // 109\n                                                                                                                     // 110\n    return mappedArray || [];                                                                                        // 111\n  });                                                                                                                // 112\n                                                                                                                     // 113\n    // UI.registerHelper('userRole', function ( /* arguments */) {                                                   // 114\n    //   var role = Session.get('currentRole');                                                                      // 115\n    //   return _.any(arguments, function(value) { return (value == role); });                                       // 116\n    // });                                                                                                           // 117\n                                                                                                                     // 118\n    /*                                                                                                               // 119\n        Then $uper helper - Credit goes to @belisarius222 aka Ted Blackman for sparking an idear for a solution      // 120\n    */                                                                                                               // 121\n    Helpers.superScope = {};                                                                                         // 122\n                                                                                                                     // 123\n    Helpers.addScope = function(name, obj) {                                                                         // 124\n      // TODO: Get rid of underscore                                                                                 // 125\n      Helpers.superScope[name] = _.bind(function() { return this; }, obj);                                           // 126\n    };                                                                                                               // 127\n                                                                                                                     // 128\n    Helpers.removeScope = function(name) {                                                                           // 129\n      delete UI._globalHelpers[name];                                                                                // 130\n      delete Helpers.superScope[name];                                                                               // 131\n    };                                                                                                               // 132\n                                                                                                                     // 133\n    Helpers.addScope('Session', Session);                                                                            // 134\n    Helpers.addScope('Meteor', Meteor);                                                                              // 135\n                                                                                                                     // 136\n    UI.registerHelper('$', function() {                                                                              // 137\n      return Helpers.superScope;                                                                                     // 138\n    });                                                                                                              // 139\n}                                                                                                                    // 140\n                                                                                                                     // 141\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['raix:handlebar-helpers'] = {}, {\n  Helpers: Helpers\n});\n\n})();\n","servePath":"/packages/raix_handlebar-helpers.js","sourceMap":{"version":3,"sources":["/packages/raix_handlebar-helpers/common.js","/packages/raix_handlebar-helpers/helpers.operators.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0H;;;;;;;;;;;;;;;;;;ACtfile":"/packages/raix_handlebar-helpers.js","sourcesContent":["// Helper scope\nif (typeof Helpers === 'undefined') {\n  Helpers = {};\n}\n\nvar languageText = {};\n\n// expects an array: languageText['say.hello.to.me']['en'] = 'Say hello to me:)';\n// ex.:\n// getText('Say.Hello.To.Me') == 'say hello to me:)'; // lowercase\n// getText('SAY.HELLO.TO.ME') == 'SAY HELLO TO ME:)'; // uppercase\n// getText('Say.hello.to.me') == 'Say hello to me:)'; // uppercase first letter, rest lowercase\n// getText('Say.Hello.To.Me') == 'Say Hello To Me:)'; // camelCase\n// getText('SAy.hello.to.me') == 'Say hello To me:)'; // ignore case sensitivity\n\nvar _languageDeps = (Meteor.isClient) ? new Deps.Dependency() : null;\nvar currentLanguage = 'en';\n\n// language = 'en'\nHelpers.setLanguage = function (language) {\n  if (language && language !== currentLanguage) {\n    currentLanguage = language;\n    if (Meteor.isClient) _languageDeps.changed();\n  }\n};\n\nHelpers.language = function () {\n  if (Meteor.isClient) _languageDeps.depend();\n  return currentLanguage;\n};\n\nHelpers.setDictionary = function(dict) {\n  languageText = dict;\n};\n\nHelpers.addDictionary = function(dict) {\n  _.extend(languageText, dict);\n};\n\n// handleCase will mimic text Case making src same case as text\nvar handleCase = function (text, src) {\n  // Return lowercase\n  if (text == text.toLowerCase())\n    return src.toLowerCase();\n  // Return uppercase\n  if (text == text.toUpperCase())\n    return src.toUpperCase();\n  // Return uppercase first letter, rest lowercase\n  if (text.substr(1) == text.substr(1).toLowerCase())\n    return src.substr(0, 1).toUpperCase() + src.substr(1).toLowerCase();\n  // Return src withour changes\n  if (text.substr(0, 2) == text.substr(0, 2).toUpperCase())\n    return src;\n  // Return CamelCase\n  return src.replace(/( [a-z])/g, function ($1) {\n    return $1.toUpperCase();\n  });\n};\n\n/**\n *\n * @param {string} text\n * @param {string} [lang]\n * @return {string}\n */\nHelpers.getText = function (text, lang) {\n  var txt = text.toLowerCase();\n  var langText = languageText && languageText[txt];\n  var langKey = (typeof lang === 'string') ? lang : Helpers.language();\n  return handleCase(text, (langText) ? ( (langText[langKey]) ? langText[langKey] : langText.en) : '[' + text + ']');\n};","// Forward compability\nif (typeof UI === 'undefined' || typeof UI.registerHelper !== 'function') {\n  UI = {\n    registerHelper: function(name, f) {\n      if (typeof Handlebars !== 'undefined') {\n        return Handlebars.registerHelper(name, f);\n      } else {\n        throw new Error('No UI or Handlebars found');\n      }\n    }\n  };\n}\n\nif (typeof UI !== 'undefined') {\n    UI.registerHelper('getLength', function (a) {\n      return a && a.length;\n    });\n\n    UI.registerHelper('isSelected', function (a, b) {\n      return (a === b) ? { selected: 'selected' } : null;\n    });\n\n    UI.registerHelper('isChecked', function (a, b) {\n      return (a === b) ? { checked: 'checked' } : null;\n    });\n\n    UI.registerHelper('cutString', function (str, len) {\n      return (str.length > len)?str.substr(0, Math.max(len-3, 0))+'...':str;\n    });\n\n    UI.registerHelper('$eq', function (a, b) {\n      return (a === b); //Only text, numbers, boolean - not array & objects\n    });\n\n    UI.registerHelper('$neq', function (a, b) {\n      return (a !== b); //Only text, numbers, boolean - not array & objects\n    });\n\n    UI.registerHelper('$in', function (a, b, c, d) {\n      return ( a === b || a === c || a === d);\n    });\n\n    UI.registerHelper('$nin', function (a, b, c, d) {\n      return ( a !== b && a !== c && a !== d);\n    });\n\n    UI.registerHelper('$exists', function (a) {\n      return ( a !== undefined);\n    });\n\n    UI.registerHelper('$lt', function (a, b) {\n      return (a < b);\n    });\n\n    UI.registerHelper('$gt', function (a, b) {\n      return (a > b);\n    });\n\n    UI.registerHelper('$lte', function (a, b) {\n      return (a <= b);\n    });\n\n    UI.registerHelper('$gte', function (a, b) {\n      return (a >= b);\n    });\n\n\n    UI.registerHelper('$and', function (a, b) {\n      return (a && b);\n    });\n\n    UI.registerHelper('$or', function (a, b) {\n      return (a || b);\n    });\n\n    UI.registerHelper('$not', function (a) {\n      return (!a);\n    });\n\n    UI.registerHelper('nl2br', function (text) {\n        var nl2br = (text + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + '<br>' + '$2');\n        return new Spacebars.SafeString(nl2br);\n    });\n\n    UI.registerHelper('getText', function (text, lang) { // Deprecating\n      var langKey = lang || null;\n      return Helpers.getText(text, langKey);\n    });\n    \n  UI.registerHelper(\"$mapped\", function(arr) {\n    if(!Array.isArray(arr)){\n      try {\n        arr = arr.fetch()\n      }\n      catch (e){\n        console.log(\"Error in $mapped: perhaps you aren't sending in a collection or array.\")\n        return [];\n      }\n    }\n    \n    var $length = arr.length;\n    \n    var mappedArray = arr.map(function(item,index) {\n      item.$length = $length;\n      item.$index = index;\n      item.$first = index === 0;\n      item.$last  = index === $length-1;\n      return item;\n    });\n    \n    return mappedArray || [];\n  });\n  \n    // UI.registerHelper('userRole', function ( /* arguments */) {\n    //   var role = Session.get('currentRole');\n    //   return _.any(arguments, function(value) { return (value == role); });\n    // });\n\n    /*\n        Then $uper helper - Credit goes to @belisarius222 aka Ted Blackman for sparking an idear for a solution\n    */\n    Helpers.superScope = {};\n\n    Helpers.addScope = function(name, obj) {\n      // TODO: Get rid of underscore\n      Helpers.superScope[name] = _.bind(function() { return this; }, obj);\n    };\n\n    Helpers.removeScope = function(name) {\n      delete UI._globalHelpers[name];\n      delete Helpers.superScope[name];\n    };\n    \n    Helpers.addScope('Session', Session);\n    Helpers.addScope('Meteor', Meteor);\n\n    UI.registerHelper('$', function() {\n      return Helpers.superScope;\n    });\n}\n"]}}]