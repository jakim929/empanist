[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar EasySearch = Package['easysearch:core'].EasySearch;\nvar lodash = Package['erasaur:meteor-lodash'].lodash;\nvar _ = Package['erasaur:meteor-lodash']._;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"easysearch:autosuggest\":{\"lib\":{\"template.autosuggest.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/easysearch_autosuggest/lib/template.autosuggest.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"EasySearch.Autosuggest\");                                                                        // 2\nTemplate[\"EasySearch.Autosuggest\"] = new Template(\"Template.EasySearch.Autosuggest\", (function() {                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.SELECT(HTML.Attrs(function() {                                                                           // 5\n    return Spacebars.attrMustache(view.lookup(\"attributes\"));                                                          // 6\n  }));                                                                                                                 // 7\n}));                                                                                                                   // 8\n                                                                                                                       // 9\nTemplate.__checkName(\"EasySarch.Autogguest.DefaultRenderSuggestion\");                                                  // 10\nTemplate[\"EasySarch.Autogguest.DefaultRenderSuggestion\"] = new Template(\"Template.EasySarch.Autogguest.DefaultRenderSuggestion\", (function() {\n  var view = this;                                                                                                     // 12\n  return HTML.DIV(\"\\n    \", HTML.SPAN({                                                                                // 13\n    \"class\": \"autosuggest-title\"                                                                                       // 14\n  }, HTML.SPAN({                                                                                                       // 15\n    \"class\": \"name\"                                                                                                    // 16\n  }, Blaze.View(\"lookup:label\", function() {                                                                           // 17\n    return Spacebars.mustache(view.lookup(\"label\"));                                                                   // 18\n  }))), \"\\n  \");                                                                                                       // 19\n}));                                                                                                                   // 20\n                                                                                                                       // 21\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"autosuggest.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/easysearch_autosuggest/lib/autosuggest.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate['EasySearch.Autosuggest'].onRendered(function () {                                                            // 1\n  var _this = this;                                                                                                    // 1\n                                                                                                                       //\n  /**                                                                                                                  //\n   * Helper function to return data for the autosuggest component.                                                     //\n   *                                                                                                                   //\n   * @param {String} val        Value to return                                                                        //\n   * @param {*}      defaultVal Optional default value to provide                                                      //\n   *                                                                                                                   //\n   * @return {*}                                                                                                       //\n   */                                                                                                                  //\n  var getDataValue = function getDataValue(val, defaultVal) {                                                          // 10\n    return _this.data[val] || defaultVal;                                                                              // 10\n  };                                                                                                                   // 10\n                                                                                                                       //\n  if (!this.data.index) {                                                                                              // 12\n    throw new Meteor.Error('no-index', 'Please provide an index for your component');                                  // 13\n  }                                                                                                                    // 14\n                                                                                                                       //\n  if (this.data.indexes) {                                                                                             // 16\n    throw new Meteor.Error('only-single-index', 'Can only specify one index');                                         // 17\n  }                                                                                                                    // 18\n                                                                                                                       //\n  var handle = void 0,                                                                                                 // 20\n      computation = void 0,                                                                                            // 20\n      index = this.data.index,                                                                                         // 20\n      valueField = getDataValue('valueField', '_id'),                                                                  // 20\n      labelField = getDataValue('labelField', index.config.fields[0]),                                                 // 20\n      searchField = getDataValue('searchField', labelField),                                                           // 20\n      changeConfiguration = getDataValue('changeConfiguration', function (c) {                                         // 20\n    return c;                                                                                                          // 25\n  }),                                                                                                                  // 25\n      suggestionTemplate = Template[getDataValue('renderSuggestion', 'EasySarch.Autogguest.DefaultRenderSuggestion')];\n                                                                                                                       //\n  var select = this.$('select').selectize(changeConfiguration({                                                        // 30\n    valueField: valueField,                                                                                            // 31\n    labelField: labelField,                                                                                            // 32\n    searchField: searchField,                                                                                          // 33\n    create: false,                                                                                                     // 34\n    preload: true,                                                                                                     // 35\n    render: {                                                                                                          // 36\n      option: function () {                                                                                            // 37\n        function option(item, escape) {                                                                                // 37\n          return Blaze.toHTMLWithData(suggestionTemplate, {                                                            // 37\n            doc: item,                                                                                                 // 38\n            _id: item._id,                                                                                             // 39\n            label: _.get(item, labelField)                                                                             // 40\n          });                                                                                                          // 37\n        }                                                                                                              // 37\n                                                                                                                       //\n        return option;                                                                                                 // 37\n      }()                                                                                                              // 37\n    },                                                                                                                 // 36\n    load: function () {                                                                                                // 43\n      function load(query, callback) {                                                                                 // 43\n        if (computation) {                                                                                             // 44\n          computation.stop();                                                                                          // 45\n        }                                                                                                              // 46\n                                                                                                                       //\n        computation = Tracker.autorun(function () {                                                                    // 48\n          var cursor = index.search(query),                                                                            // 49\n              docs = cursor.fetch();                                                                                   // 49\n                                                                                                                       //\n          if (handle) {                                                                                                // 52\n            clearTimeout(handle);                                                                                      // 53\n          }                                                                                                            // 54\n                                                                                                                       //\n          handle = setTimeout(function () {                                                                            // 56\n            select[0].selectize.clearOptions();                                                                        // 57\n            callback(docs);                                                                                            // 58\n          }, 100);                                                                                                     // 59\n        });                                                                                                            // 60\n      }                                                                                                                // 61\n                                                                                                                       //\n      return load;                                                                                                     // 43\n    }()                                                                                                                // 43\n  }));                                                                                                                 // 30\n});                                                                                                                    // 63\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\"extensions\":[\".js\",\".json\",\".html\"]});\nrequire(\"./node_modules/meteor/easysearch:autosuggest/lib/template.autosuggest.js\");\nrequire(\"./node_modules/meteor/easysearch:autosuggest/lib/autosuggest.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['easysearch:autosuggest'] = {};\n\n})();\n","servePath":"/packages/easysearch_autosuggest.js","sourceMap":{"version":3,"sources":["/packages/easysearch_autosuggest/lib/template.autosuggest.js","/packages/easysearch:autosuggest/lib/autosuggest.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;ACpBA,SAAS,wBAAT,EAAmC,UAAnC,CAA8C,YAAY;AAAA;;;;;;;;;;AASxD,MAAM,eAAe,SAAf,YAAe,CAAC,GAAD,EAAM,UAAN;AAAA,WAAqB,MAAK,IAAL,CAAU,GAAV,KAAkB,UAAvC;AAAA,GAArB;;AAEA,MAAI,CAAC,KAAK,IAAL,CAAU,KAAf,EAAsB;AACpB,UAAM,IAAI,OAAO,KAAX,CAAiB,UAAjB,EAA6B,4CAA7B,CAAN;AACD;;AAED,MAAI,KAAK,IAAL,CAAU,OAAd,EAAuB;AACrB,UAAM,IAAI,OAAO,KAAX,CAAiB,mBAAjB,EAAsC,4BAAtC,CAAN;AACD;;AAED,MAAI,eAAJ;AAAA,MAAY,oBAAZ;AAAA,MACE,QAAQ,KAAK,IAAL,CAAU,KADpB;AAAA,MAEE,aAAa,aAAa,YAAb,EAA2B,KAA3B,CAFf;AAAA,MAGE,aAAa,aAAa,YAAb,EAA2B,MAAM,MAAN,CAAa,MAAb,CAAoB,CAApB,CAA3B,CAHf;AAAA,MAIE,cAAc,aAAa,aAAb,EAA4B,UAA5B,CAJhB;AAAA,MAKE,sBAAsB,aAAa,qBAAb,EAAoC,UAAC,CAAD;AAAA,WAAO,CAAP;AAAA,GAApC,CALxB;AAAA,MAME,qBAAqB,SACnB,aAAa,kBAAb,EAAiC,8CAAjC,CADmB,CANvB;;AAUA,MAAM,SAAS,KAAK,CAAL,CAAO,QAAP,EAAiB,SAAjB,CAA2B,oBAAoB;AAC5D,0BAD4D;AAE5D,0BAF4D;AAG5D,4BAH4D;AAI5D,YAAQ,KAJoD;AAK5D,aAAS,IALmD;AAM5D,YAAQ;AACN;AAAQ,wBAAC,IAAD,EAAO,MAAP;AAAA,iBAAkB,MAAM,cAAN,CAAqB,kBAArB,EAAyC;AACjE,iBAAK,IAD4D;AAEjE,iBAAK,KAAK,GAFuD;AAGjE,mBAAO,EAAE,GAAF,CAAM,IAAN,EAAY,UAAZ;AAH0D,WAAzC,CAAlB;AAAA;;AAAR;AAAA;AADM,KANoD;AAa5D;AAAM,oBAAC,KAAD,EAAQ,QAAR,EAAqB;AACzB,YAAI,WAAJ,EAAiB;AACf,sBAAY,IAAZ;AACD;;AAED,sBAAc,QAAQ,OAAR,CAAgB,YAAM;AAClC,cAAI,SAAS,MAAM,MAAN,CAAa,KAAb,CAAb;AAAA,cACE,OAAO,OAAO,KAAP,EADT;;AAGA,cAAI,MAAJ,EAAY;AACV,yBAAa,MAAb;AACD;;AAED,mBAAS,WAAW,YAAM;AACxB,mBAAO,CAAP,EAAU,SAAV,CAAoB,YAApB;AACA,qBAAS,IAAT;AACD,WAHQ,EAGN,GAHM,CAAT;AAID,SAZa,CAAd;AAaD;;AAlBD;AAAA;AAb4D,GAApB,CAA3B,CAAf;AAiCD,CA9DD,2H","file":"/packages/easysearch_autosuggest.js","sourcesContent":["\nTemplate.__checkName(\"EasySearch.Autosuggest\");\nTemplate[\"EasySearch.Autosuggest\"] = new Template(\"Template.EasySearch.Autosuggest\", (function() {\n  var view = this;\n  return HTML.SELECT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"attributes\"));\n  }));\n}));\n\nTemplate.__checkName(\"EasySarch.Autogguest.DefaultRenderSuggestion\");\nTemplate[\"EasySarch.Autogguest.DefaultRenderSuggestion\"] = new Template(\"Template.EasySarch.Autogguest.DefaultRenderSuggestion\", (function() {\n  var view = this;\n  return HTML.DIV(\"\\n    \", HTML.SPAN({\n    \"class\": \"autosuggest-title\"\n  }, HTML.SPAN({\n    \"class\": \"name\"\n  }, Blaze.View(\"lookup:label\", function() {\n    return Spacebars.mustache(view.lookup(\"label\"));\n  }))), \"\\n  \");\n}));\n","Template['EasySearch.Autosuggest'].onRendered(function () {\n  /**\n   * Helper function to return data for the autosuggest component.\n   *\n   * @param {String} val        Value to return\n   * @param {*}      defaultVal Optional default value to provide\n   *\n   * @return {*}\n   */\n  const getDataValue = (val, defaultVal) => this.data[val] || defaultVal;\n\n  if (!this.data.index) {\n    throw new Meteor.Error('no-index', 'Please provide an index for your component');\n  }\n\n  if (this.data.indexes) {\n    throw new Meteor.Error('only-single-index', 'Can only specify one index');\n  }\n\n  let handle, computation,\n    index = this.data.index,\n    valueField = getDataValue('valueField', '_id'),\n    labelField = getDataValue('labelField', index.config.fields[0]),\n    searchField = getDataValue('searchField', labelField),\n    changeConfiguration = getDataValue('changeConfiguration', (c) => c),\n    suggestionTemplate = Template[\n      getDataValue('renderSuggestion', 'EasySarch.Autogguest.DefaultRenderSuggestion')\n    ];\n\n  const select = this.$('select').selectize(changeConfiguration({\n    valueField,\n    labelField,\n    searchField,\n    create: false,\n    preload: true,\n    render: {\n      option: (item, escape) => Blaze.toHTMLWithData(suggestionTemplate, {\n        doc: item,\n        _id: item._id,\n        label: _.get(item, labelField)\n      })\n    },\n    load: (query, callback) => {\n      if (computation) {\n        computation.stop();\n      }\n\n      computation = Tracker.autorun(() => {\n        let cursor = index.search(query),\n          docs = cursor.fetch();\n\n        if (handle) {\n          clearTimeout(handle);\n        }\n\n        handle = setTimeout(() => {\n          select[0].selectize.clearOptions();\n          callback(docs);\n        }, 100);\n      });\n    }\n  }));\n});\n"]}}]