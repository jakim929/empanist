[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar _ = Package.underscore._;\nvar assert = Package['peerlibrary:assert'].assert;\nvar ReactiveField = Package['peerlibrary:reactive-field'].ReactiveField;\nvar ComputedField = Package['peerlibrary:computed-field'].ComputedField;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar __coffeescriptShare, BaseComponent, BaseComponentDebug;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// packages/peerlibrary_base-component/packages/peerlibrary_base-component.js                                      //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\n(function () {                                                                                                     // 1\n                                                                                                                   // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/lib.coffee.js                                                            //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ComponentsNamespace, addComponentChildDeprecationWarning, arrayReferenceEquals, childrenComponentsDeprecationWarning, childrenComponentsWithDeprecationWarning, componentChildrenDeprecationWarning, componentChildrenWithDeprecationWarning, componentParentDeprecationWarning, createNamespace, getComponent, getNamespace, getPathAndName, removeComponentChildDeprecationWarning, setComponent,               \n  __hasProp = {}.hasOwnProperty,                                                                                   // 11\n  __slice = [].slice;                                                                                              // 12\n                                                                                                                   // 13\narrayReferenceEquals = function(a, b) {                                                                            // 14\n  var i, _i, _ref;                                                                                                 // 15\n  if (a.length !== b.length) {                                                                                     // 16\n    return false;                                                                                                  // 17\n  }                                                                                                                // 18\n  for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {              // 19\n    if (a[i] !== b[i]) {                                                                                           // 20\n      return false;                                                                                                // 21\n    }                                                                                                              // 22\n  }                                                                                                                // 23\n  return true;                                                                                                     // 24\n};                                                                                                                 // 25\n                                                                                                                   // 26\nComponentsNamespace = (function() {                                                                                // 27\n  function ComponentsNamespace() {}                                                                                // 28\n                                                                                                                   // 29\n  ComponentsNamespace.COMPONENTS_FIELD = '';                                                                       // 30\n                                                                                                                   // 31\n  return ComponentsNamespace;                                                                                      // 32\n                                                                                                                   // 33\n})();                                                                                                              // 34\n                                                                                                                   // 35\ngetPathAndName = function(name) {                                                                                  // 36\n  var path;                                                                                                        // 37\n  assert(name);                                                                                                    // 38\n  path = name.split('.');                                                                                          // 39\n  name = path.pop();                                                                                               // 40\n  assert(name);                                                                                                    // 41\n  return {                                                                                                         // 42\n    path: path,                                                                                                    // 43\n    name: name                                                                                                     // 44\n  };                                                                                                               // 45\n};                                                                                                                 // 46\n                                                                                                                   // 47\ngetNamespace = function(components, path) {                                                                        // 48\n  var match, segment;                                                                                              // 49\n  assert(_.isObject(components));                                                                                  // 50\n  assert(_.isArray(path));                                                                                         // 51\n  match = components;                                                                                              // 52\n  while ((segment = path.shift()) != null) {                                                                       // 53\n    match = match[segment];                                                                                        // 54\n    if (!_.isObject(match)) {                                                                                      // 55\n      return null;                                                                                                 // 56\n    }                                                                                                              // 57\n  }                                                                                                                // 58\n  if (!_.isObject(match)) {                                                                                        // 59\n    return null;                                                                                                   // 60\n  }                                                                                                                // 61\n  return match || null;                                                                                            // 62\n};                                                                                                                 // 63\n                                                                                                                   // 64\ncreateNamespace = function(components, path) {                                                                     // 65\n  var match, segment;                                                                                              // 66\n  assert(_.isObject(components));                                                                                  // 67\n  assert(_.isArray(path));                                                                                         // 68\n  match = components;                                                                                              // 69\n  while ((segment = path.shift()) != null) {                                                                       // 70\n    if (!(segment in match)) {                                                                                     // 71\n      match[segment] = new components.constructor();                                                               // 72\n    }                                                                                                              // 73\n    match = match[segment];                                                                                        // 74\n    assert(_.isObject(match));                                                                                     // 75\n  }                                                                                                                // 76\n  assert(_.isObject(match));                                                                                       // 77\n  return match;                                                                                                    // 78\n};                                                                                                                 // 79\n                                                                                                                   // 80\ngetComponent = function(components, name) {                                                                        // 81\n  var namespace, path, _ref, _ref1;                                                                                // 82\n  assert(_.isObject(components));                                                                                  // 83\n  if (!name) {                                                                                                     // 84\n    return null;                                                                                                   // 85\n  }                                                                                                                // 86\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;                                                 // 87\n  namespace = getNamespace(components, path);                                                                      // 88\n  if (!namespace) {                                                                                                // 89\n    return null;                                                                                                   // 90\n  }                                                                                                                // 91\n  return ((_ref1 = namespace[components.constructor.COMPONENTS_FIELD]) != null ? _ref1[name] : void 0) || null;    // 92\n};                                                                                                                 // 93\n                                                                                                                   // 94\nsetComponent = function(components, name, component) {                                                             // 95\n  var namespace, path, _name, _ref;                                                                                // 96\n  assert(_.isObject(components));                                                                                  // 97\n  assert(name);                                                                                                    // 98\n  assert(component);                                                                                               // 99\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;                                                 // 100\n  namespace = createNamespace(components, path);                                                                   // 101\n  if (namespace[_name = components.constructor.COMPONENTS_FIELD] == null) {                                        // 102\n    namespace[_name] = new components.constructor();                                                               // 103\n  }                                                                                                                // 104\n  assert(!(name in namespace[components.constructor.COMPONENTS_FIELD]));                                           // 105\n  return namespace[components.constructor.COMPONENTS_FIELD][name] = component;                                     // 106\n};                                                                                                                 // 107\n                                                                                                                   // 108\ncomponentChildrenDeprecationWarning = false;                                                                       // 109\n                                                                                                                   // 110\ncomponentChildrenWithDeprecationWarning = false;                                                                   // 111\n                                                                                                                   // 112\naddComponentChildDeprecationWarning = false;                                                                       // 113\n                                                                                                                   // 114\nremoveComponentChildDeprecationWarning = false;                                                                    // 115\n                                                                                                                   // 116\ncomponentParentDeprecationWarning = false;                                                                         // 117\n                                                                                                                   // 118\nchildrenComponentsDeprecationWarning = false;                                                                      // 119\n                                                                                                                   // 120\nchildrenComponentsWithDeprecationWarning = false;                                                                  // 121\n                                                                                                                   // 122\nBaseComponent = (function() {                                                                                      // 123\n  function BaseComponent() {}                                                                                      // 124\n                                                                                                                   // 125\n  BaseComponent.components = new ComponentsNamespace();                                                            // 126\n                                                                                                                   // 127\n  BaseComponent.register = function(componentName, componentClass) {                                               // 128\n    if (!componentName) {                                                                                          // 129\n      throw new Error(\"Component name is required for registration.\");                                             // 130\n    }                                                                                                              // 131\n    if (componentClass == null) {                                                                                  // 132\n      componentClass = this;                                                                                       // 133\n    }                                                                                                              // 134\n    if (getComponent(this.components, componentName)) {                                                            // 135\n      throw new Error(\"Component '\" + componentName + \"' already registered.\");                                    // 136\n    }                                                                                                              // 137\n    if (componentClass.componentName() && componentClass.componentName() !== componentName && getComponent(this.components, componentClass.componentName()) === componentClass) {\n      throw new Error(\"Component '\" + componentName + \"' already registered under the name '\" + (componentClass.componentName()) + \"'.\");\n    }                                                                                                              // 140\n    componentClass.componentName(componentName);                                                                   // 141\n    assert.equal(componentClass.componentName(), componentName);                                                   // 142\n    setComponent(this.components, componentName, componentClass);                                                  // 143\n    return this;                                                                                                   // 144\n  };                                                                                                               // 145\n                                                                                                                   // 146\n  BaseComponent.getComponent = function(componentsNamespace, componentName) {                                      // 147\n    if (!componentName) {                                                                                          // 148\n      componentName = componentsNamespace;                                                                         // 149\n      componentsNamespace = this.components;                                                                       // 150\n    }                                                                                                              // 151\n    if (!componentName) {                                                                                          // 152\n      return null;                                                                                                 // 153\n    }                                                                                                              // 154\n    if (!_.isString(componentName)) {                                                                              // 155\n      throw new Error(\"Component name '\" + componentName + \"' is not a string.\");                                  // 156\n    }                                                                                                              // 157\n    return getComponent(componentsNamespace, componentName);                                                       // 158\n  };                                                                                                               // 159\n                                                                                                                   // 160\n  BaseComponent.componentName = function(componentName) {                                                          // 161\n    if (componentName) {                                                                                           // 162\n      this._componentName = componentName;                                                                         // 163\n      return this;                                                                                                 // 164\n    }                                                                                                              // 165\n    return this._componentName || null;                                                                            // 166\n  };                                                                                                               // 167\n                                                                                                                   // 168\n  BaseComponent.prototype.componentName = function() {                                                             // 169\n    return this.constructor.componentName();                                                                       // 170\n  };                                                                                                               // 171\n                                                                                                                   // 172\n  BaseComponent.prototype.childComponents = function(nameOrComponent) {                                            // 173\n    var child, _base;                                                                                              // 174\n    if (this._componentInternals == null) {                                                                        // 175\n      this._componentInternals = {};                                                                               // 176\n    }                                                                                                              // 177\n    if ((_base = this._componentInternals).childComponents == null) {                                              // 178\n      _base.childComponents = new ReactiveField([], arrayReferenceEquals);                                         // 179\n    }                                                                                                              // 180\n    if (!nameOrComponent) {                                                                                        // 181\n      return (function() {                                                                                         // 182\n        var _i, _len, _ref, _results;                                                                              // 183\n        _ref = this._componentInternals.childComponents();                                                         // 184\n        _results = [];                                                                                             // 185\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                        // 186\n          child = _ref[_i];                                                                                        // 187\n          _results.push(child);                                                                                    // 188\n        }                                                                                                          // 189\n        return _results;                                                                                           // 190\n      }).call(this);                                                                                               // 191\n    }                                                                                                              // 192\n    if (_.isString(nameOrComponent)) {                                                                             // 193\n      return this.childComponentsWith((function(_this) {                                                           // 194\n        return function(child, parent) {                                                                           // 195\n          return child.componentName() === nameOrComponent;                                                        // 196\n        };                                                                                                         // 197\n      })(this));                                                                                                   // 198\n    } else {                                                                                                       // 199\n      return this.childComponentsWith((function(_this) {                                                           // 200\n        return function(child, parent) {                                                                           // 201\n          if (child.constructor === nameOrComponent) {                                                             // 202\n            return true;                                                                                           // 203\n          }                                                                                                        // 204\n          if (child === nameOrComponent) {                                                                         // 205\n            return true;                                                                                           // 206\n          }                                                                                                        // 207\n          return false;                                                                                            // 208\n        };                                                                                                         // 209\n      })(this));                                                                                                   // 210\n    }                                                                                                              // 211\n  };                                                                                                               // 212\n                                                                                                                   // 213\n  BaseComponent.prototype.childComponentsWith = function(propertyOrMatcherOrFunction) {                            // 214\n    var matcher, property, results;                                                                                // 215\n    if (_.isString(propertyOrMatcherOrFunction)) {                                                                 // 216\n      property = propertyOrMatcherOrFunction;                                                                      // 217\n      propertyOrMatcherOrFunction = (function(_this) {                                                             // 218\n        return function(child, parent) {                                                                           // 219\n          return property in child;                                                                                // 220\n        };                                                                                                         // 221\n      })(this);                                                                                                    // 222\n    } else if (!_.isFunction(propertyOrMatcherOrFunction)) {                                                       // 223\n      assert(_.isObject(propertyOrMatcherOrFunction));                                                             // 224\n      matcher = propertyOrMatcherOrFunction;                                                                       // 225\n      propertyOrMatcherOrFunction = (function(_this) {                                                             // 226\n        return function(child, parent) {                                                                           // 227\n          var value;                                                                                               // 228\n          for (property in matcher) {                                                                              // 229\n            value = matcher[property];                                                                             // 230\n            if (!(property in child)) {                                                                            // 231\n              return false;                                                                                        // 232\n            }                                                                                                      // 233\n            if (_.isFunction(child[property])) {                                                                   // 234\n              if (child[property]() !== value) {                                                                   // 235\n                return false;                                                                                      // 236\n              }                                                                                                    // 237\n            } else {                                                                                               // 238\n              if (child[property] !== value) {                                                                     // 239\n                return false;                                                                                      // 240\n              }                                                                                                    // 241\n            }                                                                                                      // 242\n          }                                                                                                        // 243\n          return true;                                                                                             // 244\n        };                                                                                                         // 245\n      })(this);                                                                                                    // 246\n    }                                                                                                              // 247\n    results = new ComputedField((function(_this) {                                                                 // 248\n      return function() {                                                                                          // 249\n        var child, _i, _len, _ref, _results;                                                                       // 250\n        _ref = _this.childComponents();                                                                            // 251\n        _results = [];                                                                                             // 252\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                        // 253\n          child = _ref[_i];                                                                                        // 254\n          if (propertyOrMatcherOrFunction.call(_this, child, _this)) {                                             // 255\n            _results.push(child);                                                                                  // 256\n          }                                                                                                        // 257\n        }                                                                                                          // 258\n        return _results;                                                                                           // 259\n      };                                                                                                           // 260\n    })(this), arrayReferenceEquals);                                                                               // 261\n    return results();                                                                                              // 262\n  };                                                                                                               // 263\n                                                                                                                   // 264\n  BaseComponent.prototype.addChildComponent = function(childComponent) {                                           // 265\n    var _base;                                                                                                     // 266\n    if (this._componentInternals == null) {                                                                        // 267\n      this._componentInternals = {};                                                                               // 268\n    }                                                                                                              // 269\n    if ((_base = this._componentInternals).childComponents == null) {                                              // 270\n      _base.childComponents = new ReactiveField([], arrayReferenceEquals);                                         // 271\n    }                                                                                                              // 272\n    this._componentInternals.childComponents(Tracker.nonreactive((function(_this) {                                // 273\n      return function() {                                                                                          // 274\n        return _this._componentInternals.childComponents().concat([childComponent]);                               // 275\n      };                                                                                                           // 276\n    })(this)));                                                                                                    // 277\n    return this;                                                                                                   // 278\n  };                                                                                                               // 279\n                                                                                                                   // 280\n  BaseComponent.prototype.removeChildComponent = function(childComponent) {                                        // 281\n    var _base;                                                                                                     // 282\n    if (this._componentInternals == null) {                                                                        // 283\n      this._componentInternals = {};                                                                               // 284\n    }                                                                                                              // 285\n    if ((_base = this._componentInternals).childComponents == null) {                                              // 286\n      _base.childComponents = new ReactiveField([], arrayReferenceEquals);                                         // 287\n    }                                                                                                              // 288\n    this._componentInternals.childComponents(Tracker.nonreactive((function(_this) {                                // 289\n      return function() {                                                                                          // 290\n        return _.without(_this._componentInternals.childComponents(), childComponent);                             // 291\n      };                                                                                                           // 292\n    })(this)));                                                                                                    // 293\n    return this;                                                                                                   // 294\n  };                                                                                                               // 295\n                                                                                                                   // 296\n  BaseComponent.prototype.parentComponent = function(parentComponent) {                                            // 297\n    var _base;                                                                                                     // 298\n    if (this._componentInternals == null) {                                                                        // 299\n      this._componentInternals = {};                                                                               // 300\n    }                                                                                                              // 301\n    if ((_base = this._componentInternals).parentComponent == null) {                                              // 302\n      _base.parentComponent = new ReactiveField(null, function(a, b) {                                             // 303\n        return a === b;                                                                                            // 304\n      });                                                                                                          // 305\n    }                                                                                                              // 306\n    if (!_.isUndefined(parentComponent)) {                                                                         // 307\n      this._componentInternals.parentComponent(parentComponent);                                                   // 308\n      return this;                                                                                                 // 309\n    }                                                                                                              // 310\n    return this._componentInternals.parentComponent();                                                             // 311\n  };                                                                                                               // 312\n                                                                                                                   // 313\n  BaseComponent.renderComponent = function(parentComponent) {                                                      // 314\n    throw new Error(\"Not implemented\");                                                                            // 315\n  };                                                                                                               // 316\n                                                                                                                   // 317\n  BaseComponent.prototype.renderComponent = function(parentComponent) {                                            // 318\n    throw new Error(\"Not implemented\");                                                                            // 319\n  };                                                                                                               // 320\n                                                                                                                   // 321\n  BaseComponent.extendComponent = function(constructor, methods) {                                                 // 322\n    var currentClass, property, value, _ref;                                                                       // 323\n    currentClass = this;                                                                                           // 324\n    if (!_.isFunction(constructor)) {                                                                              // 325\n      methods = constructor;                                                                                       // 326\n      constructor = function() {                                                                                   // 327\n        return constructor.__super__.constructor.apply(this, arguments);                                           // 328\n      };                                                                                                           // 329\n    }                                                                                                              // 330\n    constructor.prototype = Object.create(currentClass.prototype);                                                 // 331\n    constructor.prototype.constructor = constructor;                                                               // 332\n    for (property in currentClass) {                                                                               // 333\n      if (!__hasProp.call(currentClass, property)) continue;                                                       // 334\n      value = currentClass[property];                                                                              // 335\n      constructor[property] = value;                                                                               // 336\n    }                                                                                                              // 337\n    constructor.__super__ = currentClass.prototype;                                                                // 338\n    _ref = methods || {};                                                                                          // 339\n    for (property in _ref) {                                                                                       // 340\n      if (!__hasProp.call(_ref, property)) continue;                                                               // 341\n      value = _ref[property];                                                                                      // 342\n      constructor.prototype[property] = value;                                                                     // 343\n    }                                                                                                              // 344\n    return constructor;                                                                                            // 345\n  };                                                                                                               // 346\n                                                                                                                   // 347\n  BaseComponent.prototype.componentChildren = function() {                                                         // 348\n    var args;                                                                                                      // 349\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                                // 350\n    if (!componentChildrenDeprecationWarning) {                                                                    // 351\n      componentChildrenDeprecationWarning = true;                                                                  // 352\n      if (typeof console !== \"undefined\" && console !== null) {                                                    // 353\n        console.warn(\"componentChildren has been deprecated. Use childComponents instead.\");                       // 354\n      }                                                                                                            // 355\n    }                                                                                                              // 356\n    return this.childComponents.apply(this, args);                                                                 // 357\n  };                                                                                                               // 358\n                                                                                                                   // 359\n  BaseComponent.prototype.componentChildrenWith = function() {                                                     // 360\n    var args;                                                                                                      // 361\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                                // 362\n    if (!componentChildrenWithDeprecationWarning) {                                                                // 363\n      componentChildrenWithDeprecationWarning = true;                                                              // 364\n      if (typeof console !== \"undefined\" && console !== null) {                                                    // 365\n        console.warn(\"componentChildrenWith has been deprecated. Use childComponentsWith instead.\");               // 366\n      }                                                                                                            // 367\n    }                                                                                                              // 368\n    return this.childComponentsWith.apply(this, args);                                                             // 369\n  };                                                                                                               // 370\n                                                                                                                   // 371\n  BaseComponent.prototype.addComponentChild = function() {                                                         // 372\n    var args;                                                                                                      // 373\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                                // 374\n    if (!addComponentChildDeprecationWarning) {                                                                    // 375\n      addComponentChildDeprecationWarning = true;                                                                  // 376\n      if (typeof console !== \"undefined\" && console !== null) {                                                    // 377\n        console.warn(\"addComponentChild has been deprecated. Use addChildComponent instead.\");                     // 378\n      }                                                                                                            // 379\n    }                                                                                                              // 380\n    return this.addChildComponent.apply(this, args);                                                               // 381\n  };                                                                                                               // 382\n                                                                                                                   // 383\n  BaseComponent.prototype.removeComponentChild = function() {                                                      // 384\n    var args;                                                                                                      // 385\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                                // 386\n    if (!removeComponentChildDeprecationWarning) {                                                                 // 387\n      removeComponentChildDeprecationWarning = true;                                                               // 388\n      if (typeof console !== \"undefined\" && console !== null) {                                                    // 389\n        console.warn(\"removeComponentChild has been deprecated. Use removeChildComponent instead.\");               // 390\n      }                                                                                                            // 391\n    }                                                                                                              // 392\n    return this.removeChildComponent.apply(this, args);                                                            // 393\n  };                                                                                                               // 394\n                                                                                                                   // 395\n  BaseComponent.prototype.componentParent = function() {                                                           // 396\n    var args;                                                                                                      // 397\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                                // 398\n    if (!componentParentDeprecationWarning) {                                                                      // 399\n      componentParentDeprecationWarning = true;                                                                    // 400\n      if (typeof console !== \"undefined\" && console !== null) {                                                    // 401\n        console.warn(\"componentParent has been deprecated. Use parentComponent instead.\");                         // 402\n      }                                                                                                            // 403\n    }                                                                                                              // 404\n    return this.parentComponent.apply(this, args);                                                                 // 405\n  };                                                                                                               // 406\n                                                                                                                   // 407\n  BaseComponent.prototype.childrenComponents = function() {                                                        // 408\n    var args;                                                                                                      // 409\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                                // 410\n    if (!componentChildrenDeprecationWarning) {                                                                    // 411\n      componentChildrenDeprecationWarning = true;                                                                  // 412\n      if (typeof console !== \"undefined\" && console !== null) {                                                    // 413\n        console.warn(\"childrenComponents has been deprecated. Use childComponents instead.\");                      // 414\n      }                                                                                                            // 415\n    }                                                                                                              // 416\n    return this.childComponents.apply(this, args);                                                                 // 417\n  };                                                                                                               // 418\n                                                                                                                   // 419\n  BaseComponent.prototype.childrenComponentsWith = function() {                                                    // 420\n    var args;                                                                                                      // 421\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                                // 422\n    if (!componentChildrenWithDeprecationWarning) {                                                                // 423\n      componentChildrenWithDeprecationWarning = true;                                                              // 424\n      if (typeof console !== \"undefined\" && console !== null) {                                                    // 425\n        console.warn(\"childrenComponentsWith has been deprecated. Use childComponentsWith instead.\");              // 426\n      }                                                                                                            // 427\n    }                                                                                                              // 428\n    return this.childComponentsWith.apply(this, args);                                                             // 429\n  };                                                                                                               // 430\n                                                                                                                   // 431\n  return BaseComponent;                                                                                            // 432\n                                                                                                                   // 433\n})();                                                                                                              // 434\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   // 436\n}).call(this);                                                                                                     // 437\n                                                                                                                   // 438\n                                                                                                                   // 439\n                                                                                                                   // 440\n                                                                                                                   // 441\n                                                                                                                   // 442\n                                                                                                                   // 443\n(function () {                                                                                                     // 444\n                                                                                                                   // 445\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/debug.coffee.js                                                          //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                                                                                                                   // 453\n                                                                                                                   // 454\nBaseComponentDebug = (function() {                                                                                 // 455\n  function BaseComponentDebug() {}                                                                                 // 456\n                                                                                                                   // 457\n  BaseComponentDebug.startComponent = function(component) {                                                        // 458\n    var name;                                                                                                      // 459\n    name = component.componentName() || 'unnamed';                                                                 // 460\n    console.group(name);                                                                                           // 461\n    return console.log('%o', component);                                                                           // 462\n  };                                                                                                               // 463\n                                                                                                                   // 464\n  BaseComponentDebug.endComponent = function(component) {                                                          // 465\n    return console.groupEnd();                                                                                     // 466\n  };                                                                                                               // 467\n                                                                                                                   // 468\n  BaseComponentDebug.startMarkedComponent = function(component) {                                                  // 469\n    var name;                                                                                                      // 470\n    name = component.componentName() || 'unnamed';                                                                 // 471\n    console.group('%c%s', 'text-decoration: underline', name);                                                     // 472\n    return console.log('%o', component);                                                                           // 473\n  };                                                                                                               // 474\n                                                                                                                   // 475\n  BaseComponentDebug.endMarkedComponent = function(component) {                                                    // 476\n    return this.endComponent(component);                                                                           // 477\n  };                                                                                                               // 478\n                                                                                                                   // 479\n  BaseComponentDebug.dumpComponentSubtree = function(rootComponent, _markComponent) {                              // 480\n    var child, marked, _i, _len, _ref;                                                                             // 481\n    if (_markComponent == null) {                                                                                  // 482\n      _markComponent = (function() {});                                                                            // 483\n    }                                                                                                              // 484\n    if (!rootComponent) {                                                                                          // 485\n      return;                                                                                                      // 486\n    }                                                                                                              // 487\n    marked = _markComponent(rootComponent);                                                                        // 488\n    if (marked) {                                                                                                  // 489\n      this.startMarkedComponent(rootComponent);                                                                    // 490\n    } else {                                                                                                       // 491\n      this.startComponent(rootComponent);                                                                          // 492\n    }                                                                                                              // 493\n    _ref = rootComponent.childComponents();                                                                        // 494\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {                                                            // 495\n      child = _ref[_i];                                                                                            // 496\n      this.dumpComponentSubtree(child, _markComponent);                                                            // 497\n    }                                                                                                              // 498\n    if (marked) {                                                                                                  // 499\n      this.endMarkedComponent(rootComponent);                                                                      // 500\n    } else {                                                                                                       // 501\n      this.endComponent(rootComponent);                                                                            // 502\n    }                                                                                                              // 503\n  };                                                                                                               // 504\n                                                                                                                   // 505\n  BaseComponentDebug.componentRoot = function(component) {                                                         // 506\n    var parentComponent;                                                                                           // 507\n    while (parentComponent = component.parentComponent()) {                                                        // 508\n      component = parentComponent;                                                                                 // 509\n    }                                                                                                              // 510\n    return component;                                                                                              // 511\n  };                                                                                                               // 512\n                                                                                                                   // 513\n  BaseComponentDebug.dumpComponentTree = function(component) {                                                     // 514\n    if (!component) {                                                                                              // 515\n      return;                                                                                                      // 516\n    }                                                                                                              // 517\n    return this.dumpComponentSubtree(this.componentRoot(component), function(c) {                                  // 518\n      return c === component;                                                                                      // 519\n    });                                                                                                            // 520\n  };                                                                                                               // 521\n                                                                                                                   // 522\n  return BaseComponentDebug;                                                                                       // 523\n                                                                                                                   // 524\n})();                                                                                                              // 525\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   // 527\n}).call(this);                                                                                                     // 528\n                                                                                                                   // 529\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['peerlibrary:base-component'] = {}, {\n  BaseComponent: BaseComponent,\n  BaseComponentDebug: BaseComponentDebug\n});\n\n})();\n","servePath":"/packages/peerlibrary_base-component.js","sourceMap":{"version":3,"sources":["/packages/peerlibrary_base-component/packages/peerlibrary_base-component.js"],"names":[],"mappingsyH","file":"/packages/peerlibrary_base-component.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/lib.coffee.js                                                            //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ComponentsNamespace, addComponentChildDeprecationWarning, arrayReferenceEquals, childrenComponentsDeprecationWarning, childrenComponentsWithDeprecationWarning, componentChildrenDeprecationWarning, componentChildrenWithDeprecationWarning, componentParentDeprecationWarning, createNamespace, getComponent, getNamespace, getPathAndName, removeComponentChildDeprecationWarning, setComponent,               \n  __hasProp = {}.hasOwnProperty,\n  __slice = [].slice;\n\narrayReferenceEquals = function(a, b) {\n  var i, _i, _ref;\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nComponentsNamespace = (function() {\n  function ComponentsNamespace() {}\n\n  ComponentsNamespace.COMPONENTS_FIELD = '';\n\n  return ComponentsNamespace;\n\n})();\n\ngetPathAndName = function(name) {\n  var path;\n  assert(name);\n  path = name.split('.');\n  name = path.pop();\n  assert(name);\n  return {\n    path: path,\n    name: name\n  };\n};\n\ngetNamespace = function(components, path) {\n  var match, segment;\n  assert(_.isObject(components));\n  assert(_.isArray(path));\n  match = components;\n  while ((segment = path.shift()) != null) {\n    match = match[segment];\n    if (!_.isObject(match)) {\n      return null;\n    }\n  }\n  if (!_.isObject(match)) {\n    return null;\n  }\n  return match || null;\n};\n\ncreateNamespace = function(components, path) {\n  var match, segment;\n  assert(_.isObject(components));\n  assert(_.isArray(path));\n  match = components;\n  while ((segment = path.shift()) != null) {\n    if (!(segment in match)) {\n      match[segment] = new components.constructor();\n    }\n    match = match[segment];\n    assert(_.isObject(match));\n  }\n  assert(_.isObject(match));\n  return match;\n};\n\ngetComponent = function(components, name) {\n  var namespace, path, _ref, _ref1;\n  assert(_.isObject(components));\n  if (!name) {\n    return null;\n  }\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;\n  namespace = getNamespace(components, path);\n  if (!namespace) {\n    return null;\n  }\n  return ((_ref1 = namespace[components.constructor.COMPONENTS_FIELD]) != null ? _ref1[name] : void 0) || null;\n};\n\nsetComponent = function(components, name, component) {\n  var namespace, path, _name, _ref;\n  assert(_.isObject(components));\n  assert(name);\n  assert(component);\n  _ref = getPathAndName(name), path = _ref.path, name = _ref.name;\n  namespace = createNamespace(components, path);\n  if (namespace[_name = components.constructor.COMPONENTS_FIELD] == null) {\n    namespace[_name] = new components.constructor();\n  }\n  assert(!(name in namespace[components.constructor.COMPONENTS_FIELD]));\n  return namespace[components.constructor.COMPONENTS_FIELD][name] = component;\n};\n\ncomponentChildrenDeprecationWarning = false;\n\ncomponentChildrenWithDeprecationWarning = false;\n\naddComponentChildDeprecationWarning = false;\n\nremoveComponentChildDeprecationWarning = false;\n\ncomponentParentDeprecationWarning = false;\n\nchildrenComponentsDeprecationWarning = false;\n\nchildrenComponentsWithDeprecationWarning = false;\n\nBaseComponent = (function() {\n  function BaseComponent() {}\n\n  BaseComponent.components = new ComponentsNamespace();\n\n  BaseComponent.register = function(componentName, componentClass) {\n    if (!componentName) {\n      throw new Error(\"Component name is required for registration.\");\n    }\n    if (componentClass == null) {\n      componentClass = this;\n    }\n    if (getComponent(this.components, componentName)) {\n      throw new Error(\"Component '\" + componentName + \"' already registered.\");\n    }\n    if (componentClass.componentName() && componentClass.componentName() !== componentName && getComponent(this.components, componentClass.componentName()) === componentClass) {\n      throw new Error(\"Component '\" + componentName + \"' already registered under the name '\" + (componentClass.componentName()) + \"'.\");\n    }\n    componentClass.componentName(componentName);\n    assert.equal(componentClass.componentName(), componentName);\n    setComponent(this.components, componentName, componentClass);\n    return this;\n  };\n\n  BaseComponent.getComponent = function(componentsNamespace, componentName) {\n    if (!componentName) {\n      componentName = componentsNamespace;\n      componentsNamespace = this.components;\n    }\n    if (!componentName) {\n      return null;\n    }\n    if (!_.isString(componentName)) {\n      throw new Error(\"Component name '\" + componentName + \"' is not a string.\");\n    }\n    return getComponent(componentsNamespace, componentName);\n  };\n\n  BaseComponent.componentName = function(componentName) {\n    if (componentName) {\n      this._componentName = componentName;\n      return this;\n    }\n    return this._componentName || null;\n  };\n\n  BaseComponent.prototype.componentName = function() {\n    return this.constructor.componentName();\n  };\n\n  BaseComponent.prototype.childComponents = function(nameOrComponent) {\n    var child, _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).childComponents == null) {\n      _base.childComponents = new ReactiveField([], arrayReferenceEquals);\n    }\n    if (!nameOrComponent) {\n      return (function() {\n        var _i, _len, _ref, _results;\n        _ref = this._componentInternals.childComponents();\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          _results.push(child);\n        }\n        return _results;\n      }).call(this);\n    }\n    if (_.isString(nameOrComponent)) {\n      return this.childComponentsWith((function(_this) {\n        return function(child, parent) {\n          return child.componentName() === nameOrComponent;\n        };\n      })(this));\n    } else {\n      return this.childComponentsWith((function(_this) {\n        return function(child, parent) {\n          if (child.constructor === nameOrComponent) {\n            return true;\n          }\n          if (child === nameOrComponent) {\n            return true;\n          }\n          return false;\n        };\n      })(this));\n    }\n  };\n\n  BaseComponent.prototype.childComponentsWith = function(propertyOrMatcherOrFunction) {\n    var matcher, property, results;\n    if (_.isString(propertyOrMatcherOrFunction)) {\n      property = propertyOrMatcherOrFunction;\n      propertyOrMatcherOrFunction = (function(_this) {\n        return function(child, parent) {\n          return property in child;\n        };\n      })(this);\n    } else if (!_.isFunction(propertyOrMatcherOrFunction)) {\n      assert(_.isObject(propertyOrMatcherOrFunction));\n      matcher = propertyOrMatcherOrFunction;\n      propertyOrMatcherOrFunction = (function(_this) {\n        return function(child, parent) {\n          var value;\n          for (property in matcher) {\n            value = matcher[property];\n            if (!(property in child)) {\n              return false;\n            }\n            if (_.isFunction(child[property])) {\n              if (child[property]() !== value) {\n                return false;\n              }\n            } else {\n              if (child[property] !== value) {\n                return false;\n              }\n            }\n          }\n          return true;\n        };\n      })(this);\n    }\n    results = new ComputedField((function(_this) {\n      return function() {\n        var child, _i, _len, _ref, _results;\n        _ref = _this.childComponents();\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (propertyOrMatcherOrFunction.call(_this, child, _this)) {\n            _results.push(child);\n          }\n        }\n        return _results;\n      };\n    })(this), arrayReferenceEquals);\n    return results();\n  };\n\n  BaseComponent.prototype.addChildComponent = function(childComponent) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).childComponents == null) {\n      _base.childComponents = new ReactiveField([], arrayReferenceEquals);\n    }\n    this._componentInternals.childComponents(Tracker.nonreactive((function(_this) {\n      return function() {\n        return _this._componentInternals.childComponents().concat([childComponent]);\n      };\n    })(this)));\n    return this;\n  };\n\n  BaseComponent.prototype.removeChildComponent = function(childComponent) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).childComponents == null) {\n      _base.childComponents = new ReactiveField([], arrayReferenceEquals);\n    }\n    this._componentInternals.childComponents(Tracker.nonreactive((function(_this) {\n      return function() {\n        return _.without(_this._componentInternals.childComponents(), childComponent);\n      };\n    })(this)));\n    return this;\n  };\n\n  BaseComponent.prototype.parentComponent = function(parentComponent) {\n    var _base;\n    if (this._componentInternals == null) {\n      this._componentInternals = {};\n    }\n    if ((_base = this._componentInternals).parentComponent == null) {\n      _base.parentComponent = new ReactiveField(null, function(a, b) {\n        return a === b;\n      });\n    }\n    if (!_.isUndefined(parentComponent)) {\n      this._componentInternals.parentComponent(parentComponent);\n      return this;\n    }\n    return this._componentInternals.parentComponent();\n  };\n\n  BaseComponent.renderComponent = function(parentComponent) {\n    throw new Error(\"Not implemented\");\n  };\n\n  BaseComponent.prototype.renderComponent = function(parentComponent) {\n    throw new Error(\"Not implemented\");\n  };\n\n  BaseComponent.extendComponent = function(constructor, methods) {\n    var currentClass, property, value, _ref;\n    currentClass = this;\n    if (!_.isFunction(constructor)) {\n      methods = constructor;\n      constructor = function() {\n        return constructor.__super__.constructor.apply(this, arguments);\n      };\n    }\n    constructor.prototype = Object.create(currentClass.prototype);\n    constructor.prototype.constructor = constructor;\n    for (property in currentClass) {\n      if (!__hasProp.call(currentClass, property)) continue;\n      value = currentClass[property];\n      constructor[property] = value;\n    }\n    constructor.__super__ = currentClass.prototype;\n    _ref = methods || {};\n    for (property in _ref) {\n      if (!__hasProp.call(_ref, property)) continue;\n      value = _ref[property];\n      constructor.prototype[property] = value;\n    }\n    return constructor;\n  };\n\n  BaseComponent.prototype.componentChildren = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (!componentChildrenDeprecationWarning) {\n      componentChildrenDeprecationWarning = true;\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn(\"componentChildren has been deprecated. Use childComponents instead.\");\n      }\n    }\n    return this.childComponents.apply(this, args);\n  };\n\n  BaseComponent.prototype.componentChildrenWith = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (!componentChildrenWithDeprecationWarning) {\n      componentChildrenWithDeprecationWarning = true;\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn(\"componentChildrenWith has been deprecated. Use childComponentsWith instead.\");\n      }\n    }\n    return this.childComponentsWith.apply(this, args);\n  };\n\n  BaseComponent.prototype.addComponentChild = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (!addComponentChildDeprecationWarning) {\n      addComponentChildDeprecationWarning = true;\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn(\"addComponentChild has been deprecated. Use addChildComponent instead.\");\n      }\n    }\n    return this.addChildComponent.apply(this, args);\n  };\n\n  BaseComponent.prototype.removeComponentChild = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (!removeComponentChildDeprecationWarning) {\n      removeComponentChildDeprecationWarning = true;\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn(\"removeComponentChild has been deprecated. Use removeChildComponent instead.\");\n      }\n    }\n    return this.removeChildComponent.apply(this, args);\n  };\n\n  BaseComponent.prototype.componentParent = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (!componentParentDeprecationWarning) {\n      componentParentDeprecationWarning = true;\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn(\"componentParent has been deprecated. Use parentComponent instead.\");\n      }\n    }\n    return this.parentComponent.apply(this, args);\n  };\n\n  BaseComponent.prototype.childrenComponents = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (!componentChildrenDeprecationWarning) {\n      componentChildrenDeprecationWarning = true;\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn(\"childrenComponents has been deprecated. Use childComponents instead.\");\n      }\n    }\n    return this.childComponents.apply(this, args);\n  };\n\n  BaseComponent.prototype.childrenComponentsWith = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (!componentChildrenWithDeprecationWarning) {\n      componentChildrenWithDeprecationWarning = true;\n      if (typeof console !== \"undefined\" && console !== null) {\n        console.warn(\"childrenComponentsWith has been deprecated. Use childComponentsWith instead.\");\n      }\n    }\n    return this.childComponentsWith.apply(this, args);\n  };\n\n  return BaseComponent;\n\n})();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/peerlibrary:base-component/debug.coffee.js                                                          //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                       \n\nBaseComponentDebug = (function() {\n  function BaseComponentDebug() {}\n\n  BaseComponentDebug.startComponent = function(component) {\n    var name;\n    name = component.componentName() || 'unnamed';\n    console.group(name);\n    return console.log('%o', component);\n  };\n\n  BaseComponentDebug.endComponent = function(component) {\n    return console.groupEnd();\n  };\n\n  BaseComponentDebug.startMarkedComponent = function(component) {\n    var name;\n    name = component.componentName() || 'unnamed';\n    console.group('%c%s', 'text-decoration: underline', name);\n    return console.log('%o', component);\n  };\n\n  BaseComponentDebug.endMarkedComponent = function(component) {\n    return this.endComponent(component);\n  };\n\n  BaseComponentDebug.dumpComponentSubtree = function(rootComponent, _markComponent) {\n    var child, marked, _i, _len, _ref;\n    if (_markComponent == null) {\n      _markComponent = (function() {});\n    }\n    if (!rootComponent) {\n      return;\n    }\n    marked = _markComponent(rootComponent);\n    if (marked) {\n      this.startMarkedComponent(rootComponent);\n    } else {\n      this.startComponent(rootComponent);\n    }\n    _ref = rootComponent.childComponents();\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      child = _ref[_i];\n      this.dumpComponentSubtree(child, _markComponent);\n    }\n    if (marked) {\n      this.endMarkedComponent(rootComponent);\n    } else {\n      this.endComponent(rootComponent);\n    }\n  };\n\n  BaseComponentDebug.componentRoot = function(component) {\n    var parentComponent;\n    while (parentComponent = component.parentComponent()) {\n      component = parentComponent;\n    }\n    return component;\n  };\n\n  BaseComponentDebug.dumpComponentTree = function(component) {\n    if (!component) {\n      return;\n    }\n    return this.dumpComponentSubtree(this.componentRoot(component), function(c) {\n      return c === component;\n    });\n  };\n\n  return BaseComponentDebug;\n\n})();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]