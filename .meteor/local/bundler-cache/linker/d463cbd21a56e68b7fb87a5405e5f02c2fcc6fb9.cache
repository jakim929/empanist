[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar ComputedField = Package['peerlibrary:computed-field'].ComputedField;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar __coffeescriptShare, DataLookup;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// packages/peerlibrary_data-lookup/packages/peerlibrary_data-lookup.js //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\n(function () {                                                          // 1\n                                                                        // 2\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/peerlibrary:data-lookup/lib.coffee.js                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                                                                        // 10\n                                                                        // 11\nDataLookup = (function() {                                              // 12\n  function DataLookup() {}                                              // 13\n                                                                        // 14\n  DataLookup.lookup = function(obj, path) {                             // 15\n    var segment;                                                        // 16\n    if (_.isString(path)) {                                             // 17\n      path = path.split('.');                                           // 18\n    }                                                                   // 19\n    if (_.isFunction(obj)) {                                            // 20\n      obj = obj();                                                      // 21\n    }                                                                   // 22\n    if (!_.isArray(path)) {                                             // 23\n      return obj;                                                       // 24\n    }                                                                   // 25\n    while (path.length > 0) {                                           // 26\n      segment = path.shift();                                           // 27\n      if (_.isObject(obj) && segment in obj) {                          // 28\n        obj = obj[segment];                                             // 29\n        if (_.isFunction(obj)) {                                        // 30\n          obj = obj();                                                  // 31\n        }                                                               // 32\n      } else {                                                          // 33\n        return void 0;                                                  // 34\n      }                                                                 // 35\n    }                                                                   // 36\n    return obj;                                                         // 37\n  };                                                                    // 38\n                                                                        // 39\n  DataLookup.get = function(obj, path, equalsFunc) {                    // 40\n    var result;                                                         // 41\n    if (!Tracker.active) {                                              // 42\n      return this.lookup(obj, path);                                    // 43\n    }                                                                   // 44\n    result = new ComputedField((function(_this) {                       // 45\n      return function() {                                               // 46\n        return _this.lookup(obj, path);                                 // 47\n      };                                                                // 48\n    })(this), equalsFunc);                                              // 49\n    return result();                                                    // 50\n  };                                                                    // 51\n                                                                        // 52\n  return DataLookup;                                                    // 53\n                                                                        // 54\n})();                                                                   // 55\n///////////////////////////////////////////////////////////////////////\n                                                                        // 57\n}).call(this);                                                          // 58\n                                                                        // 59\n//////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['peerlibrary:data-lookup'] = {}, {\n  DataLookup: DataLookup\n});\n\n})();\n","servePath":"/packages/peerlibrary_data-lookup.js","sourceMap":{"version":3,"sources":["/packages/peerlibrary_data-lookup/packages/peerlibrary_data-lookup.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E","file":"/packages/peerlibrary_data-lookup.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/peerlibrary:data-lookup/lib.coffee.js                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n               \n\nDataLookup = (function() {\n  function DataLookup() {}\n\n  DataLookup.lookup = function(obj, path) {\n    var segment;\n    if (_.isString(path)) {\n      path = path.split('.');\n    }\n    if (_.isFunction(obj)) {\n      obj = obj();\n    }\n    if (!_.isArray(path)) {\n      return obj;\n    }\n    while (path.length > 0) {\n      segment = path.shift();\n      if (_.isObject(obj) && segment in obj) {\n        obj = obj[segment];\n        if (_.isFunction(obj)) {\n          obj = obj();\n        }\n      } else {\n        return void 0;\n      }\n    }\n    return obj;\n  };\n\n  DataLookup.get = function(obj, path, equalsFunc) {\n    var result;\n    if (!Tracker.active) {\n      return this.lookup(obj, path);\n    }\n    result = new ComputedField((function(_this) {\n      return function() {\n        return _this.lookup(obj, path);\n      };\n    })(this), equalsFunc);\n    return result();\n  };\n\n  return DataLookup;\n\n})();\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]